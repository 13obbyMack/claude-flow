{"version":3,"sources":["../../../../../src/ui/web-ui/core/ViewManager.js"],"sourcesContent":["/**\n * ViewManager - Dynamic view loading and state management\n * Handles all UI views, transitions, and state persistence\n */\n\nimport { EventBus } from './EventBus.js';\n\nexport class ViewManager {\n  constructor(eventBus) {\n    this.eventBus = eventBus;\n    this.registeredViews = new Map();\n    this.loadedViews = new Map();\n    this.currentView = null;\n    this.viewStack = [];\n    this.viewStates = new Map();\n    this.isInitialized = false;\n    this.containerElement = null;\n    this.transitionDuration = 300;\n  }\n\n  /**\n   * Initialize view manager\n   */\n  async initialize() {\n    try {\n      // Create main view container if in browser\n      if (typeof document !== 'undefined') {\n        this.setupDOMContainer();\n      }\n\n      // Setup event handlers\n      this.setupEventHandlers();\n\n      this.isInitialized = true;\n      this.eventBus.emit('view-manager:initialized');\n\n      console.log('🖼️ View Manager initialized');\n    } catch (error) {\n      console.error('❌ Failed to initialize View Manager:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Setup DOM container for web environment\n   */\n  setupDOMContainer() {\n    // Create main container\n    this.containerElement =\n      document.getElementById('claude-flow-ui') || document.createElement('div');\n\n    if (!this.containerElement.id) {\n      this.containerElement.id = 'claude-flow-ui';\n      this.containerElement.className = 'claude-flow-main-container';\n      document.body.appendChild(this.containerElement);\n    }\n\n    // Add CSS for transitions\n    this.addTransitionStyles();\n  }\n\n  /**\n   * Add CSS styles for view transitions\n   */\n  addTransitionStyles() {\n    if (document.getElementById('claude-flow-styles')) return;\n\n    const styles = document.createElement('style');\n    styles.id = 'claude-flow-styles';\n    styles.textContent = `\n      .claude-flow-main-container {\n        width: 100%;\n        height: 100vh;\n        overflow: hidden;\n        position: relative;\n        font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n        background: #1a1a1a;\n        color: #ffffff;\n      }\n\n      .claude-flow-view {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 1;\n        transform: translateX(0);\n        transition: all ${this.transitionDuration}ms ease-in-out;\n        overflow-y: auto;\n        padding: 20px;\n        box-sizing: border-box;\n      }\n\n      .claude-flow-view.entering {\n        opacity: 0;\n        transform: translateX(50px);\n      }\n\n      .claude-flow-view.exiting {\n        opacity: 0;\n        transform: translateX(-50px);\n      }\n\n      .claude-flow-view.hidden {\n        display: none;\n      }\n\n      .claude-flow-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 20px;\n        padding-bottom: 10px;\n        border-bottom: 1px solid #333;\n      }\n\n      .claude-flow-title {\n        font-size: 24px;\n        font-weight: bold;\n        color: #00d4ff;\n      }\n\n      .claude-flow-breadcrumb {\n        font-size: 14px;\n        color: #888;\n      }\n\n      .claude-flow-content {\n        flex: 1;\n        overflow-y: auto;\n      }\n\n      .claude-flow-loading {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 200px;\n        font-size: 18px;\n        color: #888;\n      }\n\n      .claude-flow-error {\n        background: #ff4444;\n        color: white;\n        padding: 15px;\n        border-radius: 5px;\n        margin: 10px 0;\n      }\n\n      /* Responsive design */\n      @media (max-width: 768px) {\n        .claude-flow-main-container {\n          padding: 10px;\n        }\n        \n        .claude-flow-view {\n          padding: 10px;\n        }\n        \n        .claude-flow-title {\n          font-size: 20px;\n        }\n      }\n    `;\n\n    document.head.appendChild(styles);\n  }\n\n  /**\n   * Register a view configuration\n   */\n  async registerView(viewConfig) {\n    if (!viewConfig.id || !viewConfig.component) {\n      throw new Error('View config must have id and component');\n    }\n\n    const config = {\n      id: viewConfig.id,\n      name: viewConfig.name || viewConfig.id,\n      icon: viewConfig.icon || '📄',\n      description: viewConfig.description || '',\n      component: viewConfig.component,\n      shortcut: viewConfig.shortcut,\n      toolCount: viewConfig.toolCount || 0,\n      lazy: viewConfig.lazy !== false, // Default to lazy loading\n      preload: viewConfig.preload || false,\n      permissions: viewConfig.permissions || [],\n      dependencies: viewConfig.dependencies || [],\n      metadata: viewConfig.metadata || {},\n    };\n\n    this.registeredViews.set(viewConfig.id, config);\n\n    // Preload if requested\n    if (config.preload) {\n      await this.preloadView(config.id);\n    }\n\n    this.eventBus.emit('view:registered', { viewId: config.id, config });\n\n    console.log(`🖼️ Registered view: ${config.name} (${config.id})`);\n  }\n\n  /**\n   * Load and display a view\n   */\n  async loadView(viewId, params = {}) {\n    if (!this.isInitialized) {\n      throw new Error('ViewManager not initialized');\n    }\n\n    const viewConfig = this.registeredViews.get(viewId);\n    if (!viewConfig) {\n      throw new Error(`View not registered: ${viewId}`);\n    }\n\n    try {\n      this.eventBus.emit('view:loading', { viewId, params });\n\n      // Check dependencies\n      await this.checkDependencies(viewConfig);\n\n      // Load view component if not already loaded\n      if (!this.loadedViews.has(viewId)) {\n        await this.loadViewComponent(viewId, viewConfig);\n      }\n\n      // Hide current view with transition\n      if (this.currentView && this.currentView !== viewId) {\n        await this.hideCurrentView();\n      }\n\n      // Show new view\n      await this.showView(viewId, params);\n\n      // Update state\n      this.currentView = viewId;\n      this.viewStates.set(viewId, {\n        params,\n        loadTime: Date.now(),\n        lastAccess: Date.now(),\n      });\n\n      this.eventBus.emit('view:loaded', { viewId, params });\n\n      console.log(`🖼️ Loaded view: ${viewConfig.name}`);\n    } catch (error) {\n      this.eventBus.emit('view:error', { viewId, error: error.message, params });\n      throw error;\n    }\n  }\n\n  /**\n   * Load view component\n   */\n  async loadViewComponent(viewId, viewConfig) {\n    try {\n      let ViewComponent;\n\n      // Check if we're in a browser environment\n      if (typeof document !== 'undefined') {\n        // Browser environment - create DOM-based view\n        ViewComponent = await this.createDOMView(viewId, viewConfig);\n      } else {\n        // Node.js environment - create terminal-based view\n        ViewComponent = await this.createTerminalView(viewId, viewConfig);\n      }\n\n      this.loadedViews.set(viewId, {\n        component: ViewComponent,\n        config: viewConfig,\n        element: ViewComponent.element || null,\n        instance: ViewComponent.instance || null,\n        loadTime: Date.now(),\n      });\n    } catch (error) {\n      console.error(`❌ Failed to load view component ${viewId}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create DOM-based view for browser\n   */\n  async createDOMView(viewId, viewConfig) {\n    const element = document.createElement('div');\n    element.className = 'claude-flow-view hidden';\n    element.id = `view-${viewId}`;\n\n    // Create view header\n    const header = document.createElement('div');\n    header.className = 'claude-flow-header';\n\n    const titleSection = document.createElement('div');\n    const title = document.createElement('h1');\n    title.className = 'claude-flow-title';\n    title.textContent = `${viewConfig.icon} ${viewConfig.name}`;\n\n    const breadcrumb = document.createElement('div');\n    breadcrumb.className = 'claude-flow-breadcrumb';\n    breadcrumb.textContent = viewConfig.description;\n\n    titleSection.appendChild(title);\n    titleSection.appendChild(breadcrumb);\n    header.appendChild(titleSection);\n\n    // Create view content\n    const content = document.createElement('div');\n    content.className = 'claude-flow-content';\n    content.id = `content-${viewId}`;\n\n    element.appendChild(header);\n    element.appendChild(content);\n    this.containerElement.appendChild(element);\n\n    // Create view instance based on component type\n    let instance;\n    try {\n      // Try to dynamically import the view component\n      const module = await this.importViewComponent(viewConfig.component);\n      instance = new module.default(content, this.eventBus, viewConfig);\n    } catch (error) {\n      // Fallback to basic view\n      instance = this.createBasicView(content, viewConfig);\n    }\n\n    return {\n      element,\n      instance,\n      render: (params) => instance.render(params),\n      destroy: () => instance.destroy?.(),\n    };\n  }\n\n  /**\n   * Create terminal-based view for Node.js\n   */\n  async createTerminalView(viewId, viewConfig) {\n    // For terminal environment, create a text-based view\n    let instance;\n    try {\n      const module = await this.importViewComponent(viewConfig.component);\n      instance = new module.default(null, this.eventBus, viewConfig);\n    } catch (error) {\n      instance = this.createBasicTerminalView(viewConfig);\n    }\n\n    return {\n      element: null,\n      instance,\n      render: (params) => instance.render(params),\n      destroy: () => instance.destroy?.(),\n    };\n  }\n\n  /**\n   * Import view component dynamically\n   */\n  async importViewComponent(componentName) {\n    try {\n      // Try to import from views directory\n      return await import(`../views/${componentName}.js`);\n    } catch (error) {\n      console.warn(`Could not import ${componentName}, using fallback`);\n      throw error;\n    }\n  }\n\n  /**\n   * Create basic fallback view for browser\n   */\n  createBasicView(container, viewConfig) {\n    return {\n      render: (params) => {\n        container.innerHTML = `\n          <div class=\"claude-flow-loading\">\n            <div>\n              <h2>${viewConfig.name}</h2>\n              <p>${viewConfig.description}</p>\n              <p>This view is under development.</p>\n              ${viewConfig.toolCount ? `<p>Will support ${viewConfig.toolCount} tools.</p>` : ''}\n              <pre>${JSON.stringify(params, null, 2)}</pre>\n            </div>\n          </div>\n        `;\n      },\n      destroy: () => {\n        container.innerHTML = '';\n      },\n    };\n  }\n\n  /**\n   * Create basic fallback view for terminal\n   */\n  createBasicTerminalView(viewConfig) {\n    return {\n      render: (params) => {\n        console.log(`\\n📄 ${viewConfig.name}`);\n        console.log(`   ${viewConfig.description}`);\n        if (viewConfig.toolCount) {\n          console.log(`   Tools: ${viewConfig.toolCount}`);\n        }\n        console.log(`   Params:`, params);\n        console.log(`   [This view is under development]\\n`);\n      },\n      destroy: () => {},\n    };\n  }\n\n  /**\n   * Show view with transition\n   */\n  async showView(viewId, params) {\n    const loadedView = this.loadedViews.get(viewId);\n    if (!loadedView) {\n      throw new Error(`View not loaded: ${viewId}`);\n    }\n\n    // Render view with parameters\n    await loadedView.component.render(params);\n\n    if (loadedView.element) {\n      // Browser environment - handle DOM transitions\n      loadedView.element.classList.remove('hidden');\n      loadedView.element.classList.add('entering');\n\n      // Remove transition class after animation\n      setTimeout(() => {\n        if (loadedView.element) {\n          loadedView.element.classList.remove('entering');\n        }\n      }, this.transitionDuration);\n    }\n\n    this.eventBus.emit('view:shown', { viewId, params });\n  }\n\n  /**\n   * Hide current view with transition\n   */\n  async hideCurrentView() {\n    if (!this.currentView) return;\n\n    const loadedView = this.loadedViews.get(this.currentView);\n    if (loadedView?.element) {\n      loadedView.element.classList.add('exiting');\n\n      // Hide after transition\n      setTimeout(() => {\n        if (loadedView.element) {\n          loadedView.element.classList.remove('exiting');\n          loadedView.element.classList.add('hidden');\n        }\n      }, this.transitionDuration);\n    }\n\n    this.eventBus.emit('view:hidden', { viewId: this.currentView });\n  }\n\n  /**\n   * Refresh current view\n   */\n  async refreshView(viewId) {\n    const viewState = this.viewStates.get(viewId);\n    if (viewState) {\n      await this.loadView(viewId, viewState.params);\n    }\n  }\n\n  /**\n   * Preload a view\n   */\n  async preloadView(viewId) {\n    const viewConfig = this.registeredViews.get(viewId);\n    if (!viewConfig || this.loadedViews.has(viewId)) {\n      return;\n    }\n\n    await this.loadViewComponent(viewId, viewConfig);\n    console.log(`🔄 Preloaded view: ${viewConfig.name}`);\n  }\n\n  /**\n   * Check view dependencies\n   */\n  async checkDependencies(viewConfig) {\n    if (!viewConfig.dependencies || viewConfig.dependencies.length === 0) {\n      return;\n    }\n\n    for (const dependency of viewConfig.dependencies) {\n      if (!this.loadedViews.has(dependency)) {\n        await this.preloadView(dependency);\n      }\n    }\n  }\n\n  /**\n   * Unload a view\n   */\n  async unloadView(viewId) {\n    const loadedView = this.loadedViews.get(viewId);\n    if (!loadedView) return;\n\n    // Call destroy method if available\n    if (loadedView.component.destroy) {\n      await loadedView.component.destroy();\n    }\n\n    // Remove DOM element\n    if (loadedView.element) {\n      loadedView.element.remove();\n    }\n\n    // Remove from loaded views\n    this.loadedViews.delete(viewId);\n\n    // Clear state\n    this.viewStates.delete(viewId);\n\n    this.eventBus.emit('view:unloaded', { viewId });\n    console.log(`🗑️ Unloaded view: ${viewId}`);\n  }\n\n  /**\n   * Get view configuration\n   */\n  getViewConfig(viewId) {\n    return this.registeredViews.get(viewId);\n  }\n\n  /**\n   * Get all registered views\n   */\n  getAllViews() {\n    return Array.from(this.registeredViews.values());\n  }\n\n  /**\n   * Get view count\n   */\n  getViewCount() {\n    return this.registeredViews.size;\n  }\n\n  /**\n   * Check if view exists\n   */\n  hasView(viewId) {\n    return this.registeredViews.has(viewId);\n  }\n\n  /**\n   * Get view state\n   */\n  getViewState(viewId) {\n    return this.viewStates.get(viewId);\n  }\n\n  /**\n   * Set view state\n   */\n  setViewState(viewId, state) {\n    const existing = this.viewStates.get(viewId) || {};\n    this.viewStates.set(viewId, { ...existing, ...state });\n  }\n\n  /**\n   * Setup event handlers\n   */\n  setupEventHandlers() {\n    this.eventBus.on('view:reload', async (data) => {\n      await this.refreshView(data.viewId);\n    });\n\n    this.eventBus.on('view:unload', async (data) => {\n      await this.unloadView(data.viewId);\n    });\n\n    this.eventBus.on('view:preload', async (data) => {\n      await this.preloadView(data.viewId);\n    });\n  }\n\n  /**\n   * Get memory usage statistics\n   */\n  getMemoryStats() {\n    return {\n      registeredViews: this.registeredViews.size,\n      loadedViews: this.loadedViews.size,\n      viewStates: this.viewStates.size,\n      currentView: this.currentView,\n    };\n  }\n\n  /**\n   * Cleanup and shutdown\n   */\n  async shutdown() {\n    // Unload all views\n    for (const viewId of this.loadedViews.keys()) {\n      await this.unloadView(viewId);\n    }\n\n    // Clear all data\n    this.registeredViews.clear();\n    this.viewStates.clear();\n    this.currentView = null;\n\n    this.eventBus.emit('view-manager:shutdown');\n  }\n}\n\nexport default ViewManager;\n"],"names":["ViewManager","eventBus","registeredViews","Map","loadedViews","currentView","viewStack","viewStates","isInitialized","containerElement","transitionDuration","initialize","document","setupDOMContainer","setupEventHandlers","emit","console","log","error","getElementById","createElement","id","className","body","appendChild","addTransitionStyles","styles","textContent","head","registerView","viewConfig","component","Error","config","name","icon","description","shortcut","toolCount","lazy","preload","permissions","dependencies","metadata","set","preloadView","viewId","loadView","params","get","checkDependencies","has","loadViewComponent","hideCurrentView","showView","loadTime","Date","now","lastAccess","message","ViewComponent","createDOMView","createTerminalView","element","instance","header","titleSection","title","breadcrumb","content","module","importViewComponent","default","createBasicView","render","destroy","createBasicTerminalView","componentName","warn","container","innerHTML","JSON","stringify","loadedView","classList","remove","add","setTimeout","refreshView","viewState","length","dependency","unloadView","delete","getViewConfig","getAllViews","Array","from","values","getViewCount","size","hasView","getViewState","setViewState","state","existing","on","data","getMemoryStats","shutdown","keys","clear"],"mappings":"AAOA,OAAO,MAAMA;IACX,YAAYC,QAAQ,CAAE;QACpB,IAAI,CAACA,QAAQ,GAAGA;QAChB,IAAI,CAACC,eAAe,GAAG,IAAIC;QAC3B,IAAI,CAACC,WAAW,GAAG,IAAID;QACvB,IAAI,CAACE,WAAW,GAAG;QACnB,IAAI,CAACC,SAAS,GAAG,EAAE;QACnB,IAAI,CAACC,UAAU,GAAG,IAAIJ;QACtB,IAAI,CAACK,aAAa,GAAG;QACrB,IAAI,CAACC,gBAAgB,GAAG;QACxB,IAAI,CAACC,kBAAkB,GAAG;IAC5B;IAKA,MAAMC,aAAa;QACjB,IAAI;YAEF,IAAI,OAAOC,aAAa,aAAa;gBACnC,IAAI,CAACC,iBAAiB;YACxB;YAGA,IAAI,CAACC,kBAAkB;YAEvB,IAAI,CAACN,aAAa,GAAG;YACrB,IAAI,CAACP,QAAQ,CAACc,IAAI,CAAC;YAEnBC,QAAQC,GAAG,CAAC;QACd,EAAE,OAAOC,OAAO;YACdF,QAAQE,KAAK,CAAC,wCAAwCA;YACtD,MAAMA;QACR;IACF;IAKAL,oBAAoB;QAElB,IAAI,CAACJ,gBAAgB,GACnBG,SAASO,cAAc,CAAC,qBAAqBP,SAASQ,aAAa,CAAC;QAEtE,IAAI,CAAC,IAAI,CAACX,gBAAgB,CAACY,EAAE,EAAE;YAC7B,IAAI,CAACZ,gBAAgB,CAACY,EAAE,GAAG;YAC3B,IAAI,CAACZ,gBAAgB,CAACa,SAAS,GAAG;YAClCV,SAASW,IAAI,CAACC,WAAW,CAAC,IAAI,CAACf,gBAAgB;QACjD;QAGA,IAAI,CAACgB,mBAAmB;IAC1B;IAKAA,sBAAsB;QACpB,IAAIb,SAASO,cAAc,CAAC,uBAAuB;QAEnD,MAAMO,SAASd,SAASQ,aAAa,CAAC;QACtCM,OAAOL,EAAE,GAAG;QACZK,OAAOC,WAAW,GAAG,CAAC;;;;;;;;;;;;;;;;;;;wBAmBF,EAAE,IAAI,CAACjB,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4E9C,CAAC;QAEDE,SAASgB,IAAI,CAACJ,WAAW,CAACE;IAC5B;IAKA,MAAMG,aAAaC,UAAU,EAAE;QAC7B,IAAI,CAACA,WAAWT,EAAE,IAAI,CAACS,WAAWC,SAAS,EAAE;YAC3C,MAAM,IAAIC,MAAM;QAClB;QAEA,MAAMC,SAAS;YACbZ,IAAIS,WAAWT,EAAE;YACjBa,MAAMJ,WAAWI,IAAI,IAAIJ,WAAWT,EAAE;YACtCc,MAAML,WAAWK,IAAI,IAAI;YACzBC,aAAaN,WAAWM,WAAW,IAAI;YACvCL,WAAWD,WAAWC,SAAS;YAC/BM,UAAUP,WAAWO,QAAQ;YAC7BC,WAAWR,WAAWQ,SAAS,IAAI;YACnCC,MAAMT,WAAWS,IAAI,KAAK;YAC1BC,SAASV,WAAWU,OAAO,IAAI;YAC/BC,aAAaX,WAAWW,WAAW,IAAI,EAAE;YACzCC,cAAcZ,WAAWY,YAAY,IAAI,EAAE;YAC3CC,UAAUb,WAAWa,QAAQ,IAAI,CAAC;QACpC;QAEA,IAAI,CAACzC,eAAe,CAAC0C,GAAG,CAACd,WAAWT,EAAE,EAAEY;QAGxC,IAAIA,OAAOO,OAAO,EAAE;YAClB,MAAM,IAAI,CAACK,WAAW,CAACZ,OAAOZ,EAAE;QAClC;QAEA,IAAI,CAACpB,QAAQ,CAACc,IAAI,CAAC,mBAAmB;YAAE+B,QAAQb,OAAOZ,EAAE;YAAEY;QAAO;QAElEjB,QAAQC,GAAG,CAAC,CAAC,qBAAqB,EAAEgB,OAAOC,IAAI,CAAC,EAAE,EAAED,OAAOZ,EAAE,CAAC,CAAC,CAAC;IAClE;IAKA,MAAM0B,SAASD,MAAM,EAAEE,SAAS,CAAC,CAAC,EAAE;QAClC,IAAI,CAAC,IAAI,CAACxC,aAAa,EAAE;YACvB,MAAM,IAAIwB,MAAM;QAClB;QAEA,MAAMF,aAAa,IAAI,CAAC5B,eAAe,CAAC+C,GAAG,CAACH;QAC5C,IAAI,CAAChB,YAAY;YACf,MAAM,IAAIE,MAAM,CAAC,qBAAqB,EAAEc,QAAQ;QAClD;QAEA,IAAI;YACF,IAAI,CAAC7C,QAAQ,CAACc,IAAI,CAAC,gBAAgB;gBAAE+B;gBAAQE;YAAO;YAGpD,MAAM,IAAI,CAACE,iBAAiB,CAACpB;YAG7B,IAAI,CAAC,IAAI,CAAC1B,WAAW,CAAC+C,GAAG,CAACL,SAAS;gBACjC,MAAM,IAAI,CAACM,iBAAiB,CAACN,QAAQhB;YACvC;YAGA,IAAI,IAAI,CAACzB,WAAW,IAAI,IAAI,CAACA,WAAW,KAAKyC,QAAQ;gBACnD,MAAM,IAAI,CAACO,eAAe;YAC5B;YAGA,MAAM,IAAI,CAACC,QAAQ,CAACR,QAAQE;YAG5B,IAAI,CAAC3C,WAAW,GAAGyC;YACnB,IAAI,CAACvC,UAAU,CAACqC,GAAG,CAACE,QAAQ;gBAC1BE;gBACAO,UAAUC,KAAKC,GAAG;gBAClBC,YAAYF,KAAKC,GAAG;YACtB;YAEA,IAAI,CAACxD,QAAQ,CAACc,IAAI,CAAC,eAAe;gBAAE+B;gBAAQE;YAAO;YAEnDhC,QAAQC,GAAG,CAAC,CAAC,iBAAiB,EAAEa,WAAWI,IAAI,EAAE;QACnD,EAAE,OAAOhB,OAAO;YACd,IAAI,CAACjB,QAAQ,CAACc,IAAI,CAAC,cAAc;gBAAE+B;gBAAQ5B,OAAOA,MAAMyC,OAAO;gBAAEX;YAAO;YACxE,MAAM9B;QACR;IACF;IAKA,MAAMkC,kBAAkBN,MAAM,EAAEhB,UAAU,EAAE;QAC1C,IAAI;YACF,IAAI8B;YAGJ,IAAI,OAAOhD,aAAa,aAAa;gBAEnCgD,gBAAgB,MAAM,IAAI,CAACC,aAAa,CAACf,QAAQhB;YACnD,OAAO;gBAEL8B,gBAAgB,MAAM,IAAI,CAACE,kBAAkB,CAAChB,QAAQhB;YACxD;YAEA,IAAI,CAAC1B,WAAW,CAACwC,GAAG,CAACE,QAAQ;gBAC3Bf,WAAW6B;gBACX3B,QAAQH;gBACRiC,SAASH,cAAcG,OAAO,IAAI;gBAClCC,UAAUJ,cAAcI,QAAQ,IAAI;gBACpCT,UAAUC,KAAKC,GAAG;YACpB;QACF,EAAE,OAAOvC,OAAO;YACdF,QAAQE,KAAK,CAAC,CAAC,gCAAgC,EAAE4B,OAAO,CAAC,CAAC,EAAE5B;YAC5D,MAAMA;QACR;IACF;IAKA,MAAM2C,cAAcf,MAAM,EAAEhB,UAAU,EAAE;QACtC,MAAMiC,UAAUnD,SAASQ,aAAa,CAAC;QACvC2C,QAAQzC,SAAS,GAAG;QACpByC,QAAQ1C,EAAE,GAAG,CAAC,KAAK,EAAEyB,QAAQ;QAG7B,MAAMmB,SAASrD,SAASQ,aAAa,CAAC;QACtC6C,OAAO3C,SAAS,GAAG;QAEnB,MAAM4C,eAAetD,SAASQ,aAAa,CAAC;QAC5C,MAAM+C,QAAQvD,SAASQ,aAAa,CAAC;QACrC+C,MAAM7C,SAAS,GAAG;QAClB6C,MAAMxC,WAAW,GAAG,GAAGG,WAAWK,IAAI,CAAC,CAAC,EAAEL,WAAWI,IAAI,EAAE;QAE3D,MAAMkC,aAAaxD,SAASQ,aAAa,CAAC;QAC1CgD,WAAW9C,SAAS,GAAG;QACvB8C,WAAWzC,WAAW,GAAGG,WAAWM,WAAW;QAE/C8B,aAAa1C,WAAW,CAAC2C;QACzBD,aAAa1C,WAAW,CAAC4C;QACzBH,OAAOzC,WAAW,CAAC0C;QAGnB,MAAMG,UAAUzD,SAASQ,aAAa,CAAC;QACvCiD,QAAQ/C,SAAS,GAAG;QACpB+C,QAAQhD,EAAE,GAAG,CAAC,QAAQ,EAAEyB,QAAQ;QAEhCiB,QAAQvC,WAAW,CAACyC;QACpBF,QAAQvC,WAAW,CAAC6C;QACpB,IAAI,CAAC5D,gBAAgB,CAACe,WAAW,CAACuC;QAGlC,IAAIC;QACJ,IAAI;YAEF,MAAMM,SAAS,MAAM,IAAI,CAACC,mBAAmB,CAACzC,WAAWC,SAAS;YAClEiC,WAAW,IAAIM,OAAOE,OAAO,CAACH,SAAS,IAAI,CAACpE,QAAQ,EAAE6B;QACxD,EAAE,OAAOZ,OAAO;YAEd8C,WAAW,IAAI,CAACS,eAAe,CAACJ,SAASvC;QAC3C;QAEA,OAAO;YACLiC;YACAC;YACAU,QAAQ,CAAC1B,SAAWgB,SAASU,MAAM,CAAC1B;YACpC2B,SAAS,IAAMX,SAASW,OAAO;QACjC;IACF;IAKA,MAAMb,mBAAmBhB,MAAM,EAAEhB,UAAU,EAAE;QAE3C,IAAIkC;QACJ,IAAI;YACF,MAAMM,SAAS,MAAM,IAAI,CAACC,mBAAmB,CAACzC,WAAWC,SAAS;YAClEiC,WAAW,IAAIM,OAAOE,OAAO,CAAC,MAAM,IAAI,CAACvE,QAAQ,EAAE6B;QACrD,EAAE,OAAOZ,OAAO;YACd8C,WAAW,IAAI,CAACY,uBAAuB,CAAC9C;QAC1C;QAEA,OAAO;YACLiC,SAAS;YACTC;YACAU,QAAQ,CAAC1B,SAAWgB,SAASU,MAAM,CAAC1B;YACpC2B,SAAS,IAAMX,SAASW,OAAO;QACjC;IACF;IAKA,MAAMJ,oBAAoBM,aAAa,EAAE;QACvC,IAAI;YAEF,OAAO,MAAM,MAAM,CAAC,CAAC,SAAS,EAAEA,cAAc,GAAG,CAAC;QACpD,EAAE,OAAO3D,OAAO;YACdF,QAAQ8D,IAAI,CAAC,CAAC,iBAAiB,EAAED,cAAc,gBAAgB,CAAC;YAChE,MAAM3D;QACR;IACF;IAKAuD,gBAAgBM,SAAS,EAAEjD,UAAU,EAAE;QACrC,OAAO;YACL4C,QAAQ,CAAC1B;gBACP+B,UAAUC,SAAS,GAAG,CAAC;;;kBAGb,EAAElD,WAAWI,IAAI,CAAC;iBACnB,EAAEJ,WAAWM,WAAW,CAAC;;cAE5B,EAAEN,WAAWQ,SAAS,GAAG,CAAC,gBAAgB,EAAER,WAAWQ,SAAS,CAAC,WAAW,CAAC,GAAG,GAAG;mBAC9E,EAAE2C,KAAKC,SAAS,CAAClC,QAAQ,MAAM,GAAG;;;QAG7C,CAAC;YACH;YACA2B,SAAS;gBACPI,UAAUC,SAAS,GAAG;YACxB;QACF;IACF;IAKAJ,wBAAwB9C,UAAU,EAAE;QAClC,OAAO;YACL4C,QAAQ,CAAC1B;gBACPhC,QAAQC,GAAG,CAAC,CAAC,KAAK,EAAEa,WAAWI,IAAI,EAAE;gBACrClB,QAAQC,GAAG,CAAC,CAAC,GAAG,EAAEa,WAAWM,WAAW,EAAE;gBAC1C,IAAIN,WAAWQ,SAAS,EAAE;oBACxBtB,QAAQC,GAAG,CAAC,CAAC,UAAU,EAAEa,WAAWQ,SAAS,EAAE;gBACjD;gBACAtB,QAAQC,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE+B;gBAC1BhC,QAAQC,GAAG,CAAC,CAAC,qCAAqC,CAAC;YACrD;YACA0D,SAAS,KAAO;QAClB;IACF;IAKA,MAAMrB,SAASR,MAAM,EAAEE,MAAM,EAAE;QAC7B,MAAMmC,aAAa,IAAI,CAAC/E,WAAW,CAAC6C,GAAG,CAACH;QACxC,IAAI,CAACqC,YAAY;YACf,MAAM,IAAInD,MAAM,CAAC,iBAAiB,EAAEc,QAAQ;QAC9C;QAGA,MAAMqC,WAAWpD,SAAS,CAAC2C,MAAM,CAAC1B;QAElC,IAAImC,WAAWpB,OAAO,EAAE;YAEtBoB,WAAWpB,OAAO,CAACqB,SAAS,CAACC,MAAM,CAAC;YACpCF,WAAWpB,OAAO,CAACqB,SAAS,CAACE,GAAG,CAAC;YAGjCC,WAAW;gBACT,IAAIJ,WAAWpB,OAAO,EAAE;oBACtBoB,WAAWpB,OAAO,CAACqB,SAAS,CAACC,MAAM,CAAC;gBACtC;YACF,GAAG,IAAI,CAAC3E,kBAAkB;QAC5B;QAEA,IAAI,CAACT,QAAQ,CAACc,IAAI,CAAC,cAAc;YAAE+B;YAAQE;QAAO;IACpD;IAKA,MAAMK,kBAAkB;QACtB,IAAI,CAAC,IAAI,CAAChD,WAAW,EAAE;QAEvB,MAAM8E,aAAa,IAAI,CAAC/E,WAAW,CAAC6C,GAAG,CAAC,IAAI,CAAC5C,WAAW;QACxD,IAAI8E,YAAYpB,SAAS;YACvBoB,WAAWpB,OAAO,CAACqB,SAAS,CAACE,GAAG,CAAC;YAGjCC,WAAW;gBACT,IAAIJ,WAAWpB,OAAO,EAAE;oBACtBoB,WAAWpB,OAAO,CAACqB,SAAS,CAACC,MAAM,CAAC;oBACpCF,WAAWpB,OAAO,CAACqB,SAAS,CAACE,GAAG,CAAC;gBACnC;YACF,GAAG,IAAI,CAAC5E,kBAAkB;QAC5B;QAEA,IAAI,CAACT,QAAQ,CAACc,IAAI,CAAC,eAAe;YAAE+B,QAAQ,IAAI,CAACzC,WAAW;QAAC;IAC/D;IAKA,MAAMmF,YAAY1C,MAAM,EAAE;QACxB,MAAM2C,YAAY,IAAI,CAAClF,UAAU,CAAC0C,GAAG,CAACH;QACtC,IAAI2C,WAAW;YACb,MAAM,IAAI,CAAC1C,QAAQ,CAACD,QAAQ2C,UAAUzC,MAAM;QAC9C;IACF;IAKA,MAAMH,YAAYC,MAAM,EAAE;QACxB,MAAMhB,aAAa,IAAI,CAAC5B,eAAe,CAAC+C,GAAG,CAACH;QAC5C,IAAI,CAAChB,cAAc,IAAI,CAAC1B,WAAW,CAAC+C,GAAG,CAACL,SAAS;YAC/C;QACF;QAEA,MAAM,IAAI,CAACM,iBAAiB,CAACN,QAAQhB;QACrCd,QAAQC,GAAG,CAAC,CAAC,mBAAmB,EAAEa,WAAWI,IAAI,EAAE;IACrD;IAKA,MAAMgB,kBAAkBpB,UAAU,EAAE;QAClC,IAAI,CAACA,WAAWY,YAAY,IAAIZ,WAAWY,YAAY,CAACgD,MAAM,KAAK,GAAG;YACpE;QACF;QAEA,KAAK,MAAMC,cAAc7D,WAAWY,YAAY,CAAE;YAChD,IAAI,CAAC,IAAI,CAACtC,WAAW,CAAC+C,GAAG,CAACwC,aAAa;gBACrC,MAAM,IAAI,CAAC9C,WAAW,CAAC8C;YACzB;QACF;IACF;IAKA,MAAMC,WAAW9C,MAAM,EAAE;QACvB,MAAMqC,aAAa,IAAI,CAAC/E,WAAW,CAAC6C,GAAG,CAACH;QACxC,IAAI,CAACqC,YAAY;QAGjB,IAAIA,WAAWpD,SAAS,CAAC4C,OAAO,EAAE;YAChC,MAAMQ,WAAWpD,SAAS,CAAC4C,OAAO;QACpC;QAGA,IAAIQ,WAAWpB,OAAO,EAAE;YACtBoB,WAAWpB,OAAO,CAACsB,MAAM;QAC3B;QAGA,IAAI,CAACjF,WAAW,CAACyF,MAAM,CAAC/C;QAGxB,IAAI,CAACvC,UAAU,CAACsF,MAAM,CAAC/C;QAEvB,IAAI,CAAC7C,QAAQ,CAACc,IAAI,CAAC,iBAAiB;YAAE+B;QAAO;QAC7C9B,QAAQC,GAAG,CAAC,CAAC,mBAAmB,EAAE6B,QAAQ;IAC5C;IAKAgD,cAAchD,MAAM,EAAE;QACpB,OAAO,IAAI,CAAC5C,eAAe,CAAC+C,GAAG,CAACH;IAClC;IAKAiD,cAAc;QACZ,OAAOC,MAAMC,IAAI,CAAC,IAAI,CAAC/F,eAAe,CAACgG,MAAM;IAC/C;IAKAC,eAAe;QACb,OAAO,IAAI,CAACjG,eAAe,CAACkG,IAAI;IAClC;IAKAC,QAAQvD,MAAM,EAAE;QACd,OAAO,IAAI,CAAC5C,eAAe,CAACiD,GAAG,CAACL;IAClC;IAKAwD,aAAaxD,MAAM,EAAE;QACnB,OAAO,IAAI,CAACvC,UAAU,CAAC0C,GAAG,CAACH;IAC7B;IAKAyD,aAAazD,MAAM,EAAE0D,KAAK,EAAE;QAC1B,MAAMC,WAAW,IAAI,CAAClG,UAAU,CAAC0C,GAAG,CAACH,WAAW,CAAC;QACjD,IAAI,CAACvC,UAAU,CAACqC,GAAG,CAACE,QAAQ;YAAE,GAAG2D,QAAQ;YAAE,GAAGD,KAAK;QAAC;IACtD;IAKA1F,qBAAqB;QACnB,IAAI,CAACb,QAAQ,CAACyG,EAAE,CAAC,eAAe,OAAOC;YACrC,MAAM,IAAI,CAACnB,WAAW,CAACmB,KAAK7D,MAAM;QACpC;QAEA,IAAI,CAAC7C,QAAQ,CAACyG,EAAE,CAAC,eAAe,OAAOC;YACrC,MAAM,IAAI,CAACf,UAAU,CAACe,KAAK7D,MAAM;QACnC;QAEA,IAAI,CAAC7C,QAAQ,CAACyG,EAAE,CAAC,gBAAgB,OAAOC;YACtC,MAAM,IAAI,CAAC9D,WAAW,CAAC8D,KAAK7D,MAAM;QACpC;IACF;IAKA8D,iBAAiB;QACf,OAAO;YACL1G,iBAAiB,IAAI,CAACA,eAAe,CAACkG,IAAI;YAC1ChG,aAAa,IAAI,CAACA,WAAW,CAACgG,IAAI;YAClC7F,YAAY,IAAI,CAACA,UAAU,CAAC6F,IAAI;YAChC/F,aAAa,IAAI,CAACA,WAAW;QAC/B;IACF;IAKA,MAAMwG,WAAW;QAEf,KAAK,MAAM/D,UAAU,IAAI,CAAC1C,WAAW,CAAC0G,IAAI,GAAI;YAC5C,MAAM,IAAI,CAAClB,UAAU,CAAC9C;QACxB;QAGA,IAAI,CAAC5C,eAAe,CAAC6G,KAAK;QAC1B,IAAI,CAACxG,UAAU,CAACwG,KAAK;QACrB,IAAI,CAAC1G,WAAW,GAAG;QAEnB,IAAI,CAACJ,QAAQ,CAACc,IAAI,CAAC;IACrB;AACF;AAEA,eAAef,YAAY"}