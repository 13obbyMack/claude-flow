{"version":3,"sources":["../../../../../src/ui/web-ui/views/GitHubIntegrationView.js"],"sourcesContent":["/**\n * GitHub Integration View - Interface for GitHub operations\n * Handles repository analysis, PR management, issue tracking, and more\n */\n\nexport default class GitHubIntegrationView {\n  constructor(container, eventBus, viewConfig) {\n    this.container = container;\n    this.eventBus = eventBus;\n    this.viewConfig = viewConfig;\n    this.componentLibrary = null;\n    this.repositories = new Map();\n    this.pullRequests = new Map();\n    this.issues = new Map();\n    this.currentTab = 'overview';\n    this.isInitialized = false;\n\n    // GitHub tools\n    this.githubTools = {\n      repo_analyze: 'github_repo_analyze',\n      pr_manage: 'github_pr_manage',\n      issue_track: 'github_issue_track',\n      release_coord: 'github_release_coord',\n      workflow_auto: 'github_workflow_auto',\n      code_review: 'github_code_review',\n      sync_coord: 'github_sync_coord',\n      metrics: 'github_metrics',\n    };\n  }\n\n  /**\n   * Initialize the GitHub integration view\n   */\n  async initialize() {\n    if (this.isInitialized) return;\n\n    // Get component library from event bus\n    this.eventBus.emit('component-library:get', (library) => {\n      this.componentLibrary = library;\n    });\n\n    // Setup event handlers\n    this.setupEventHandlers();\n\n    this.isInitialized = true;\n  }\n\n  /**\n   * Render the view with given parameters\n   */\n  async render(params = {}) {\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n\n    // Clear container\n    if (this.container) {\n      this.container.innerHTML = '';\n      this.createGitHubInterface();\n    } else {\n      // Terminal mode\n      this.renderTerminalMode(params);\n    }\n  }\n\n  /**\n   * Create GitHub interface for browser\n   */\n  createGitHubInterface() {\n    // Create tab container\n    const tabs = [\n      { label: '🏠 Overview', content: this.createOverviewTab() },\n      { label: '📁 Repositories', content: this.createRepositoriesTab() },\n      { label: '🔄 Pull Requests', content: this.createPullRequestsTab() },\n      { label: '📋 Issues', content: this.createIssuesTab() },\n      { label: '🚀 Releases', content: this.createReleasesTab() },\n      { label: '🤖 Automation', content: this.createAutomationTab() },\n      { label: '📊 Analytics', content: this.createAnalyticsTab() },\n      { label: '🔍 Code Review', content: this.createCodeReviewTab() },\n    ];\n\n    if (this.componentLibrary) {\n      const tabContainer = this.componentLibrary.getComponent('TabContainer')(tabs);\n      this.container.appendChild(tabContainer.element);\n    } else {\n      // Fallback without component library\n      this.createFallbackInterface();\n    }\n  }\n\n  /**\n   * Create overview tab content\n   */\n  createOverviewTab() {\n    return `\n      <div class=\"github-overview\">\n        <div class=\"stats-grid\">\n          <div id=\"repos-stat\" class=\"stat-card\">\n            <div class=\"stat-icon\">📁</div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">0</div>\n              <div class=\"stat-label\">Repositories</div>\n            </div>\n          </div>\n          <div id=\"prs-stat\" class=\"stat-card\">\n            <div class=\"stat-icon\">🔄</div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">0</div>\n              <div class=\"stat-label\">Open PRs</div>\n            </div>\n          </div>\n          <div id=\"issues-stat\" class=\"stat-card\">\n            <div class=\"stat-icon\">📋</div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">0</div>\n              <div class=\"stat-label\">Open Issues</div>\n            </div>\n          </div>\n          <div id=\"workflows-stat\" class=\"stat-card\">\n            <div class=\"stat-icon\">⚡</div>\n            <div class=\"stat-content\">\n              <div class=\"stat-value\">0</div>\n              <div class=\"stat-label\">Active Workflows</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"github-tools\">\n          <h3>🔧 Quick Actions</h3>\n          <div class=\"tool-buttons\">\n            <button onclick=\"window.githubView.analyzeRepository()\" class=\"github-btn primary\">\n              📊 Analyze Repository\n            </button>\n            <button onclick=\"window.githubView.createPullRequest()\" class=\"github-btn secondary\">\n              🔄 Create PR\n            </button>\n            <button onclick=\"window.githubView.trackIssues()\" class=\"github-btn secondary\">\n              📋 Track Issues\n            </button>\n            <button onclick=\"window.githubView.checkMetrics()\" class=\"github-btn secondary\">\n              📈 View Metrics\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recent-activity\">\n          <h3>📈 Recent GitHub Activity</h3>\n          <div id=\"github-activity-log\" class=\"activity-list\">\n            <div class=\"activity-item\">\n              <span class=\"activity-time\">--:--</span>\n              <span class=\"activity-desc\">No recent activity</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create repositories tab content\n   */\n  createRepositoriesTab() {\n    return `\n      <div class=\"github-repositories\">\n        <div class=\"repo-management\">\n          <h3>📁 Repository Management</h3>\n          \n          <div class=\"repo-actions\">\n            <button onclick=\"window.githubView.browseRepositories()\" class=\"github-btn primary\">\n              🔍 Browse Repositories\n            </button>\n            <button onclick=\"window.githubView.analyzeRepository()\" class=\"github-btn secondary\">\n              📊 Analyze Repository\n            </button>\n            <button onclick=\"window.githubView.syncRepositories()\" class=\"github-btn secondary\">\n              🔄 Sync Repos\n            </button>\n          </div>\n          \n          <div class=\"repo-search\">\n            <input type=\"text\" id=\"repo-search\" placeholder=\"Search repositories...\" class=\"search-input\">\n          </div>\n        </div>\n        \n        <div class=\"repo-analysis\">\n          <h3>📊 Repository Analysis</h3>\n          <div class=\"analysis-form\">\n            <div class=\"form-group\">\n              <label>Repository:</label>\n              <input type=\"text\" id=\"analyze-repo\" placeholder=\"owner/repo\">\n            </div>\n            <div class=\"form-group\">\n              <label>Analysis Type:</label>\n              <select id=\"analysis-type\">\n                <option value=\"code_quality\">Code Quality</option>\n                <option value=\"performance\">Performance</option>\n                <option value=\"security\">Security</option>\n              </select>\n            </div>\n            <button onclick=\"window.githubView.runRepoAnalysis()\" class=\"github-btn primary\">\n              📊 Analyze\n            </button>\n          </div>\n          \n          <div id=\"analysis-results\" class=\"analysis-display\">\n            <!-- Analysis results will appear here -->\n          </div>\n        </div>\n        \n        <div class=\"repo-list\">\n          <h3>📋 Repository List</h3>\n          <div id=\"repositories-list\" class=\"repo-grid\">\n            <!-- Repository cards will be populated here -->\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create pull requests tab content\n   */\n  createPullRequestsTab() {\n    return `\n      <div class=\"github-pull-requests\">\n        <div class=\"pr-management\">\n          <h3>🔄 Pull Request Management</h3>\n          \n          <div class=\"pr-actions\">\n            <button onclick=\"window.githubView.createPullRequest()\" class=\"github-btn primary\">\n              ➕ Create PR\n            </button>\n            <button onclick=\"window.githubView.reviewPullRequests()\" class=\"github-btn secondary\">\n              👀 Review PRs\n            </button>\n            <button onclick=\"window.githubView.mergePullRequest()\" class=\"github-btn secondary\">\n              🔀 Merge PR\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"pr-dashboard\">\n          <h3>📊 PR Dashboard</h3>\n          <div class=\"pr-filters\">\n            <select id=\"pr-filter-status\">\n              <option value=\"all\">All PRs</option>\n              <option value=\"open\">Open</option>\n              <option value=\"closed\">Closed</option>\n              <option value=\"merged\">Merged</option>\n            </select>\n            <select id=\"pr-filter-repo\">\n              <option value=\"\">All Repositories</option>\n            </select>\n          </div>\n          \n          <div id=\"pr-list\" class=\"pr-list\">\n            <!-- PR cards will be populated here -->\n          </div>\n        </div>\n        \n        <div class=\"pr-actions-panel\">\n          <h3>⚡ PR Actions</h3>\n          <div class=\"form-group\">\n            <label>Repository:</label>\n            <input type=\"text\" id=\"pr-repo\" placeholder=\"owner/repo\">\n          </div>\n          <div class=\"form-group\">\n            <label>PR Number:</label>\n            <input type=\"number\" id=\"pr-number\" placeholder=\"123\">\n          </div>\n          <div class=\"form-group\">\n            <label>Action:</label>\n            <select id=\"pr-action\">\n              <option value=\"review\">Review</option>\n              <option value=\"merge\">Merge</option>\n              <option value=\"close\">Close</option>\n            </select>\n          </div>\n          <button onclick=\"window.githubView.executePRAction()\" class=\"github-btn primary\">\n            ⚡ Execute Action\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create issues tab content\n   */\n  createIssuesTab() {\n    return `\n      <div class=\"github-issues\">\n        <div class=\"issue-tracking\">\n          <h3>📋 Issue Tracking & Triage</h3>\n          \n          <div class=\"issue-actions\">\n            <button onclick=\"window.githubView.createIssue()\" class=\"github-btn primary\">\n              ➕ Create Issue\n            </button>\n            <button onclick=\"window.githubView.triageIssues()\" class=\"github-btn secondary\">\n              🏷️ Triage Issues\n            </button>\n            <button onclick=\"window.githubView.trackIssues()\" class=\"github-btn secondary\">\n              📊 Track Progress\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"issue-dashboard\">\n          <h3>📊 Issue Dashboard</h3>\n          <div class=\"issue-stats\">\n            <div class=\"issue-stat\">\n              <span class=\"stat-label\">Open</span>\n              <span id=\"open-issues\" class=\"stat-value\">0</span>\n            </div>\n            <div class=\"issue-stat\">\n              <span class=\"stat-label\">In Progress</span>\n              <span id=\"progress-issues\" class=\"stat-value\">0</span>\n            </div>\n            <div class=\"issue-stat\">\n              <span class=\"stat-label\">Closed</span>\n              <span id=\"closed-issues\" class=\"stat-value\">0</span>\n            </div>\n          </div>\n          \n          <div class=\"issue-filters\">\n            <input type=\"text\" id=\"issue-search\" placeholder=\"Search issues...\" class=\"search-input\">\n            <select id=\"issue-filter-label\">\n              <option value=\"\">All Labels</option>\n              <option value=\"bug\">Bug</option>\n              <option value=\"enhancement\">Enhancement</option>\n              <option value=\"documentation\">Documentation</option>\n            </select>\n          </div>\n          \n          <div id=\"issue-list\" class=\"issue-list\">\n            <!-- Issue cards will be populated here -->\n          </div>\n        </div>\n        \n        <div class=\"issue-triage\">\n          <h3>🏷️ Issue Triage</h3>\n          <div class=\"triage-form\">\n            <div class=\"form-group\">\n              <label>Repository:</label>\n              <input type=\"text\" id=\"triage-repo\" placeholder=\"owner/repo\">\n            </div>\n            <div class=\"form-group\">\n              <label>Action:</label>\n              <select id=\"triage-action\">\n                <option value=\"auto_label\">Auto Label</option>\n                <option value=\"assign\">Auto Assign</option>\n                <option value=\"prioritize\">Prioritize</option>\n              </select>\n            </div>\n            <button onclick=\"window.githubView.runTriage()\" class=\"github-btn primary\">\n              🏷️ Run Triage\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create releases tab content\n   */\n  createReleasesTab() {\n    return `\n      <div class=\"github-releases\">\n        <div class=\"release-coordination\">\n          <h3>🚀 Release Coordination</h3>\n          \n          <div class=\"release-actions\">\n            <button onclick=\"window.githubView.createRelease()\" class=\"github-btn primary\">\n              🚀 Create Release\n            </button>\n            <button onclick=\"window.githubView.coordinateRelease()\" class=\"github-btn secondary\">\n              📅 Coordinate Release\n            </button>\n            <button onclick=\"window.githubView.checkReleaseStatus()\" class=\"github-btn secondary\">\n              📊 Check Status\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"release-planning\">\n          <h3>📅 Release Planning</h3>\n          <div class=\"release-form\">\n            <div class=\"form-group\">\n              <label>Repository:</label>\n              <input type=\"text\" id=\"release-repo\" placeholder=\"owner/repo\">\n            </div>\n            <div class=\"form-group\">\n              <label>Version:</label>\n              <input type=\"text\" id=\"release-version\" placeholder=\"v1.0.0\">\n            </div>\n            <div class=\"form-group\">\n              <label>Release Date:</label>\n              <input type=\"date\" id=\"release-date\">\n            </div>\n            <div class=\"form-group\">\n              <label>Release Notes:</label>\n              <textarea id=\"release-notes\" placeholder=\"Enter release notes...\"></textarea>\n            </div>\n            <button onclick=\"window.githubView.planRelease()\" class=\"github-btn primary\">\n              📅 Plan Release\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"release-history\">\n          <h3>📋 Release History</h3>\n          <div id=\"release-list\" class=\"release-list\">\n            <!-- Release cards will be populated here -->\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create automation tab content\n   */\n  createAutomationTab() {\n    return `\n      <div class=\"github-automation\">\n        <div class=\"workflow-automation\">\n          <h3>🤖 Workflow Automation</h3>\n          \n          <div class=\"automation-actions\">\n            <button onclick=\"window.githubView.createWorkflow()\" class=\"github-btn primary\">\n              ➕ Create Workflow\n            </button>\n            <button onclick=\"window.githubView.manageWorkflows()\" class=\"github-btn secondary\">\n              ⚙️ Manage Workflows\n            </button>\n            <button onclick=\"window.githubView.runWorkflow()\" class=\"github-btn secondary\">\n              ▶️ Run Workflow\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"workflow-builder\">\n          <h3>🔧 Workflow Builder</h3>\n          <div class=\"workflow-form\">\n            <div class=\"form-group\">\n              <label>Repository:</label>\n              <input type=\"text\" id=\"workflow-repo\" placeholder=\"owner/repo\">\n            </div>\n            <div class=\"form-group\">\n              <label>Workflow Name:</label>\n              <input type=\"text\" id=\"workflow-name\" placeholder=\"CI/CD Pipeline\">\n            </div>\n            <div class=\"form-group\">\n              <label>Trigger:</label>\n              <select id=\"workflow-trigger\">\n                <option value=\"push\">On Push</option>\n                <option value=\"pull_request\">On Pull Request</option>\n                <option value=\"schedule\">Scheduled</option>\n                <option value=\"manual\">Manual</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label>Workflow Steps:</label>\n              <textarea id=\"workflow-steps\" placeholder=\"Define workflow steps...\"></textarea>\n            </div>\n            <button onclick=\"window.githubView.buildWorkflow()\" class=\"github-btn primary\">\n              🔨 Build Workflow\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"automation-templates\">\n          <h3>📋 Automation Templates</h3>\n          <div class=\"template-grid\">\n            <div class=\"template-card\">\n              <h4>🧪 Test Automation</h4>\n              <p>Automated testing on every PR</p>\n              <button onclick=\"window.githubView.useTemplate('test')\" class=\"github-btn\">Use</button>\n            </div>\n            <div class=\"template-card\">\n              <h4>📦 Release Automation</h4>\n              <p>Automated releases with changelog</p>\n              <button onclick=\"window.githubView.useTemplate('release')\" class=\"github-btn\">Use</button>\n            </div>\n            <div class=\"template-card\">\n              <h4>🔍 Code Review</h4>\n              <p>Automated code review checks</p>\n              <button onclick=\"window.githubView.useTemplate('review')\" class=\"github-btn\">Use</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create analytics tab content\n   */\n  createAnalyticsTab() {\n    return `\n      <div class=\"github-analytics\">\n        <div class=\"metrics-overview\">\n          <h3>📊 Repository Metrics</h3>\n          \n          <div class=\"metrics-actions\">\n            <button onclick=\"window.githubView.fetchMetrics()\" class=\"github-btn primary\">\n              📊 Fetch Metrics\n            </button>\n            <button onclick=\"window.githubView.generateReport()\" class=\"github-btn secondary\">\n              📄 Generate Report\n            </button>\n            <button onclick=\"window.githubView.exportMetrics()\" class=\"github-btn secondary\">\n              💾 Export Data\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"metrics-dashboard\">\n          <h3>📈 Metrics Dashboard</h3>\n          <div class=\"metrics-grid\">\n            <div class=\"metric-card\">\n              <h4>📝 Commits</h4>\n              <div id=\"commits-chart\" class=\"chart-container\">\n                <!-- Commits chart will be rendered here -->\n              </div>\n              <div class=\"metric-stats\">\n                <span>Total: <span id=\"total-commits\">0</span></span>\n                <span>This Week: <span id=\"week-commits\">0</span></span>\n              </div>\n            </div>\n            \n            <div class=\"metric-card\">\n              <h4>🔄 Pull Requests</h4>\n              <div id=\"pr-chart\" class=\"chart-container\">\n                <!-- PR chart will be rendered here -->\n              </div>\n              <div class=\"metric-stats\">\n                <span>Merged: <span id=\"merged-prs\">0</span></span>\n                <span>Avg Time: <span id=\"avg-pr-time\">--</span></span>\n              </div>\n            </div>\n            \n            <div class=\"metric-card\">\n              <h4>📋 Issues</h4>\n              <div id=\"issues-chart\" class=\"chart-container\">\n                <!-- Issues chart will be rendered here -->\n              </div>\n              <div class=\"metric-stats\">\n                <span>Resolved: <span id=\"resolved-issues\">0</span></span>\n                <span>Avg Time: <span id=\"avg-issue-time\">--</span></span>\n              </div>\n            </div>\n            \n            <div class=\"metric-card\">\n              <h4>👥 Contributors</h4>\n              <div id=\"contributors-chart\" class=\"chart-container\">\n                <!-- Contributors chart will be rendered here -->\n              </div>\n              <div class=\"metric-stats\">\n                <span>Active: <span id=\"active-contributors\">0</span></span>\n                <span>New: <span id=\"new-contributors\">0</span></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"custom-metrics\">\n          <h3>🎯 Custom Metrics</h3>\n          <div class=\"custom-form\">\n            <div class=\"form-group\">\n              <label>Repository:</label>\n              <input type=\"text\" id=\"metrics-repo\" placeholder=\"owner/repo\">\n            </div>\n            <div class=\"form-group\">\n              <label>Metric Type:</label>\n              <select id=\"metric-type\">\n                <option value=\"code_churn\">Code Churn</option>\n                <option value=\"review_time\">Review Time</option>\n                <option value=\"deployment_frequency\">Deployment Frequency</option>\n                <option value=\"lead_time\">Lead Time</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label>Time Period:</label>\n              <select id=\"metric-period\">\n                <option value=\"7d\">Last 7 days</option>\n                <option value=\"30d\">Last 30 days</option>\n                <option value=\"90d\">Last 90 days</option>\n                <option value=\"1y\">Last year</option>\n              </select>\n            </div>\n            <button onclick=\"window.githubView.analyzeMetric()\" class=\"github-btn primary\">\n              📊 Analyze\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create code review tab content\n   */\n  createCodeReviewTab() {\n    return `\n      <div class=\"github-code-review\">\n        <div class=\"review-automation\">\n          <h3>🔍 Automated Code Review</h3>\n          \n          <div class=\"review-actions\">\n            <button onclick=\"window.githubView.startCodeReview()\" class=\"github-btn primary\">\n              🔍 Start Review\n            </button>\n            <button onclick=\"window.githubView.configureReview()\" class=\"github-btn secondary\">\n              ⚙️ Configure Rules\n            </button>\n            <button onclick=\"window.githubView.viewReviewHistory()\" class=\"github-btn secondary\">\n              📋 Review History\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"review-configuration\">\n          <h3>⚙️ Review Configuration</h3>\n          <div class=\"config-form\">\n            <div class=\"form-group\">\n              <label>Repository:</label>\n              <input type=\"text\" id=\"review-repo\" placeholder=\"owner/repo\">\n            </div>\n            <div class=\"form-group\">\n              <label>PR Number:</label>\n              <input type=\"number\" id=\"review-pr\" placeholder=\"123\">\n            </div>\n            <div class=\"form-group\">\n              <label>Review Type:</label>\n              <select id=\"review-type\">\n                <option value=\"full\">Full Review</option>\n                <option value=\"security\">Security Focus</option>\n                <option value=\"performance\">Performance Focus</option>\n                <option value=\"style\">Code Style</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label>Auto-Suggestions:</label>\n              <input type=\"checkbox\" id=\"auto-suggestions\" checked>\n            </div>\n            <button onclick=\"window.githubView.runCodeReview()\" class=\"github-btn primary\">\n              🔍 Run Review\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"review-results\">\n          <h3>📊 Review Results</h3>\n          <div id=\"review-summary\" class=\"review-summary\">\n            <!-- Review summary will appear here -->\n          </div>\n          \n          <div id=\"review-findings\" class=\"review-findings\">\n            <!-- Review findings will be listed here -->\n          </div>\n        </div>\n        \n        <div class=\"review-rules\">\n          <h3>📋 Review Rules</h3>\n          <div class=\"rules-list\">\n            <div class=\"rule-item\">\n              <input type=\"checkbox\" checked>\n              <span>Check for security vulnerabilities</span>\n            </div>\n            <div class=\"rule-item\">\n              <input type=\"checkbox\" checked>\n              <span>Verify test coverage</span>\n            </div>\n            <div class=\"rule-item\">\n              <input type=\"checkbox\" checked>\n              <span>Check code complexity</span>\n            </div>\n            <div class=\"rule-item\">\n              <input type=\"checkbox\" checked>\n              <span>Validate documentation</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create fallback interface without component library\n   */\n  createFallbackInterface() {\n    this.container.innerHTML = `\n      <div class=\"github-fallback\">\n        <h2>🐙 GitHub Integration</h2>\n        <p>Complete GitHub operations interface with 8 integrated tools</p>\n        \n        <div class=\"tool-sections\">\n          <div class=\"tool-section\">\n            <h3>📁 Repository Management</h3>\n            <button onclick=\"window.githubView.quickAction('github_repo_analyze')\">Analyze Repository</button>\n            <button onclick=\"window.githubView.quickAction('github_sync_coord')\">Sync Repositories</button>\n            <button onclick=\"window.githubView.quickAction('github_metrics')\">View Metrics</button>\n          </div>\n          \n          <div class=\"tool-section\">\n            <h3>🔄 PR & Issues</h3>\n            <button onclick=\"window.githubView.quickAction('github_pr_manage')\">Manage PRs</button>\n            <button onclick=\"window.githubView.quickAction('github_issue_track')\">Track Issues</button>\n            <button onclick=\"window.githubView.quickAction('github_code_review')\">Code Review</button>\n          </div>\n          \n          <div class=\"tool-section\">\n            <h3>🚀 Automation</h3>\n            <button onclick=\"window.githubView.quickAction('github_workflow_auto')\">Workflow Automation</button>\n            <button onclick=\"window.githubView.quickAction('github_release_coord')\">Release Coordination</button>\n          </div>\n        </div>\n        \n        <div id=\"github-output\" class=\"output-area\">\n          <h3>📊 Output</h3>\n          <pre id=\"output-content\">Ready for GitHub operations...</pre>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render terminal mode\n   */\n  renderTerminalMode(params) {\n    console.log('\\n🐙 GitHub Integration Operations');\n    console.log('═'.repeat(50));\n    console.log('Available Tools (8):');\n    console.log('  📊 github_repo_analyze   - Repository analysis');\n    console.log('  🔄 github_pr_manage      - PR management');\n    console.log('  📋 github_issue_track    - Issue tracking');\n    console.log('  🚀 github_release_coord  - Release coordination');\n    console.log('  🤖 github_workflow_auto  - Workflow automation');\n    console.log('  🔍 github_code_review    - Code reviews');\n    console.log('  🔄 github_sync_coord     - Multi-repo sync');\n    console.log('  📊 github_metrics        - Repository metrics');\n    console.log('═'.repeat(50));\n\n    if (params.tool) {\n      console.log(`\\n🔧 Executing: ${params.tool}`);\n      this.quickAction(params.tool, params);\n    }\n  }\n\n  /**\n   * Quick action handler\n   */\n  async quickAction(toolName, params = {}) {\n    try {\n      console.log(`🔧 Executing ${toolName}...`);\n\n      // Emit tool execution event\n      this.eventBus.emit('tool:execute', {\n        tool: toolName,\n        params: params,\n        source: 'github-view',\n      });\n\n      // Handle specific tool actions\n      switch (toolName) {\n        case 'github_repo_analyze':\n          await this.handleRepoAnalysis(params);\n          break;\n        case 'github_pr_manage':\n          await this.handlePRManagement(params);\n          break;\n        case 'github_issue_track':\n          await this.handleIssueTracking(params);\n          break;\n        case 'github_code_review':\n          await this.handleCodeReview(params);\n          break;\n        default:\n          console.log(`Tool ${toolName} executed`);\n      }\n    } catch (error) {\n      console.error(`❌ Error executing ${toolName}:`, error);\n    }\n  }\n\n  /**\n   * Handle repository analysis\n   */\n  async handleRepoAnalysis(params) {\n    const analysisParams = {\n      repo: params.repo || 'owner/repo',\n      analysis_type: params.analysis_type || 'code_quality',\n    };\n\n    console.log('📊 Analyzing repository with parameters:', analysisParams);\n\n    // Update UI if in browser mode\n    if (this.container) {\n      const resultsEl = document.getElementById('analysis-results');\n      if (resultsEl) {\n        resultsEl.innerHTML = '<div class=\"analysis-running\">Analysis in progress...</div>';\n      }\n    }\n  }\n\n  /**\n   * Handle PR management\n   */\n  async handlePRManagement(params) {\n    const prParams = {\n      repo: params.repo || 'owner/repo',\n      action: params.action || 'review',\n      pr_number: params.pr_number,\n    };\n\n    console.log('🔄 Managing PR with parameters:', prParams);\n\n    // Update UI if in browser mode\n    if (this.container) {\n      this.updatePRList();\n    }\n  }\n\n  /**\n   * Handle issue tracking\n   */\n  async handleIssueTracking(params) {\n    const issueParams = {\n      repo: params.repo || 'owner/repo',\n      action: params.action || 'track',\n    };\n\n    console.log('📋 Tracking issues with parameters:', issueParams);\n\n    // Update UI if in browser mode\n    if (this.container) {\n      this.updateIssueList();\n    }\n  }\n\n  /**\n   * Handle code review\n   */\n  async handleCodeReview(params) {\n    const reviewParams = {\n      repo: params.repo || 'owner/repo',\n      pr: params.pr || 1,\n      type: params.type || 'full',\n    };\n\n    console.log('🔍 Running code review with parameters:', reviewParams);\n\n    // Update UI if in browser mode\n    if (this.container) {\n      const summaryEl = document.getElementById('review-summary');\n      if (summaryEl) {\n        summaryEl.innerHTML = '<div class=\"review-running\">Code review in progress...</div>';\n      }\n    }\n  }\n\n  /**\n   * Repository analysis functions\n   */\n  async analyzeRepository() {\n    const repo =\n      document.getElementById('analyze-repo')?.value || prompt('Enter repository (owner/repo):');\n    if (!repo) return;\n\n    this.quickAction('github_repo_analyze', { repo });\n  }\n\n  async runRepoAnalysis() {\n    const repo = document.getElementById('analyze-repo')?.value;\n    const analysisType = document.getElementById('analysis-type')?.value;\n\n    if (!repo) {\n      alert('Please enter a repository');\n      return;\n    }\n\n    this.quickAction('github_repo_analyze', { repo, analysis_type: analysisType });\n  }\n\n  /**\n   * PR management functions\n   */\n  async createPullRequest() {\n    const repo = prompt('Enter repository (owner/repo):');\n    if (!repo) return;\n\n    console.log('🔄 Creating pull request for:', repo);\n    this.eventBus.emit('tool:execute', {\n      tool: 'github_pr_create',\n      params: { repo },\n      source: 'github-view',\n    });\n  }\n\n  async executePRAction() {\n    const repo = document.getElementById('pr-repo')?.value;\n    const prNumber = document.getElementById('pr-number')?.value;\n    const action = document.getElementById('pr-action')?.value;\n\n    if (!repo || !prNumber) {\n      alert('Please enter repository and PR number');\n      return;\n    }\n\n    this.quickAction('github_pr_manage', { repo, pr_number: prNumber, action });\n  }\n\n  /**\n   * Issue tracking functions\n   */\n  async trackIssues() {\n    const repo = prompt('Enter repository (owner/repo):');\n    if (!repo) return;\n\n    this.quickAction('github_issue_track', { repo, action: 'track' });\n  }\n\n  async runTriage() {\n    const repo = document.getElementById('triage-repo')?.value;\n    const action = document.getElementById('triage-action')?.value;\n\n    if (!repo) {\n      alert('Please enter a repository');\n      return;\n    }\n\n    this.quickAction('github_issue_track', { repo, action });\n  }\n\n  /**\n   * Metrics functions\n   */\n  async checkMetrics() {\n    const repo = prompt('Enter repository (owner/repo):');\n    if (!repo) return;\n\n    this.quickAction('github_metrics', { repo });\n  }\n\n  async fetchMetrics() {\n    const repo =\n      document.getElementById('metrics-repo')?.value || prompt('Enter repository (owner/repo):');\n    if (!repo) return;\n\n    this.quickAction('github_metrics', { repo });\n  }\n\n  /**\n   * Code review functions\n   */\n  async startCodeReview() {\n    const repo =\n      document.getElementById('review-repo')?.value || prompt('Enter repository (owner/repo):');\n    const pr = document.getElementById('review-pr')?.value || prompt('Enter PR number:');\n\n    if (!repo || !pr) return;\n\n    this.quickAction('github_code_review', { repo, pr });\n  }\n\n  async runCodeReview() {\n    const repo = document.getElementById('review-repo')?.value;\n    const pr = document.getElementById('review-pr')?.value;\n    const reviewType = document.getElementById('review-type')?.value;\n\n    if (!repo || !pr) {\n      alert('Please enter repository and PR number');\n      return;\n    }\n\n    this.quickAction('github_code_review', { repo, pr, type: reviewType });\n  }\n\n  /**\n   * Setup event handlers\n   */\n  setupEventHandlers() {\n    // Listen for tool results\n    this.eventBus.on('tool:executed', (data) => {\n      if (data.source === 'github-view') {\n        this.handleToolResult(data);\n      }\n    });\n\n    // Listen for real-time updates\n    this.eventBus.on('ui:real-time:update', () => {\n      this.updateStats();\n    });\n\n    // Listen for repository updates\n    this.eventBus.on('github:repo:updated', (data) => {\n      this.updateRepositoryList(data);\n    });\n\n    // Listen for PR updates\n    this.eventBus.on('github:pr:updated', (data) => {\n      this.updatePRList(data);\n    });\n\n    // Listen for issue updates\n    this.eventBus.on('github:issue:updated', (data) => {\n      this.updateIssueList(data);\n    });\n\n    // Make this view instance globally accessible for button handlers\n    if (typeof window !== 'undefined') {\n      window.githubView = this;\n    }\n  }\n\n  /**\n   * Handle tool execution results\n   */\n  handleToolResult(data) {\n    console.log(`✅ Tool ${data.tool} completed:`, data.result);\n\n    // Update UI based on result\n    if (this.container) {\n      this.updateUIWithResult(data.tool, data.result);\n    }\n  }\n\n  /**\n   * Update UI with tool results\n   */\n  updateUIWithResult(toolName, result) {\n    switch (toolName) {\n      case 'github_repo_analyze':\n        this.updateAnalysisResults(result);\n        break;\n      case 'github_pr_manage':\n        this.updatePRResults(result);\n        break;\n      case 'github_issue_track':\n        this.updateIssueResults(result);\n        break;\n      case 'github_code_review':\n        this.updateReviewResults(result);\n        break;\n      case 'github_metrics':\n        this.updateMetricsResults(result);\n        break;\n    }\n  }\n\n  /**\n   * Update analysis results\n   */\n  updateAnalysisResults(result) {\n    const resultsEl = document.getElementById('analysis-results');\n    if (resultsEl) {\n      resultsEl.innerHTML = `\n        <div class=\"analysis-complete\">\n          <h4>📊 Analysis Complete</h4>\n          <div class=\"analysis-scores\">\n            <div class=\"score-item\">\n              <span class=\"score-label\">Code Quality:</span>\n              <span class=\"score-value\">${result.code_quality || 'N/A'}</span>\n            </div>\n            <div class=\"score-item\">\n              <span class=\"score-label\">Security:</span>\n              <span class=\"score-value\">${result.security || 'N/A'}</span>\n            </div>\n            <div class=\"score-item\">\n              <span class=\"score-label\">Performance:</span>\n              <span class=\"score-value\">${result.performance || 'N/A'}</span>\n            </div>\n          </div>\n          <div class=\"analysis-details\">${result.details || ''}</div>\n        </div>\n      `;\n    }\n  }\n\n  /**\n   * Update statistics\n   */\n  updateStats() {\n    // Update repository count\n    const reposStatEl = document.getElementById('repos-stat');\n    if (reposStatEl) {\n      const valueEl = reposStatEl.querySelector('.stat-value');\n      if (valueEl) valueEl.textContent = this.repositories.size;\n    }\n\n    // Update PR count\n    const prsStatEl = document.getElementById('prs-stat');\n    if (prsStatEl) {\n      const valueEl = prsStatEl.querySelector('.stat-value');\n      if (valueEl) valueEl.textContent = this.pullRequests.size;\n    }\n\n    // Update issue count\n    const issuesStatEl = document.getElementById('issues-stat');\n    if (issuesStatEl) {\n      const valueEl = issuesStatEl.querySelector('.stat-value');\n      if (valueEl) valueEl.textContent = this.issues.size;\n    }\n  }\n\n  /**\n   * Update repository list\n   */\n  updateRepositoryList(data) {\n    const listEl = document.getElementById('repositories-list');\n    if (listEl) {\n      // Update repository cards\n      console.log('Updating repository list:', data);\n    }\n  }\n\n  /**\n   * Update PR list\n   */\n  updatePRList(data) {\n    const listEl = document.getElementById('pr-list');\n    if (listEl) {\n      // Update PR cards\n      console.log('Updating PR list:', data);\n    }\n  }\n\n  /**\n   * Update issue list\n   */\n  updateIssueList(data) {\n    const listEl = document.getElementById('issue-list');\n    if (listEl) {\n      // Update issue cards\n      console.log('Updating issue list:', data);\n    }\n  }\n\n  /**\n   * Update review results\n   */\n  updateReviewResults(result) {\n    const summaryEl = document.getElementById('review-summary');\n    if (summaryEl) {\n      summaryEl.innerHTML = `\n        <div class=\"review-complete\">\n          <h4>🔍 Review Complete</h4>\n          <div class=\"review-score\">Overall Score: ${result.score || 'N/A'}</div>\n          <div class=\"review-stats\">\n            <span>Issues Found: ${result.issues || 0}</span>\n            <span>Suggestions: ${result.suggestions || 0}</span>\n          </div>\n        </div>\n      `;\n    }\n\n    const findingsEl = document.getElementById('review-findings');\n    if (findingsEl && result.findings) {\n      findingsEl.innerHTML = result.findings\n        .map(\n          (finding) => `\n        <div class=\"finding-item\">\n          <span class=\"finding-type\">${finding.type}</span>\n          <span class=\"finding-desc\">${finding.description}</span>\n        </div>\n      `,\n        )\n        .join('');\n    }\n  }\n\n  /**\n   * Update metrics results\n   */\n  updateMetricsResults(result) {\n    // Update metric values\n    if (result.commits) {\n      const commitsEl = document.getElementById('total-commits');\n      if (commitsEl) commitsEl.textContent = result.commits.total || 0;\n    }\n\n    if (result.pull_requests) {\n      const mergedEl = document.getElementById('merged-prs');\n      if (mergedEl) mergedEl.textContent = result.pull_requests.merged || 0;\n    }\n\n    if (result.issues) {\n      const resolvedEl = document.getElementById('resolved-issues');\n      if (resolvedEl) resolvedEl.textContent = result.issues.resolved || 0;\n    }\n  }\n\n  /**\n   * Destroy view and cleanup\n   */\n  destroy() {\n    // Clear any intervals or timeouts\n    // Remove event listeners\n    // Clean up resources\n    console.log('🐙 GitHub Integration View destroyed');\n  }\n}\n\n// Make view accessible globally for button handlers\nif (typeof window !== 'undefined') {\n  window.githubView = null;\n}\n\n// Add GitHub-specific styles\nif (typeof document !== 'undefined') {\n  const githubStyles = document.createElement('style');\n  githubStyles.textContent = `\n    .github-overview {\n      padding: 20px;\n    }\n    \n    .stats-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 16px;\n      margin-bottom: 24px;\n    }\n    \n    .stat-card {\n      display: flex;\n      align-items: center;\n      background: #2a2a2a;\n      padding: 16px;\n      border-radius: 8px;\n      border: 1px solid #444;\n    }\n    \n    .stat-icon {\n      font-size: 24px;\n      margin-right: 12px;\n    }\n    \n    .stat-value {\n      font-size: 24px;\n      font-weight: bold;\n      color: #00d4ff;\n    }\n    \n    .stat-label {\n      color: #888;\n      font-size: 14px;\n    }\n    \n    .github-tools {\n      margin: 24px 0;\n    }\n    \n    .tool-buttons {\n      display: flex;\n      gap: 12px;\n      flex-wrap: wrap;\n    }\n    \n    .github-btn {\n      padding: 10px 16px;\n      border: none;\n      border-radius: 6px;\n      cursor: pointer;\n      font-weight: 500;\n      transition: all 0.2s ease;\n    }\n    \n    .github-btn.primary {\n      background: #00d4ff;\n      color: #000;\n    }\n    \n    .github-btn.primary:hover {\n      background: #00b8e6;\n    }\n    \n    .github-btn.secondary {\n      background: #444;\n      color: #fff;\n    }\n    \n    .github-btn.secondary:hover {\n      background: #555;\n    }\n    \n    .form-group {\n      margin-bottom: 16px;\n    }\n    \n    .form-group label {\n      display: block;\n      margin-bottom: 4px;\n      color: #fff;\n      font-weight: 500;\n    }\n    \n    .form-group input,\n    .form-group select,\n    .form-group textarea {\n      width: 100%;\n      padding: 8px 12px;\n      background: #1a1a1a;\n      border: 1px solid #444;\n      border-radius: 4px;\n      color: #fff;\n    }\n    \n    .form-group textarea {\n      height: 100px;\n      resize: vertical;\n    }\n    \n    .search-input {\n      width: 100%;\n      padding: 8px 12px;\n      background: #1a1a1a;\n      border: 1px solid #444;\n      border-radius: 4px;\n      color: #fff;\n      margin: 16px 0;\n    }\n    \n    .repo-grid,\n    .pr-list,\n    .issue-list,\n    .release-list {\n      display: grid;\n      gap: 16px;\n      margin-top: 16px;\n    }\n    \n    .template-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: 16px;\n    }\n    \n    .template-card {\n      background: #2a2a2a;\n      border: 1px solid #444;\n      border-radius: 8px;\n      padding: 16px;\n    }\n    \n    .template-card h4 {\n      margin: 0 0 8px 0;\n      color: #00d4ff;\n    }\n    \n    .template-card p {\n      margin: 0 0 12px 0;\n      color: #888;\n      font-size: 14px;\n    }\n    \n    .metric-card {\n      background: #2a2a2a;\n      border: 1px solid #444;\n      border-radius: 8px;\n      padding: 16px;\n    }\n    \n    .metric-card h4 {\n      margin: 0 0 12px 0;\n      color: #fff;\n    }\n    \n    .chart-container {\n      height: 150px;\n      background: #1a1a1a;\n      border-radius: 4px;\n      margin-bottom: 12px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: #666;\n    }\n    \n    .metric-stats {\n      display: flex;\n      justify-content: space-between;\n      font-size: 14px;\n    }\n    \n    .metric-stats span {\n      color: #888;\n    }\n    \n    .metric-stats span span {\n      color: #00d4ff;\n      font-weight: bold;\n    }\n    \n    .pr-filters,\n    .issue-filters {\n      display: flex;\n      gap: 12px;\n      margin-bottom: 16px;\n    }\n    \n    .pr-filters select,\n    .issue-filters select {\n      flex: 1;\n      padding: 8px 12px;\n      background: #1a1a1a;\n      border: 1px solid #444;\n      border-radius: 4px;\n      color: #fff;\n    }\n    \n    .issue-stats {\n      display: flex;\n      gap: 24px;\n      margin: 16px 0;\n    }\n    \n    .issue-stat {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n    \n    .issue-stat .stat-label {\n      font-size: 14px;\n      color: #888;\n    }\n    \n    .issue-stat .stat-value {\n      font-size: 24px;\n      font-weight: bold;\n      color: #00d4ff;\n    }\n    \n    .analysis-display,\n    .review-summary,\n    .review-findings {\n      background: #1a1a1a;\n      border: 1px solid #444;\n      border-radius: 4px;\n      padding: 16px;\n      margin-top: 16px;\n    }\n    \n    .analysis-scores,\n    .review-stats {\n      display: flex;\n      gap: 24px;\n      margin: 12px 0;\n    }\n    \n    .score-item {\n      display: flex;\n      gap: 8px;\n    }\n    \n    .score-label {\n      color: #888;\n    }\n    \n    .score-value {\n      color: #00d4ff;\n      font-weight: bold;\n    }\n    \n    .rules-list {\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n    }\n    \n    .rule-item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      padding: 8px;\n      background: #2a2a2a;\n      border-radius: 4px;\n    }\n    \n    .rule-item input[type=\"checkbox\"] {\n      width: auto;\n    }\n    \n    .finding-item {\n      display: flex;\n      gap: 12px;\n      padding: 8px;\n      background: #2a2a2a;\n      border-radius: 4px;\n      margin-bottom: 8px;\n    }\n    \n    .finding-type {\n      padding: 2px 8px;\n      background: #444;\n      border-radius: 4px;\n      font-size: 12px;\n      font-weight: bold;\n    }\n    \n    .finding-desc {\n      flex: 1;\n      color: #ccc;\n    }\n    \n    .activity-list {\n      max-height: 200px;\n      overflow-y: auto;\n    }\n    \n    .activity-item {\n      display: flex;\n      gap: 12px;\n      padding: 8px;\n      border-bottom: 1px solid #333;\n    }\n    \n    .activity-time {\n      color: #666;\n      font-size: 12px;\n    }\n    \n    .activity-desc {\n      color: #ccc;\n      flex: 1;\n    }\n  `;\n  document.head.appendChild(githubStyles);\n}\n"],"names":["GitHubIntegrationView","container","eventBus","viewConfig","componentLibrary","repositories","Map","pullRequests","issues","currentTab","isInitialized","githubTools","repo_analyze","pr_manage","issue_track","release_coord","workflow_auto","code_review","sync_coord","metrics","initialize","emit","library","setupEventHandlers","render","params","innerHTML","createGitHubInterface","renderTerminalMode","tabs","label","content","createOverviewTab","createRepositoriesTab","createPullRequestsTab","createIssuesTab","createReleasesTab","createAutomationTab","createAnalyticsTab","createCodeReviewTab","tabContainer","getComponent","appendChild","element","createFallbackInterface","console","log","repeat","tool","quickAction","toolName","source","handleRepoAnalysis","handlePRManagement","handleIssueTracking","handleCodeReview","error","analysisParams","repo","analysis_type","resultsEl","document","getElementById","prParams","action","pr_number","updatePRList","issueParams","updateIssueList","reviewParams","pr","type","summaryEl","analyzeRepository","value","prompt","runRepoAnalysis","analysisType","alert","createPullRequest","executePRAction","prNumber","trackIssues","runTriage","checkMetrics","fetchMetrics","startCodeReview","runCodeReview","reviewType","on","data","handleToolResult","updateStats","updateRepositoryList","window","githubView","result","updateUIWithResult","updateAnalysisResults","updatePRResults","updateIssueResults","updateReviewResults","updateMetricsResults","code_quality","security","performance","details","reposStatEl","valueEl","querySelector","textContent","size","prsStatEl","issuesStatEl","listEl","score","suggestions","findingsEl","findings","map","finding","description","join","commits","commitsEl","total","pull_requests","mergedEl","merged","resolvedEl","resolved","destroy","githubStyles","createElement","head"],"mappings":"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"}