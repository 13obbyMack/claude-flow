{"version":3,"sources":["../../../../src/ui/web-ui/EnhancedWebUI.js"],"sourcesContent":["/**\n * Enhanced Web UI - Main controller integrating modular architecture\n * Provides comprehensive interface for all 71+ MCP tools and CLI commands\n */\n\nimport UIManager from './core/UIManager.js';\nimport { VIEW_CATEGORIES } from './core/UIManager.js';\n\nexport class EnhancedWebUI {\n  constructor() {\n    this.uiManager = null;\n    this.isInitialized = false;\n    this.fallbackMode = false;\n    this.originalProcessUI = null;\n  }\n\n  /**\n   * Initialize enhanced web UI\n   */\n  async initialize(existingProcessUI = null) {\n    try {\n      console.log('üöÄ Initializing Enhanced Web UI...');\n\n      // Store reference to existing process UI\n      this.originalProcessUI = existingProcessUI;\n\n      // Try to initialize full UI manager\n      try {\n        this.uiManager = new UIManager();\n        await this.uiManager.initialize();\n\n        console.log('‚úÖ Enhanced Web UI initialized successfully');\n        this.isInitialized = true;\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Full UI initialization failed, using fallback mode:', error);\n        this.fallbackMode = true;\n        await this.initializeFallbackMode();\n      }\n\n      // Setup integration with existing UI if provided\n      if (this.originalProcessUI) {\n        this.integrateWithExistingUI();\n      }\n\n      return this.isInitialized || this.fallbackMode;\n    } catch (error) {\n      console.error('‚ùå Failed to initialize Enhanced Web UI:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize fallback mode for minimal functionality\n   */\n  async initializeFallbackMode() {\n    console.log('üîÑ Initializing fallback mode...');\n\n    // Create minimal UI structure\n    this.createFallbackUI();\n\n    this.fallbackMode = true;\n    console.log('‚úÖ Fallback mode initialized');\n  }\n\n  /**\n   * Create fallback UI structure\n   */\n  createFallbackUI() {\n    // Add enhanced views to existing process UI\n    if (this.originalProcessUI) {\n      this.addEnhancedViewsToProcessUI();\n    } else {\n      this.createStandaloneUI();\n    }\n  }\n\n  /**\n   * Add enhanced views to existing process UI\n   */\n  addEnhancedViewsToProcessUI() {\n    // Extend the VIEWS enum\n    const enhancedViews = {\n      NEURAL: 'neural',\n      MEMORY_MGMT: 'memory_mgmt',\n      MONITORING_ADV: 'monitoring_adv',\n      WORKFLOW_MGMT: 'workflow_mgmt',\n      GITHUB_INT: 'github_int',\n      DAA_CONTROL: 'daa_control',\n      SYSTEM_UTILS: 'system_utils',\n      CLI_BRIDGE: 'cli_bridge',\n    };\n\n    // Add to original UI's VIEWS if possible\n    if (this.originalProcessUI.constructor.VIEWS) {\n      Object.assign(this.originalProcessUI.constructor.VIEWS, enhancedViews);\n    }\n\n    // Extend render method to handle new views\n    const originalRender = this.originalProcessUI.render.bind(this.originalProcessUI);\n    this.originalProcessUI.render = () => {\n      // Call original render first\n      originalRender();\n\n      // Add enhanced view handling\n      this.handleEnhancedViews();\n    };\n\n    // Extend input handling\n    const originalHandleInput = this.originalProcessUI.handleViewSpecificInput.bind(\n      this.originalProcessUI,\n    );\n    this.originalProcessUI.handleViewSpecificInput = async (input) => {\n      // Try enhanced views first\n      if (await this.handleEnhancedInput(input)) {\n        return; // Handled by enhanced UI\n      }\n\n      // Fall back to original handling\n      return originalHandleInput(input);\n    };\n  }\n\n  /**\n   * Handle enhanced views in fallback mode\n   */\n  handleEnhancedViews() {\n    if (!this.originalProcessUI.currentView) return;\n\n    switch (this.originalProcessUI.currentView) {\n      case 'neural':\n        this.renderNeuralView();\n        break;\n      case 'memory_mgmt':\n        this.renderMemoryManagementView();\n        break;\n      case 'monitoring_adv':\n        this.renderAdvancedMonitoringView();\n        break;\n      case 'workflow_mgmt':\n        this.renderWorkflowManagementView();\n        break;\n      case 'github_int':\n        this.renderGitHubIntegrationView();\n        break;\n      case 'daa_control':\n        this.renderDAAControlView();\n        break;\n      case 'system_utils':\n        this.renderSystemUtilitiesView();\n        break;\n      case 'cli_bridge':\n        this.renderCLIBridgeView();\n        break;\n    }\n  }\n\n  /**\n   * Handle enhanced input in fallback mode\n   */\n  async handleEnhancedInput(input) {\n    const currentView = this.originalProcessUI.currentView;\n\n    // Enhanced view shortcuts\n    const enhancedShortcuts = {\n      7: () => (this.originalProcessUI.currentView = 'neural'),\n      8: () => (this.originalProcessUI.currentView = 'memory_mgmt'),\n      9: () => (this.originalProcessUI.currentView = 'monitoring_adv'),\n      0: () => (this.originalProcessUI.currentView = 'workflow_mgmt'),\n    };\n\n    if (enhancedShortcuts[input]) {\n      enhancedShortcuts[input]();\n      return true;\n    }\n\n    // View-specific enhanced input handling\n    switch (currentView) {\n      case 'neural':\n        return this.handleNeuralInput(input);\n      case 'memory_mgmt':\n        return this.handleMemoryInput(input);\n      case 'monitoring_adv':\n        return this.handleMonitoringInput(input);\n      case 'workflow_mgmt':\n        return this.handleWorkflowInput(input);\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Create standalone UI for when no existing UI is available\n   */\n  createStandaloneUI() {\n    console.log('üîß Creating standalone enhanced UI...');\n\n    // This would create a complete standalone interface\n    // For now, just log the available functionality\n    console.log('\\nüé® Enhanced Web UI - Standalone Mode');\n    console.log('‚ïê'.repeat(60));\n    console.log('üìä Available Tool Categories:');\n    console.log('  üß† Neural Network Tools (15 tools)');\n    console.log('  üíæ Memory Management Tools (10 tools)');\n    console.log('  üìä Monitoring & Analysis Tools (13 tools)');\n    console.log('  üîÑ Workflow & Automation Tools (11 tools)');\n    console.log('  üêô GitHub Integration Tools (8 tools)');\n    console.log('  ü§ñ Dynamic Agent Architecture Tools (8 tools)');\n    console.log('  üõ†Ô∏è System & Utilities Tools (6 tools)');\n    console.log('  ‚å®Ô∏è CLI Bridge Commands (9 commands)');\n    console.log('‚ïê'.repeat(60));\n    console.log('Total: 71+ tools and commands available');\n    console.log('Use the enhanced UI manager for full functionality.');\n  }\n\n  /**\n   * Navigate to enhanced view\n   */\n  async navigateToView(viewId, params = {}) {\n    if (this.uiManager && !this.fallbackMode) {\n      return await this.uiManager.navigateToView(viewId, params);\n    } else {\n      // Fallback navigation\n      if (this.originalProcessUI) {\n        this.originalProcessUI.currentView = viewId;\n        this.originalProcessUI.selectedIndex = 0;\n      } else {\n        console.log(`üìÑ Navigating to view: ${viewId}`, params);\n      }\n    }\n  }\n\n  /**\n   * Execute MCP tool\n   */\n  async executeTool(toolName, params = {}) {\n    if (this.uiManager && !this.fallbackMode) {\n      return await this.uiManager.executeMCPTool(toolName, params);\n    } else {\n      // Fallback tool execution\n      console.log(`üîß Executing tool: ${toolName}`, params);\n\n      // Simulate tool execution\n      await new Promise((resolve) => setTimeout(resolve, 500));\n\n      const mockResult = {\n        success: true,\n        tool: toolName,\n        params,\n        result: `Mock result for ${toolName}`,\n        timestamp: Date.now(),\n      };\n\n      console.log(`‚úÖ Tool ${toolName} completed:`, mockResult.result);\n      return mockResult;\n    }\n  }\n\n  /**\n   * Get system status\n   */\n  async getSystemStatus() {\n    if (this.uiManager && !this.fallbackMode) {\n      return await this.uiManager.getSystemStatus();\n    } else {\n      // Fallback status\n      return {\n        mode: 'fallback',\n        toolsAvailable: 71,\n        uiManager: false,\n        enhancedFeatures: false,\n        originalProcessUI: !!this.originalProcessUI,\n      };\n    }\n  }\n\n  /**\n   * Integration with existing process UI\n   */\n  integrateWithExistingUI() {\n    console.log('üîó Integrating with existing process UI...');\n\n    // Add enhanced views to the header navigation\n    this.addEnhancedNavigation();\n\n    // Add tool palette\n    this.addToolPalette();\n\n    // Add quick actions\n    this.addQuickActions();\n  }\n\n  /**\n   * Add enhanced navigation to existing UI\n   */\n  addEnhancedNavigation() {\n    // This would extend the existing navigation tabs\n    console.log('üìä Added enhanced navigation tabs');\n  }\n\n  /**\n   * Add tool palette to existing UI\n   */\n  addToolPalette() {\n    // This would add a tool palette overlay\n    console.log('üé® Added tool palette overlay');\n  }\n\n  /**\n   * Add quick actions to existing UI\n   */\n  addQuickActions() {\n    // This would add quick action buttons\n    console.log('‚ö° Added quick action buttons');\n  }\n\n  /**\n   * Render enhanced views (fallback mode)\n   */\n  renderNeuralView() {\n    console.clear();\n    console.log('üß† Neural Network Operations');\n    console.log('‚ïê'.repeat(50));\n    console.log('Available Tools:');\n    console.log('  [T] Train Neural Network');\n    console.log('  [P] Make Prediction');\n    console.log('  [S] Check Status');\n    console.log('  [A] Analyze Patterns');\n    console.log('  [M] Manage Models');\n    console.log('  [O] Optimize WASM');\n    console.log('\\nPress a key to execute tool...');\n  }\n\n  renderMemoryManagementView() {\n    console.clear();\n    console.log('üíæ Memory Management');\n    console.log('‚ïê'.repeat(50));\n    console.log('Available Tools:');\n    console.log('  [S] Store Data');\n    console.log('  [R] Retrieve Data');\n    console.log('  [B] Backup Memory');\n    console.log('  [C] Compress Data');\n    console.log('  [Y] Sync Instances');\n    console.log('  [A] Analytics');\n    console.log('\\nPress a key to execute tool...');\n  }\n\n  renderAdvancedMonitoringView() {\n    console.clear();\n    console.log('üìä Advanced Monitoring');\n    console.log('‚ïê'.repeat(50));\n    console.log('Available Tools:');\n    console.log('  [P] Performance Report');\n    console.log('  [B] Bottleneck Analysis');\n    console.log('  [T] Token Usage');\n    console.log('  [M] Metrics Collection');\n    console.log('  [H] Health Check');\n    console.log('  [E] Error Analysis');\n    console.log('\\nPress a key to execute tool...');\n  }\n\n  renderWorkflowManagementView() {\n    console.clear();\n    console.log('üîÑ Workflow & Automation Management');\n    console.log('‚ïê'.repeat(50));\n    console.log('Available Tools (11):');\n    console.log('  [C] Create Workflow');\n    console.log('  [E] Execute Workflow');\n    console.log('  [A] Setup Automation');\n    console.log('  [P] Create Pipeline');\n    console.log('  [S] Manage Scheduler');\n    console.log('  [T] Setup Triggers');\n    console.log('  [W] Workflow Templates');\n    console.log('  [B] Batch Processing');\n    console.log('  [L] Parallel Execution');\n    console.log('  [M] SPARC Modes');\n    console.log('  [O] Task Orchestration');\n    console.log('\\nPress a key to execute tool...');\n  }\n\n  renderGitHubIntegrationView() {\n    console.clear();\n    console.log('üêô GitHub Integration');\n    console.log('‚ïê'.repeat(50));\n    console.log('Available Tools:');\n    console.log('  [A] Analyze Repository');\n    console.log('  [P] Manage Pull Requests');\n    console.log('  [I] Track Issues');\n    console.log('  [R] Release Coordination');\n    console.log('  [W] Workflow Automation');\n    console.log('  [M] Repository Metrics');\n    console.log('\\nPress a key to execute tool...');\n  }\n\n  renderDAAControlView() {\n    console.clear();\n    console.log('ü§ñ Dynamic Agent Architecture');\n    console.log('‚ïê'.repeat(50));\n    console.log('Available Tools:');\n    console.log('  [C] Create Agent');\n    console.log('  [M] Match Capabilities');\n    console.log('  [R] Resource Allocation');\n    console.log('  [L] Lifecycle Management');\n    console.log('  [O] Communication');\n    console.log('  [F] Fault Tolerance');\n    console.log('\\nPress a key to execute tool...');\n  }\n\n  renderSystemUtilitiesView() {\n    console.clear();\n    console.log('üõ†Ô∏è System Utilities');\n    console.log('‚ïê'.repeat(50));\n    console.log('Available Tools:');\n    console.log('  [S] Security Scan');\n    console.log('  [B] Create Backup');\n    console.log('  [R] Restore System');\n    console.log('  [L] Log Analysis');\n    console.log('  [D] Run Diagnostics');\n    console.log('  [C] Manage Config');\n    console.log('\\nPress a key to execute tool...');\n  }\n\n  renderCLIBridgeView() {\n    console.clear();\n    console.log('‚å®Ô∏è CLI Command Bridge');\n    console.log('‚ïê'.repeat(50));\n    console.log('Available Commands:');\n    console.log('  [H] Hive Mind Wizard');\n    console.log('  [G] GitHub Operations');\n    console.log('  [T] Training Commands');\n    console.log('  [A] Analysis Operations');\n    console.log('  [U] Automation Setup');\n    console.log('  [C] Coordination Tools');\n    console.log('\\nPress a key to execute command...');\n  }\n\n  /**\n   * Handle input for enhanced views (fallback mode)\n   */\n  async handleNeuralInput(input) {\n    const actions = {\n      t: () => this.executeTool('neural_train'),\n      p: () => this.executeTool('neural_predict'),\n      s: () => this.executeTool('neural_status'),\n      a: () => this.executeTool('neural_patterns'),\n      m: () => this.executeTool('model_load'),\n      o: () => this.executeTool('wasm_optimize'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n      return true;\n    }\n    return false;\n  }\n\n  async handleMemoryInput(input) {\n    const actions = {\n      s: () => this.executeTool('memory_usage', { action: 'store' }),\n      r: () => this.executeTool('memory_usage', { action: 'retrieve' }),\n      b: () => this.executeTool('memory_backup'),\n      c: () => this.executeTool('memory_compress'),\n      y: () => this.executeTool('memory_sync'),\n      a: () => this.executeTool('memory_analytics'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n      return true;\n    }\n    return false;\n  }\n\n  async handleMonitoringInput(input) {\n    const actions = {\n      p: () => this.executeTool('performance_report'),\n      b: () => this.executeTool('bottleneck_analyze'),\n      t: () => this.executeTool('token_usage'),\n      m: () => this.executeTool('metrics_collect'),\n      h: () => this.executeTool('health_check'),\n      e: () => this.executeTool('error_analysis'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n      return true;\n    }\n    return false;\n  }\n\n  async handleWorkflowInput(input) {\n    const actions = {\n      c: () => this.executeTool('workflow_create'),\n      e: () => this.executeTool('workflow_execute'),\n      a: () => this.executeTool('automation_setup'),\n      p: () => this.executeTool('pipeline_create'),\n      s: () => this.executeTool('scheduler_manage'),\n      t: () => this.executeTool('trigger_setup'),\n      w: () => this.executeTool('workflow_template'),\n      b: () => this.executeTool('batch_process'),\n      l: () => this.executeTool('parallel_execute'),\n      m: () => this.executeTool('sparc_mode'),\n      o: () => this.executeTool('task_orchestrate'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Show help for enhanced UI\n   */\n  showHelp() {\n    console.log('\\nüé® Enhanced Web UI Help');\n    console.log('‚ïê'.repeat(60));\n    console.log('Navigation:');\n    console.log('  1-6: Original views');\n    console.log('  7: Neural Network Tools');\n    console.log('  8: Memory Management');\n    console.log('  9: Advanced Monitoring');\n    console.log('  0: Workflow Management');\n    console.log('\\nTool Categories:');\n    console.log('  üß† Neural (15 tools): Training, prediction, patterns');\n    console.log('  üíæ Memory (10 tools): Storage, backup, analytics');\n    console.log('  üìä Monitor (13 tools): Performance, bottlenecks, health');\n    console.log('  üîÑ Workflow (11 tools): Automation, pipelines, scheduling');\n    console.log('  üêô GitHub (8 tools): Repository analysis, PR management');\n    console.log('  ü§ñ DAA (8 tools): Dynamic agents, consensus, fault tolerance');\n    console.log('  üõ†Ô∏è System (6 tools): Security, backup, diagnostics');\n    console.log('  ‚å®Ô∏è CLI (9 commands): Bridge to command-line tools');\n    console.log('‚ïê'.repeat(60));\n  }\n\n  /**\n   * Shutdown enhanced UI\n   */\n  async shutdown() {\n    console.log('üîÑ Shutting down Enhanced Web UI...');\n\n    if (this.uiManager && !this.fallbackMode) {\n      await this.uiManager.shutdown();\n    }\n\n    this.isInitialized = false;\n    this.fallbackMode = false;\n\n    console.log('‚úÖ Enhanced Web UI shutdown complete');\n  }\n}\n\nexport default EnhancedWebUI;\n\n// Auto-detect and enhance existing process UI if available\nif (typeof window !== 'undefined') {\n  window.addEventListener('load', async () => {\n    // Check if there's an existing process UI to enhance\n    if (window.claudeFlowProcessUI) {\n      console.log('üîó Enhancing existing process UI...');\n      const enhancedUI = new EnhancedWebUI();\n      await enhancedUI.initialize(window.claudeFlowProcessUI);\n      window.claudeFlowEnhancedUI = enhancedUI;\n    }\n  });\n}\n"],"names":["UIManager","EnhancedWebUI","uiManager","isInitialized","fallbackMode","originalProcessUI","initialize","existingProcessUI","console","log","error","warn","initializeFallbackMode","integrateWithExistingUI","createFallbackUI","addEnhancedViewsToProcessUI","createStandaloneUI","enhancedViews","NEURAL","MEMORY_MGMT","MONITORING_ADV","WORKFLOW_MGMT","GITHUB_INT","DAA_CONTROL","SYSTEM_UTILS","CLI_BRIDGE","VIEWS","Object","assign","originalRender","render","bind","handleEnhancedViews","originalHandleInput","handleViewSpecificInput","input","handleEnhancedInput","currentView","renderNeuralView","renderMemoryManagementView","renderAdvancedMonitoringView","renderWorkflowManagementView","renderGitHubIntegrationView","renderDAAControlView","renderSystemUtilitiesView","renderCLIBridgeView","enhancedShortcuts","handleNeuralInput","handleMemoryInput","handleMonitoringInput","handleWorkflowInput","repeat","navigateToView","viewId","params","selectedIndex","executeTool","toolName","executeMCPTool","Promise","resolve","setTimeout","mockResult","success","tool","result","timestamp","Date","now","getSystemStatus","mode","toolsAvailable","enhancedFeatures","addEnhancedNavigation","addToolPalette","addQuickActions","clear","actions","t","p","s","a","m","o","action","r","b","c","y","h","e","w","l","showHelp","shutdown","window","addEventListener","claudeFlowProcessUI","enhancedUI","claudeFlowEnhancedUI"],"mappings":"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"}