{"version":3,"sources":["../../../../src/ui/web-ui/neural-panel-test.js"],"sourcesContent":["/**\n * Automated Neural Networks Panel Test Suite\n * Tests all 5 tabs and 15 tools comprehensively\n */\n\nexport class NeuralPanelTest {\n  constructor() {\n    this.testResults = {\n      panelOpen: false,\n      tabs: {\n        tools: { found: false, clicked: false, content: false },\n        training: { found: false, clicked: false, content: false },\n        models: { found: false, clicked: false, content: false },\n        patterns: { found: false, clicked: false, content: false },\n        performance: { found: false, clicked: false, content: false },\n      },\n      tools: {\n        total: 0,\n        categories: [],\n        executeButtons: 0,\n        configureButtons: 0,\n        tested: [],\n      },\n      controls: {\n        refresh: false,\n        export: false,\n        close: false,\n      },\n      animations: {\n        smooth: false,\n        transitions: false,\n      },\n      responsiveness: {\n        tested: false,\n        mobile: false,\n        tablet: false,\n        desktop: false,\n      },\n    };\n  }\n\n  // Main test runner\n  async runTests() {\n    console.log('üß™ Starting Neural Networks Panel Test Suite');\n\n    // Test 1: Open Neural Panel\n    await this.testOpenPanel();\n\n    // Test 2: Test all 5 tabs\n    await this.testAllTabs();\n\n    // Test 3: Test Tools tab in detail\n    await this.testToolsTab();\n\n    // Test 4: Test panel controls\n    await this.testPanelControls();\n\n    // Test 5: Test animations\n    await this.testAnimations();\n\n    // Test 6: Test responsiveness\n    await this.testResponsiveness();\n\n    // Generate report\n    return this.generateReport();\n  }\n\n  // Test opening the neural panel\n  async testOpenPanel() {\n    console.log('üìã Test 1: Opening Neural Panel');\n\n    // Find neural button in header\n    const neuralButton = this.findNeuralButton();\n\n    if (neuralButton) {\n      console.log('‚úÖ Found Neural button');\n\n      // Click and wait\n      neuralButton.click();\n      await this.wait(500);\n\n      // Check if panel opened\n      const panel = this.findNeuralPanel();\n      if (panel) {\n        this.testResults.panelOpen = true;\n        console.log('‚úÖ Neural panel opened successfully');\n\n        // Take screenshot simulation\n        this.captureState('Panel opened');\n      } else {\n        console.error('‚ùå Neural panel did not open');\n      }\n    } else {\n      console.error('‚ùå Could not find Neural button');\n    }\n  }\n\n  // Test all 5 tabs\n  async testAllTabs() {\n    console.log('üìã Test 2: Testing all 5 tabs');\n\n    const tabs = ['tools', 'training', 'models', 'patterns', 'performance'];\n\n    for (const tabName of tabs) {\n      console.log(`  Testing ${tabName} tab...`);\n\n      const tab = this.findTab(tabName);\n      if (tab) {\n        this.testResults.tabs[tabName].found = true;\n\n        // Click tab\n        tab.click();\n        await this.wait(300);\n\n        this.testResults.tabs[tabName].clicked = true;\n\n        // Check content loaded\n        const content = this.findTabContent(tabName);\n        if (content) {\n          this.testResults.tabs[tabName].content = true;\n          console.log(`  ‚úÖ ${tabName} tab working correctly`);\n\n          // Capture state\n          this.captureState(`${tabName} tab active`);\n        }\n      } else {\n        console.error(`  ‚ùå ${tabName} tab not found`);\n      }\n    }\n  }\n\n  // Detailed test of Tools tab\n  async testToolsTab() {\n    console.log('üìã Test 3: Testing Tools tab in detail');\n\n    // Switch to Tools tab\n    const toolsTab = this.findTab('tools');\n    if (toolsTab) {\n      toolsTab.click();\n      await this.wait(300);\n\n      // Find all tool cards\n      const toolCards = this.findToolCards();\n      this.testResults.tools.total = toolCards.length;\n\n      console.log(`  Found ${toolCards.length} tool cards`);\n\n      if (toolCards.length === 15) {\n        console.log('  ‚úÖ All 15 tools are displayed');\n      } else {\n        console.log(`  ‚ö†Ô∏è Expected 15 tools, found ${toolCards.length}`);\n      }\n\n      // Test categories\n      const categories = this.findToolCategories();\n      this.testResults.tools.categories = categories;\n      console.log(`  Found ${categories.length} categories: ${categories.join(', ')}`);\n\n      // Test each tool card\n      for (let i = 0; i < Math.min(3, toolCards.length); i++) {\n        await this.testToolCard(toolCards[i], i);\n      }\n\n      // Count buttons\n      const executeButtons = document.querySelectorAll('.execute-btn, [data-action=\"execute\"]');\n      const configButtons = document.querySelectorAll('.config-btn, [data-action=\"configure\"]');\n\n      this.testResults.tools.executeButtons = executeButtons.length;\n      this.testResults.tools.configureButtons = configButtons.length;\n\n      console.log(`  Found ${executeButtons.length} execute buttons`);\n      console.log(`  Found ${configButtons.length} configure buttons`);\n    }\n  }\n\n  // Test individual tool card\n  async testToolCard(card, index) {\n    console.log(`  Testing tool card ${index + 1}...`);\n\n    const toolName = card.querySelector('.tool-name, h3, h4')?.textContent || `Tool ${index + 1}`;\n\n    // Test execute button\n    const execBtn = card.querySelector('.execute-btn, [data-action=\"execute\"]');\n    if (execBtn) {\n      execBtn.click();\n      await this.wait(200);\n      console.log(`    ‚úÖ Execute button clicked for ${toolName}`);\n\n      // Check for response/modal\n      const response = document.querySelector('.tool-response, .modal, .dialog');\n      if (response) {\n        console.log(`    ‚úÖ Response shown for ${toolName}`);\n        // Close if needed\n        const closeBtn = response.querySelector('.close, [data-action=\"close\"]');\n        if (closeBtn) closeBtn.click();\n      }\n    }\n\n    // Test configure button\n    const configBtn = card.querySelector('.config-btn, [data-action=\"configure\"]');\n    if (configBtn) {\n      configBtn.click();\n      await this.wait(200);\n      console.log(`    ‚úÖ Configure button clicked for ${toolName}`);\n\n      // Close any config modal\n      const modal = document.querySelector('.config-modal, .modal');\n      if (modal) {\n        const closeBtn = modal.querySelector('.close, [data-action=\"close\"]');\n        if (closeBtn) closeBtn.click();\n      }\n    }\n\n    this.testResults.tools.tested.push(toolName);\n  }\n\n  // Test panel controls\n  async testPanelControls() {\n    console.log('üìã Test 4: Testing panel controls');\n\n    // Test refresh button\n    const refreshBtn = this.findControl('refresh');\n    if (refreshBtn) {\n      refreshBtn.click();\n      await this.wait(300);\n      this.testResults.controls.refresh = true;\n      console.log('  ‚úÖ Refresh button works');\n    }\n\n    // Test export button\n    const exportBtn = this.findControl('export');\n    if (exportBtn) {\n      exportBtn.click();\n      await this.wait(300);\n      this.testResults.controls.export = true;\n      console.log('  ‚úÖ Export button works');\n    }\n\n    // Test close button\n    const closeBtn = this.findControl('close');\n    if (closeBtn) {\n      console.log('  ‚úÖ Close button found (not clicking to keep panel open)');\n      this.testResults.controls.close = true;\n    }\n  }\n\n  // Test animations and transitions\n  async testAnimations() {\n    console.log('üìã Test 5: Testing animations');\n\n    // Check for CSS transitions\n    const panel = this.findNeuralPanel();\n    if (panel) {\n      const styles = window.getComputedStyle(panel);\n      const hasTransition = styles.transition !== 'none' && styles.transition !== '';\n\n      if (hasTransition) {\n        this.testResults.animations.transitions = true;\n        console.log('  ‚úÖ CSS transitions detected');\n      }\n\n      // Test tab switching animation\n      const tabs = document.querySelectorAll('.tab, [role=\"tab\"]');\n      if (tabs.length >= 2) {\n        tabs[0].click();\n        await this.wait(150);\n        tabs[1].click();\n        await this.wait(150);\n\n        this.testResults.animations.smooth = true;\n        console.log('  ‚úÖ Tab switching animations smooth');\n      }\n    }\n  }\n\n  // Test responsiveness\n  async testResponsiveness() {\n    console.log('üìã Test 6: Testing responsiveness');\n\n    const originalWidth = window.innerWidth;\n    const originalHeight = window.innerHeight;\n\n    // Test mobile\n    window.resizeTo(375, 667);\n    await this.wait(300);\n    this.testResults.responsiveness.mobile = this.checkLayout();\n    console.log('  ‚úÖ Mobile view tested (375x667)');\n\n    // Test tablet\n    window.resizeTo(768, 1024);\n    await this.wait(300);\n    this.testResults.responsiveness.tablet = this.checkLayout();\n    console.log('  ‚úÖ Tablet view tested (768x1024)');\n\n    // Test desktop\n    window.resizeTo(1920, 1080);\n    await this.wait(300);\n    this.testResults.responsiveness.desktop = this.checkLayout();\n    console.log('  ‚úÖ Desktop view tested (1920x1080)');\n\n    // Restore original size\n    window.resizeTo(originalWidth, originalHeight);\n\n    this.testResults.responsiveness.tested = true;\n  }\n\n  // Helper methods\n  findNeuralButton() {\n    return (\n      document.querySelector(\n        '[data-view=\"neural\"], ' +\n          'button[aria-label*=\"Neural\"], ' +\n          'button:contains(\"Neural\"), ' +\n          '.neural-button, ' +\n          '.header-nav button:nth-of-type(5)',\n      ) ||\n      Array.from(document.querySelectorAll('button')).find(\n        (btn) => btn.textContent.includes('Neural') || btn.textContent.includes('üß†'),\n      )\n    );\n  }\n\n  findNeuralPanel() {\n    return document.querySelector(\n      '.neural-panel, ' + '.panel-neural, ' + '[data-panel=\"neural\"], ' + '.view-panel.active',\n    );\n  }\n\n  findTab(tabName) {\n    return (\n      document.querySelector(\n        `[data-tab=\"${tabName}\"], ` +\n          `[role=\"tab\"][aria-label*=\"${tabName}\"], ` +\n          `.tab-${tabName}`,\n      ) ||\n      Array.from(document.querySelectorAll('.tab, [role=\"tab\"]')).find((tab) =>\n        tab.textContent.toLowerCase().includes(tabName),\n      )\n    );\n  }\n\n  findTabContent(tabName) {\n    return document.querySelector(\n      `[data-tab-content=\"${tabName}\"], ` + `.tab-content-${tabName}, ` + `.${tabName}-content`,\n    );\n  }\n\n  findToolCards() {\n    return document.querySelectorAll(\n      '.tool-card, ' + '.neural-tool-card, ' + '[data-tool], ' + '.tool-item',\n    );\n  }\n\n  findToolCategories() {\n    const categoryElements = document.querySelectorAll('.tool-category, .category-header');\n    return Array.from(categoryElements).map((el) => el.textContent.trim());\n  }\n\n  findControl(type) {\n    const selectors = {\n      refresh: '[data-action=\"refresh\"], .refresh-btn, button[aria-label*=\"Refresh\"]',\n      export: '[data-action=\"export\"], .export-btn, button[aria-label*=\"Export\"]',\n      close: '[data-action=\"close\"], .close-btn, button[aria-label*=\"Close\"]',\n    };\n\n    return (\n      document.querySelector(selectors[type]) ||\n      Array.from(document.querySelectorAll('button')).find((btn) =>\n        btn.textContent.toLowerCase().includes(type),\n      )\n    );\n  }\n\n  checkLayout() {\n    const panel = this.findNeuralPanel();\n    if (!panel) return false;\n\n    const rect = panel.getBoundingClientRect();\n    return rect.width > 0 && rect.height > 0 && rect.top >= 0 && rect.left >= 0;\n  }\n\n  captureState(description) {\n    // Simulate screenshot capture\n    console.log(`üì∏ Screenshot: ${description}`);\n\n    // In real implementation, this would capture actual screenshots\n    const state = {\n      timestamp: new Date().toISOString(),\n      description,\n      viewport: `${window.innerWidth}x${window.innerHeight}`,\n      panelVisible: !!this.findNeuralPanel(),\n    };\n\n    return state;\n  }\n\n  async wait(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  // Generate comprehensive report\n  generateReport() {\n    const report = {\n      summary: {\n        timestamp: new Date().toISOString(),\n        duration: 'Completed',\n        overallStatus: this.calculateOverallStatus(),\n      },\n      details: this.testResults,\n      screenshots: [], // Would contain actual screenshots\n      recommendations: this.generateRecommendations(),\n    };\n\n    console.log('\\nüìä TEST REPORT:');\n    console.log('================');\n    console.log(JSON.stringify(report, null, 2));\n\n    return report;\n  }\n\n  calculateOverallStatus() {\n    const checks = [\n      this.testResults.panelOpen,\n      Object.values(this.testResults.tabs).every((tab) => tab.found),\n      this.testResults.tools.total === 15,\n      Object.values(this.testResults.controls).some((ctrl) => ctrl),\n      this.testResults.responsiveness.tested,\n    ];\n\n    const passed = checks.filter(Boolean).length;\n    const total = checks.length;\n\n    return {\n      passed,\n      total,\n      percentage: Math.round((passed / total) * 100),\n      status: passed === total ? 'PASS' : passed > total / 2 ? 'PARTIAL' : 'FAIL',\n    };\n  }\n\n  generateRecommendations() {\n    const recommendations = [];\n\n    if (!this.testResults.panelOpen) {\n      recommendations.push('Fix Neural button visibility or click handler');\n    }\n\n    if (this.testResults.tools.total !== 15) {\n      recommendations.push(\n        `Ensure all 15 tools are displayed (found ${this.testResults.tools.total})`,\n      );\n    }\n\n    if (!this.testResults.animations.transitions) {\n      recommendations.push('Add CSS transitions for better UX');\n    }\n\n    return recommendations;\n  }\n}\n\n// Export for use\nexport default NeuralPanelTest;\n"],"names":["NeuralPanelTest","testResults","panelOpen","tabs","tools","found","clicked","content","training","models","patterns","performance","total","categories","executeButtons","configureButtons","tested","controls","refresh","export","close","animations","smooth","transitions","responsiveness","mobile","tablet","desktop","runTests","console","log","testOpenPanel","testAllTabs","testToolsTab","testPanelControls","testAnimations","testResponsiveness","generateReport","neuralButton","findNeuralButton","click","wait","panel","findNeuralPanel","captureState","error","tabName","tab","findTab","findTabContent","toolsTab","toolCards","findToolCards","length","findToolCategories","join","i","Math","min","testToolCard","document","querySelectorAll","configButtons","card","index","toolName","querySelector","textContent","execBtn","response","closeBtn","configBtn","modal","push","refreshBtn","findControl","exportBtn","styles","window","getComputedStyle","hasTransition","transition","originalWidth","innerWidth","originalHeight","innerHeight","resizeTo","checkLayout","Array","from","find","btn","includes","toLowerCase","categoryElements","map","el","trim","type","selectors","rect","getBoundingClientRect","width","height","top","left","description","state","timestamp","Date","toISOString","viewport","panelVisible","ms","Promise","resolve","setTimeout","report","summary","duration","overallStatus","calculateOverallStatus","details","screenshots","recommendations","generateRecommendations","JSON","stringify","checks","Object","values","every","some","ctrl","passed","filter","Boolean","percentage","round","status"],"mappings":"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"}