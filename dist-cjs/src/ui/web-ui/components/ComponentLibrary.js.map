{"version":3,"sources":["../../../../../src/ui/web-ui/components/ComponentLibrary.js"],"sourcesContent":["/**\n * ComponentLibrary - Reusable UI components for Claude Flow Web UI\n * Provides consistent, themeable components across all views\n */\n\nexport class ComponentLibrary {\n  constructor() {\n    this.components = new Map();\n    this.theme = 'dark';\n    this.isInitialized = false;\n  }\n\n  /**\n   * Initialize component library\n   */\n  initialize() {\n    this.registerComponents();\n    this.addComponentStyles();\n    this.isInitialized = true;\n    console.log('🎨 Component Library initialized');\n  }\n\n  /**\n   * Register all reusable components\n   */\n  registerComponents() {\n    this.components.set('ToolPanel', this.createToolPanel);\n    this.components.set('MetricsChart', this.createMetricsChart);\n    this.components.set('CommandPalette', this.createCommandPalette);\n    this.components.set('ProgressBar', this.createProgressBar);\n    this.components.set('StatusBadge', this.createStatusBadge);\n    this.components.set('LoadingSpinner', this.createLoadingSpinner);\n    this.components.set('ErrorMessage', this.createErrorMessage);\n    this.components.set('SuccessMessage', this.createSuccessMessage);\n    this.components.set('InfoPanel', this.createInfoPanel);\n    this.components.set('ActionButton', this.createActionButton);\n    this.components.set('ToolGrid', this.createToolGrid);\n    this.components.set('StatsCard', this.createStatsCard);\n    this.components.set('LogViewer', this.createLogViewer);\n    this.components.set('FormBuilder', this.createFormBuilder);\n    this.components.set('TabContainer', this.createTabContainer);\n  }\n\n  /**\n   * Get component by name\n   */\n  getComponent(name) {\n    const component = this.components.get(name);\n    if (!component) {\n      throw new Error(`Component not found: ${name}`);\n    }\n    return component;\n  }\n\n  /**\n   * Create tool panel component\n   */\n  createToolPanel(config) {\n    const panel = document.createElement('div');\n    panel.className = 'claude-tool-panel';\n\n    const header = document.createElement('div');\n    header.className = 'claude-tool-panel-header';\n\n    const title = document.createElement('h3');\n    title.textContent = config.title;\n    title.className = 'claude-tool-panel-title';\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = config.description;\n    subtitle.className = 'claude-tool-panel-subtitle';\n\n    header.appendChild(title);\n    header.appendChild(subtitle);\n\n    const content = document.createElement('div');\n    content.className = 'claude-tool-panel-content';\n\n    panel.appendChild(header);\n    panel.appendChild(content);\n\n    return {\n      element: panel,\n      content,\n      setTitle: (newTitle) => {\n        title.textContent = newTitle;\n      },\n      setDescription: (newDesc) => {\n        subtitle.textContent = newDesc;\n      },\n      clear: () => {\n        content.innerHTML = '';\n      },\n      append: (element) => {\n        content.appendChild(element);\n      },\n    };\n  }\n\n  /**\n   * Create metrics chart component\n   */\n  createMetricsChart(config) {\n    const container = document.createElement('div');\n    container.className = 'claude-metrics-chart';\n\n    const title = document.createElement('h4');\n    title.textContent = config.title;\n    title.className = 'claude-chart-title';\n\n    const canvas = document.createElement('canvas');\n    canvas.width = config.width || 400;\n    canvas.height = config.height || 200;\n    canvas.className = 'claude-chart-canvas';\n\n    const legend = document.createElement('div');\n    legend.className = 'claude-chart-legend';\n\n    container.appendChild(title);\n    container.appendChild(canvas);\n    container.appendChild(legend);\n\n    return {\n      element: container,\n      canvas,\n      updateData: (data) => this.updateChart(canvas, data, config),\n      setTitle: (newTitle) => {\n        title.textContent = newTitle;\n      },\n      addLegendItem: (label, color) => this.addLegendItem(legend, label, color),\n    };\n  }\n\n  /**\n   * Create command palette component\n   */\n  createCommandPalette(config) {\n    const overlay = document.createElement('div');\n    overlay.className = 'claude-command-palette-overlay';\n    overlay.style.display = 'none';\n\n    const palette = document.createElement('div');\n    palette.className = 'claude-command-palette';\n\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = 'Type a command...';\n    input.className = 'claude-command-input';\n\n    const results = document.createElement('div');\n    results.className = 'claude-command-results';\n\n    palette.appendChild(input);\n    palette.appendChild(results);\n    overlay.appendChild(palette);\n\n    return {\n      element: overlay,\n      input,\n      results,\n      show: () => {\n        overlay.style.display = 'flex';\n        input.focus();\n      },\n      hide: () => {\n        overlay.style.display = 'none';\n      },\n      updateResults: (commands) => this.updateCommandResults(results, commands),\n      onCommand: null, // Set by user\n    };\n  }\n\n  /**\n   * Create progress bar component\n   */\n  createProgressBar(config) {\n    const container = document.createElement('div');\n    container.className = 'claude-progress-container';\n\n    const label = document.createElement('div');\n    label.className = 'claude-progress-label';\n    label.textContent = config.label || 'Progress';\n\n    const bar = document.createElement('div');\n    bar.className = 'claude-progress-bar';\n\n    const fill = document.createElement('div');\n    fill.className = 'claude-progress-fill';\n    fill.style.width = '0%';\n\n    const text = document.createElement('div');\n    text.className = 'claude-progress-text';\n    text.textContent = '0%';\n\n    bar.appendChild(fill);\n    bar.appendChild(text);\n    container.appendChild(label);\n    container.appendChild(bar);\n\n    return {\n      element: container,\n      setProgress: (percent) => {\n        fill.style.width = `${percent}%`;\n        text.textContent = `${Math.round(percent)}%`;\n      },\n      setLabel: (newLabel) => {\n        label.textContent = newLabel;\n      },\n    };\n  }\n\n  /**\n   * Create status badge component\n   */\n  createStatusBadge(status, text) {\n    const badge = document.createElement('span');\n    badge.className = `claude-status-badge claude-status-${status}`;\n    badge.textContent = text || status;\n\n    return {\n      element: badge,\n      setStatus: (newStatus) => {\n        badge.className = `claude-status-badge claude-status-${newStatus}`;\n      },\n      setText: (newText) => {\n        badge.textContent = newText;\n      },\n    };\n  }\n\n  /**\n   * Create loading spinner component\n   */\n  createLoadingSpinner(config = {}) {\n    const container = document.createElement('div');\n    container.className = 'claude-loading-container';\n\n    const spinner = document.createElement('div');\n    spinner.className = 'claude-loading-spinner';\n\n    const message = document.createElement('div');\n    message.className = 'claude-loading-message';\n    message.textContent = config.message || 'Loading...';\n\n    container.appendChild(spinner);\n    container.appendChild(message);\n\n    return {\n      element: container,\n      setMessage: (newMessage) => {\n        message.textContent = newMessage;\n      },\n      show: () => {\n        container.style.display = 'flex';\n      },\n      hide: () => {\n        container.style.display = 'none';\n      },\n    };\n  }\n\n  /**\n   * Create error message component\n   */\n  createErrorMessage(message, details = null) {\n    const container = document.createElement('div');\n    container.className = 'claude-error-message';\n\n    const icon = document.createElement('span');\n    icon.textContent = '❌';\n    icon.className = 'claude-error-icon';\n\n    const text = document.createElement('div');\n    text.className = 'claude-error-text';\n    text.textContent = message;\n\n    container.appendChild(icon);\n    container.appendChild(text);\n\n    if (details) {\n      const detailsEl = document.createElement('div');\n      detailsEl.className = 'claude-error-details';\n      detailsEl.textContent = details;\n      container.appendChild(detailsEl);\n    }\n\n    return {\n      element: container,\n      setMessage: (newMessage) => {\n        text.textContent = newMessage;\n      },\n      setDetails: (newDetails) => {\n        if (newDetails) {\n          if (!container.querySelector('.claude-error-details')) {\n            const detailsEl = document.createElement('div');\n            detailsEl.className = 'claude-error-details';\n            container.appendChild(detailsEl);\n          }\n          container.querySelector('.claude-error-details').textContent = newDetails;\n        }\n      },\n    };\n  }\n\n  /**\n   * Create success message component\n   */\n  createSuccessMessage(message) {\n    const container = document.createElement('div');\n    container.className = 'claude-success-message';\n\n    const icon = document.createElement('span');\n    icon.textContent = '✅';\n    icon.className = 'claude-success-icon';\n\n    const text = document.createElement('div');\n    text.className = 'claude-success-text';\n    text.textContent = message;\n\n    container.appendChild(icon);\n    container.appendChild(text);\n\n    return {\n      element: container,\n      setMessage: (newMessage) => {\n        text.textContent = newMessage;\n      },\n    };\n  }\n\n  /**\n   * Create info panel component\n   */\n  createInfoPanel(config) {\n    const panel = document.createElement('div');\n    panel.className = 'claude-info-panel';\n\n    const header = document.createElement('div');\n    header.className = 'claude-info-header';\n    header.textContent = config.title;\n\n    const content = document.createElement('div');\n    content.className = 'claude-info-content';\n\n    panel.appendChild(header);\n    panel.appendChild(content);\n\n    return {\n      element: panel,\n      content,\n      setTitle: (title) => {\n        header.textContent = title;\n      },\n      setContent: (html) => {\n        content.innerHTML = html;\n      },\n      append: (element) => {\n        content.appendChild(element);\n      },\n      clear: () => {\n        content.innerHTML = '';\n      },\n    };\n  }\n\n  /**\n   * Create action button component\n   */\n  createActionButton(config) {\n    const button = document.createElement('button');\n    button.className = `claude-action-button claude-button-${config.type || 'primary'}`;\n    button.textContent = config.text;\n\n    if (config.icon) {\n      const icon = document.createElement('span');\n      icon.textContent = config.icon;\n      icon.className = 'claude-button-icon';\n      button.insertBefore(icon, button.firstChild);\n    }\n\n    if (config.onclick) {\n      button.addEventListener('click', config.onclick);\n    }\n\n    return {\n      element: button,\n      setText: (text) => {\n        button.textContent = text;\n        if (config.icon) {\n          const icon = document.createElement('span');\n          icon.textContent = config.icon;\n          icon.className = 'claude-button-icon';\n          button.insertBefore(icon, button.firstChild);\n        }\n      },\n      setDisabled: (disabled) => {\n        button.disabled = disabled;\n      },\n      setLoading: (loading) => {\n        if (loading) {\n          button.classList.add('claude-button-loading');\n          button.disabled = true;\n        } else {\n          button.classList.remove('claude-button-loading');\n          button.disabled = false;\n        }\n      },\n    };\n  }\n\n  /**\n   * Create tool grid component\n   */\n  createToolGrid(tools, onToolClick) {\n    const grid = document.createElement('div');\n    grid.className = 'claude-tool-grid';\n\n    tools.forEach((tool) => {\n      const card = document.createElement('div');\n      card.className = 'claude-tool-card';\n\n      const icon = document.createElement('div');\n      icon.className = 'claude-tool-icon';\n      icon.textContent = tool.icon || '🔧';\n\n      const name = document.createElement('div');\n      name.className = 'claude-tool-name';\n      name.textContent = tool.name;\n\n      const desc = document.createElement('div');\n      desc.className = 'claude-tool-description';\n      desc.textContent = tool.description;\n\n      card.appendChild(icon);\n      card.appendChild(name);\n      card.appendChild(desc);\n\n      card.addEventListener('click', () => onToolClick(tool));\n\n      grid.appendChild(card);\n    });\n\n    return {\n      element: grid,\n      updateTools: (newTools) => {\n        grid.innerHTML = '';\n        newTools.forEach((tool) => {\n          // Recreate cards with new tools\n          const card = this.createToolCard(tool, onToolClick);\n          grid.appendChild(card);\n        });\n      },\n    };\n  }\n\n  /**\n   * Create stats card component\n   */\n  createStatsCard(config) {\n    const card = document.createElement('div');\n    card.className = 'claude-stats-card';\n\n    const icon = document.createElement('div');\n    icon.className = 'claude-stats-icon';\n    icon.textContent = config.icon;\n\n    const content = document.createElement('div');\n    content.className = 'claude-stats-content';\n\n    const value = document.createElement('div');\n    value.className = 'claude-stats-value';\n    value.textContent = config.value;\n\n    const label = document.createElement('div');\n    label.className = 'claude-stats-label';\n    label.textContent = config.label;\n\n    content.appendChild(value);\n    content.appendChild(label);\n    card.appendChild(icon);\n    card.appendChild(content);\n\n    return {\n      element: card,\n      setValue: (newValue) => {\n        value.textContent = newValue;\n      },\n      setLabel: (newLabel) => {\n        label.textContent = newLabel;\n      },\n      setIcon: (newIcon) => {\n        icon.textContent = newIcon;\n      },\n    };\n  }\n\n  /**\n   * Create tab container component\n   */\n  createTabContainer(tabs) {\n    const container = document.createElement('div');\n    container.className = 'claude-tab-container';\n\n    const tabList = document.createElement('div');\n    tabList.className = 'claude-tab-list';\n\n    const tabContent = document.createElement('div');\n    tabContent.className = 'claude-tab-content';\n\n    let activeTab = 0;\n\n    tabs.forEach((tab, index) => {\n      const tabButton = document.createElement('button');\n      tabButton.className = `claude-tab-button ${index === 0 ? 'active' : ''}`;\n      tabButton.textContent = tab.label;\n\n      const tabPane = document.createElement('div');\n      tabPane.className = `claude-tab-pane ${index === 0 ? 'active' : ''}`;\n      tabPane.innerHTML = tab.content;\n\n      tabButton.addEventListener('click', () => {\n        // Remove active class from all tabs\n        tabList\n          .querySelectorAll('.claude-tab-button')\n          .forEach((btn) => btn.classList.remove('active'));\n        tabContent\n          .querySelectorAll('.claude-tab-pane')\n          .forEach((pane) => pane.classList.remove('active'));\n\n        // Add active class to clicked tab\n        tabButton.classList.add('active');\n        tabPane.classList.add('active');\n        activeTab = index;\n      });\n\n      tabList.appendChild(tabButton);\n      tabContent.appendChild(tabPane);\n    });\n\n    container.appendChild(tabList);\n    container.appendChild(tabContent);\n\n    return {\n      element: container,\n      setActiveTab: (index) => {\n        if (index >= 0 && index < tabs.length) {\n          tabList.children[index].click();\n        }\n      },\n      getActiveTab: () => activeTab,\n      addTab: (tab) => {\n        // Implementation for adding new tabs dynamically\n      },\n    };\n  }\n\n  /**\n   * Add component styles to document\n   */\n  addComponentStyles() {\n    if (document.getElementById('claude-component-styles')) return;\n\n    const styles = document.createElement('style');\n    styles.id = 'claude-component-styles';\n    styles.textContent = `\n      /* Tool Panel Styles */\n      .claude-tool-panel {\n        background: #2a2a2a;\n        border: 1px solid #444;\n        border-radius: 8px;\n        padding: 16px;\n        margin: 8px 0;\n      }\n\n      .claude-tool-panel-header {\n        margin-bottom: 12px;\n      }\n\n      .claude-tool-panel-title {\n        margin: 0 0 4px 0;\n        color: #00d4ff;\n        font-size: 18px;\n      }\n\n      .claude-tool-panel-subtitle {\n        margin: 0;\n        color: #888;\n        font-size: 14px;\n      }\n\n      .claude-tool-panel-content {\n        color: #fff;\n      }\n\n      /* Metrics Chart Styles */\n      .claude-metrics-chart {\n        background: #2a2a2a;\n        border: 1px solid #444;\n        border-radius: 8px;\n        padding: 16px;\n        margin: 8px 0;\n      }\n\n      .claude-chart-title {\n        margin: 0 0 12px 0;\n        color: #00d4ff;\n        font-size: 16px;\n      }\n\n      .claude-chart-canvas {\n        display: block;\n        margin: 0 auto;\n        background: #1a1a1a;\n        border-radius: 4px;\n      }\n\n      .claude-chart-legend {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 12px;\n        margin-top: 8px;\n        justify-content: center;\n      }\n\n      /* Command Palette Styles */\n      .claude-command-palette-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.8);\n        display: flex;\n        justify-content: center;\n        align-items: flex-start;\n        padding-top: 20vh;\n        z-index: 9999;\n      }\n\n      .claude-command-palette {\n        background: #2a2a2a;\n        border: 1px solid #444;\n        border-radius: 8px;\n        width: 600px;\n        max-width: 90vw;\n        max-height: 60vh;\n        overflow: hidden;\n      }\n\n      .claude-command-input {\n        width: 100%;\n        padding: 16px;\n        background: transparent;\n        border: none;\n        color: #fff;\n        font-size: 18px;\n        outline: none;\n        border-bottom: 1px solid #444;\n      }\n\n      .claude-command-results {\n        max-height: 400px;\n        overflow-y: auto;\n      }\n\n      /* Progress Bar Styles */\n      .claude-progress-container {\n        margin: 8px 0;\n      }\n\n      .claude-progress-label {\n        color: #fff;\n        margin-bottom: 4px;\n        font-size: 14px;\n      }\n\n      .claude-progress-bar {\n        position: relative;\n        background: #1a1a1a;\n        border: 1px solid #444;\n        border-radius: 4px;\n        height: 24px;\n        overflow: hidden;\n      }\n\n      .claude-progress-fill {\n        height: 100%;\n        background: linear-gradient(90deg, #00d4ff, #0099cc);\n        transition: width 0.3s ease;\n      }\n\n      .claude-progress-text {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        color: #fff;\n        font-size: 12px;\n        font-weight: bold;\n      }\n\n      /* Status Badge Styles */\n      .claude-status-badge {\n        display: inline-block;\n        padding: 4px 8px;\n        border-radius: 4px;\n        font-size: 12px;\n        font-weight: bold;\n        text-transform: uppercase;\n      }\n\n      .claude-status-success {\n        background: #22c55e;\n        color: white;\n      }\n\n      .claude-status-error {\n        background: #ef4444;\n        color: white;\n      }\n\n      .claude-status-warning {\n        background: #f59e0b;\n        color: white;\n      }\n\n      .claude-status-info {\n        background: #3b82f6;\n        color: white;\n      }\n\n      .claude-status-idle {\n        background: #6b7280;\n        color: white;\n      }\n\n      /* Loading Spinner Styles */\n      .claude-loading-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 32px;\n      }\n\n      .claude-loading-spinner {\n        width: 32px;\n        height: 32px;\n        border: 3px solid #444;\n        border-top: 3px solid #00d4ff;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n      }\n\n      .claude-loading-message {\n        margin-top: 12px;\n        color: #888;\n        font-size: 14px;\n      }\n\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n\n      /* Message Styles */\n      .claude-error-message,\n      .claude-success-message {\n        display: flex;\n        align-items: center;\n        padding: 12px 16px;\n        border-radius: 6px;\n        margin: 8px 0;\n      }\n\n      .claude-error-message {\n        background: #fef2f2;\n        border: 1px solid #fecaca;\n        color: #991b1b;\n      }\n\n      .claude-success-message {\n        background: #f0fdf4;\n        border: 1px solid #bbf7d0;\n        color: #166534;\n      }\n\n      .claude-error-icon,\n      .claude-success-icon {\n        margin-right: 8px;\n        font-size: 16px;\n      }\n\n      /* Tool Grid Styles */\n      .claude-tool-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n        gap: 16px;\n        margin: 16px 0;\n      }\n\n      .claude-tool-card {\n        background: #2a2a2a;\n        border: 1px solid #444;\n        border-radius: 8px;\n        padding: 16px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      }\n\n      .claude-tool-card:hover {\n        border-color: #00d4ff;\n        transform: translateY(-2px);\n      }\n\n      .claude-tool-icon {\n        font-size: 32px;\n        margin-bottom: 8px;\n      }\n\n      .claude-tool-name {\n        font-weight: bold;\n        color: #fff;\n        margin-bottom: 4px;\n      }\n\n      .claude-tool-description {\n        color: #888;\n        font-size: 14px;\n      }\n\n      /* Stats Card Styles */\n      .claude-stats-card {\n        display: flex;\n        align-items: center;\n        background: #2a2a2a;\n        border: 1px solid #444;\n        border-radius: 8px;\n        padding: 16px;\n        margin: 8px 0;\n      }\n\n      .claude-stats-icon {\n        font-size: 24px;\n        margin-right: 12px;\n      }\n\n      .claude-stats-value {\n        font-size: 24px;\n        font-weight: bold;\n        color: #00d4ff;\n      }\n\n      .claude-stats-label {\n        color: #888;\n        font-size: 14px;\n      }\n\n      /* Tab Styles */\n      .claude-tab-container {\n        background: #2a2a2a;\n        border: 1px solid #444;\n        border-radius: 8px;\n        overflow: hidden;\n      }\n\n      .claude-tab-list {\n        display: flex;\n        background: #1a1a1a;\n        border-bottom: 1px solid #444;\n      }\n\n      .claude-tab-button {\n        background: transparent;\n        border: none;\n        color: #888;\n        padding: 12px 16px;\n        cursor: pointer;\n        border-bottom: 2px solid transparent;\n        transition: all 0.2s ease;\n      }\n\n      .claude-tab-button:hover {\n        color: #fff;\n      }\n\n      .claude-tab-button.active {\n        color: #00d4ff;\n        border-bottom-color: #00d4ff;\n      }\n\n      .claude-tab-content {\n        position: relative;\n      }\n\n      .claude-tab-pane {\n        display: none;\n        padding: 16px;\n      }\n\n      .claude-tab-pane.active {\n        display: block;\n      }\n\n      /* Button Styles */\n      .claude-action-button {\n        display: inline-flex;\n        align-items: center;\n        gap: 8px;\n        padding: 8px 16px;\n        border: none;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 14px;\n        font-weight: 500;\n        transition: all 0.2s ease;\n      }\n\n      .claude-button-primary {\n        background: #00d4ff;\n        color: #000;\n      }\n\n      .claude-button-primary:hover {\n        background: #00b8e6;\n      }\n\n      .claude-button-secondary {\n        background: #444;\n        color: #fff;\n      }\n\n      .claude-button-secondary:hover {\n        background: #555;\n      }\n\n      .claude-button-danger {\n        background: #ef4444;\n        color: #fff;\n      }\n\n      .claude-button-danger:hover {\n        background: #dc2626;\n      }\n\n      .claude-button-loading {\n        opacity: 0.7;\n        pointer-events: none;\n      }\n\n      /* Info Panel Styles */\n      .claude-info-panel {\n        background: #2a2a2a;\n        border: 1px solid #444;\n        border-radius: 8px;\n        margin: 8px 0;\n        overflow: hidden;\n      }\n\n      .claude-info-header {\n        background: #1a1a1a;\n        padding: 12px 16px;\n        font-weight: bold;\n        color: #00d4ff;\n        border-bottom: 1px solid #444;\n      }\n\n      .claude-info-content {\n        padding: 16px;\n        color: #fff;\n      }\n    `;\n\n    document.head.appendChild(styles);\n  }\n\n  /**\n   * Update chart with new data\n   */\n  updateChart(canvas, data, config) {\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Simple chart implementation\n    // In a real implementation, you'd use Chart.js or similar\n    const padding = 40;\n    const chartWidth = canvas.width - padding * 2;\n    const chartHeight = canvas.height - padding * 2;\n\n    if (config.type === 'line') {\n      this.drawLineChart(ctx, data, padding, chartWidth, chartHeight);\n    } else if (config.type === 'bar') {\n      this.drawBarChart(ctx, data, padding, chartWidth, chartHeight);\n    }\n  }\n\n  /**\n   * Draw line chart\n   */\n  drawLineChart(ctx, data, padding, width, height) {\n    if (!data || data.length === 0) return;\n\n    const maxValue = Math.max(...data.map((d) => d.value));\n    const stepX = width / (data.length - 1);\n\n    ctx.strokeStyle = '#00d4ff';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n\n    data.forEach((point, index) => {\n      const x = padding + index * stepX;\n      const y = padding + height - (point.value / maxValue) * height;\n\n      if (index === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    });\n\n    ctx.stroke();\n  }\n\n  /**\n   * Draw bar chart\n   */\n  drawBarChart(ctx, data, padding, width, height) {\n    if (!data || data.length === 0) return;\n\n    const maxValue = Math.max(...data.map((d) => d.value));\n    const barWidth = (width / data.length) * 0.8;\n    const barSpacing = (width / data.length) * 0.2;\n\n    ctx.fillStyle = '#00d4ff';\n\n    data.forEach((point, index) => {\n      const x = padding + index * (barWidth + barSpacing);\n      const barHeight = (point.value / maxValue) * height;\n      const y = padding + height - barHeight;\n\n      ctx.fillRect(x, y, barWidth, barHeight);\n    });\n  }\n\n  /**\n   * Set theme\n   */\n  setTheme(theme) {\n    this.theme = theme;\n    // Update component styles based on theme\n    // This would be more comprehensive in a real implementation\n  }\n}\n\nexport default ComponentLibrary;\n"],"names":["ComponentLibrary","components","Map","theme","isInitialized","initialize","registerComponents","addComponentStyles","console","log","set","createToolPanel","createMetricsChart","createCommandPalette","createProgressBar","createStatusBadge","createLoadingSpinner","createErrorMessage","createSuccessMessage","createInfoPanel","createActionButton","createToolGrid","createStatsCard","createLogViewer","createFormBuilder","createTabContainer","getComponent","name","component","get","Error","config","panel","document","createElement","className","header","title","textContent","subtitle","description","appendChild","content","element","setTitle","newTitle","setDescription","newDesc","clear","innerHTML","append","container","canvas","width","height","legend","updateData","data","updateChart","addLegendItem","label","color","overlay","style","display","palette","input","type","placeholder","results","show","focus","hide","updateResults","commands","updateCommandResults","onCommand","bar","fill","text","setProgress","percent","Math","round","setLabel","newLabel","status","badge","setStatus","newStatus","setText","newText","spinner","message","setMessage","newMessage","details","icon","detailsEl","setDetails","newDetails","querySelector","setContent","html","button","insertBefore","firstChild","onclick","addEventListener","setDisabled","disabled","setLoading","loading","classList","add","remove","tools","onToolClick","grid","forEach","tool","card","desc","updateTools","newTools","createToolCard","value","setValue","newValue","setIcon","newIcon","tabs","tabList","tabContent","activeTab","tab","index","tabButton","tabPane","querySelectorAll","btn","pane","setActiveTab","length","children","click","getActiveTab","addTab","getElementById","styles","id","head","ctx","getContext","clearRect","padding","chartWidth","chartHeight","drawLineChart","drawBarChart","maxValue","max","map","d","stepX","strokeStyle","lineWidth","beginPath","point","x","y","moveTo","lineTo","stroke","barWidth","barSpacing","fillStyle","barHeight","fillRect","setTheme"],"mappings":"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"}