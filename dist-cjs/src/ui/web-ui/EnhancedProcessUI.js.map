{"version":3,"sources":["../../../../src/ui/web-ui/EnhancedProcessUI.js"],"sourcesContent":["/**\n * Enhanced Process UI - Upgraded version with modular architecture integration\n * Combines existing process management with 71+ MCP tools and advanced features\n */\n\nimport { printSuccess, printError, printWarning, printInfo } from '../../cli/utils.js';\nimport { compat } from '../../cli/runtime-detector.js';\nimport SwarmWebUIIntegration from '../../cli/simple-commands/swarm-webui-integration.js';\nimport EnhancedWebUI from './EnhancedWebUI.js';\n\n// Enhanced color utilities with more options\nconst colors = {\n  cyan: (text) => `\\x1b[36m${text}\\x1b[0m`,\n  gray: (text) => `\\x1b[90m${text}\\x1b[0m`,\n  white: (text) => `\\x1b[37m${text}\\x1b[0m`,\n  yellow: (text) => `\\x1b[33m${text}\\x1b[0m`,\n  green: (text) => `\\x1b[32m${text}\\x1b[0m`,\n  red: (text) => `\\x1b[31m${text}\\x1b[0m`,\n  blue: (text) => `\\x1b[34m${text}\\x1b[0m`,\n  magenta: (text) => `\\x1b[35m${text}\\x1b[0m`,\n  bold: (text) => `\\x1b[1m${text}\\x1b[0m`,\n  dim: (text) => `\\x1b[2m${text}\\x1b[0m`,\n  bright: (text) => `\\x1b[97m${text}\\x1b[0m`,\n  orange: (text) => `\\x1b[38;5;208m${text}\\x1b[0m`,\n  purple: (text) => `\\x1b[35m${text}\\x1b[0m`,\n};\n\nconst PROCESSES = [\n  { id: 'event-bus', name: 'Event Bus', description: 'Central event distribution system' },\n  { id: 'orchestrator', name: 'Orchestrator', description: 'Main coordination engine' },\n  { id: 'memory-manager', name: 'Memory Manager', description: 'Persistent memory system' },\n  { id: 'terminal-pool', name: 'Terminal Pool', description: 'Terminal session management' },\n  { id: 'mcp-server', name: 'MCP Server', description: 'Model Context Protocol server' },\n  { id: 'coordinator', name: 'Coordinator', description: 'Task coordination service' },\n  { id: 'enhanced-ui', name: 'Enhanced UI', description: 'Advanced web interface system' },\n  { id: 'neural-engine', name: 'Neural Engine', description: 'AI neural network processor' },\n];\n\n// Enhanced view modes with new categories\nconst VIEWS = {\n  OVERVIEW: 'overview',\n  PROCESSES: 'processes',\n  STATUS: 'status',\n  ORCHESTRATION: 'orchestration',\n  MEMORY: 'memory',\n  NEURAL: 'neural',\n  MONITORING: 'monitoring',\n  WORKFLOW: 'workflow',\n  GITHUB: 'github',\n  DAA: 'daa',\n  SYSTEM: 'system',\n  CLI: 'cli',\n  LOGS: 'logs',\n  HELP: 'help',\n};\n\n// Tool category information\nconst TOOL_CATEGORIES = {\n  neural: { icon: 'üß†', name: 'Neural Network', count: 15, color: colors.cyan },\n  memory: { icon: 'üíæ', name: 'Memory Management', count: 10, color: colors.green },\n  monitoring: { icon: 'üìä', name: 'Monitoring & Analysis', count: 13, color: colors.yellow },\n  workflow: { icon: 'üîÑ', name: 'Workflow & Automation', count: 11, color: colors.blue },\n  github: { icon: 'üêô', name: 'GitHub Integration', count: 8, color: colors.magenta },\n  daa: { icon: 'ü§ñ', name: 'Dynamic Agents', count: 8, color: colors.purple },\n  system: { icon: 'üõ†Ô∏è', name: 'System Utilities', count: 6, color: colors.orange },\n  cli: { icon: '‚å®Ô∏è', name: 'CLI Commands', count: 9, color: colors.white },\n};\n\nexport class EnhancedProcessUI {\n  constructor() {\n    this.processes = new Map();\n    this.running = true;\n    this.selectedIndex = 0;\n    this.currentView = VIEWS.OVERVIEW;\n    this.agents = [];\n    this.tasks = [];\n    this.memoryStats = {\n      totalEntries: 0,\n      totalSize: 0,\n      namespaces: [],\n    };\n    this.logs = [];\n    this.systemStats = {\n      uptime: 0,\n      totalTasks: 0,\n      completedTasks: 0,\n      activeAgents: 0,\n      memoryUsage: 0,\n      cpuUsage: 0,\n      toolsAvailable: 71,\n      enhancedMode: false,\n    };\n\n    // Enhanced UI integration\n    this.enhancedWebUI = null;\n    this.toolExecutions = new Map();\n    this.recentTools = [];\n    this.toolStats = new Map();\n\n    // Initialize integrations\n    this.swarmIntegration = new SwarmWebUIIntegration(this);\n\n    // Initialize process states\n    PROCESSES.forEach((p) => {\n      this.processes.set(p.id, {\n        ...p,\n        status: 'stopped',\n        pid: null,\n        uptime: 0,\n        cpu: Math.random() * 5,\n        memory: Math.random() * 100,\n      });\n    });\n\n    // Start system uptime counter\n    setInterval(() => {\n      this.systemStats.uptime++;\n    }, 1000);\n\n    // Initialize enhanced features\n    this.initializeEnhancedFeatures();\n  }\n\n  /**\n   * Initialize enhanced features\n   */\n  async initializeEnhancedFeatures() {\n    try {\n      // Initialize enhanced web UI\n      this.enhancedWebUI = new EnhancedWebUI();\n      await this.enhancedWebUI.initialize(this);\n\n      this.systemStats.enhancedMode = true;\n      this.addLog('success', 'Enhanced UI features initialized');\n\n      // Set enhanced UI process as running\n      const enhancedUIProcess = this.processes.get('enhanced-ui');\n      if (enhancedUIProcess) {\n        enhancedUIProcess.status = 'running';\n        enhancedUIProcess.pid = Math.floor(Math.random() * 10000) + 1000;\n      }\n    } catch (error) {\n      this.addLog('warning', 'Enhanced UI fallback mode enabled');\n      console.warn('Enhanced UI initialization warning:', error);\n    }\n\n    // Initialize swarm (this will create mock data)\n    await this.initializeSwarm();\n\n    // Initialize tool statistics\n    this.initializeToolStats();\n  }\n\n  /**\n   * Initialize tool statistics\n   */\n  initializeToolStats() {\n    Object.keys(TOOL_CATEGORIES).forEach((category) => {\n      this.toolStats.set(category, {\n        executions: 0,\n        lastUsed: null,\n        avgDuration: 0,\n        successRate: 100,\n      });\n    });\n  }\n\n  async initializeSwarm() {\n    // Initialize swarm with mock data\n    await this.swarmIntegration.initializeSwarm('hierarchical', 8);\n\n    // Enhanced memory namespaces\n    this.memoryStats = {\n      totalEntries: 156,\n      totalSize: '2.4 MB',\n      namespaces: [\n        { name: 'neural', entries: 45, size: '678 KB' },\n        { name: 'sparc', entries: 32, size: '512 KB' },\n        { name: 'agents', entries: 28, size: '389 KB' },\n        { name: 'tasks', entries: 24, size: '334 KB' },\n        { name: 'workflows', entries: 18, size: '267 KB' },\n        { name: 'monitoring', entries: 9, size: '245 KB' },\n      ],\n    };\n\n    // Enhanced initial logs\n    this.logs = [\n      { time: new Date(), level: 'info', message: 'System initialized with enhanced features' },\n      { time: new Date(), level: 'success', message: 'All 71+ tools loaded successfully' },\n      { time: new Date(), level: 'success', message: 'Enhanced UI architecture active' },\n      { time: new Date(), level: 'info', message: 'Swarm orchestration ready' },\n      { time: new Date(), level: 'success', message: 'Neural engine online' },\n    ];\n  }\n\n  async start() {\n    // Clear screen\n    console.clear();\n\n    // Show enhanced welcome\n    printSuccess('üß† Claude-Flow Enhanced UI v2.0.0');\n    console.log(colors.dim('Enhanced with 71+ MCP tools and advanced features'));\n    console.log('‚îÄ'.repeat(80));\n    console.log();\n\n    // Initial render\n    this.render();\n\n    // Main UI loop\n    while (this.running) {\n      await this.handleInput();\n      if (this.running) {\n        this.render();\n      }\n    }\n  }\n\n  render() {\n    // Clear screen and move cursor to top\n    console.log('\\x1b[2J\\x1b[H');\n\n    // Header with enhanced navigation\n    this.renderEnhancedHeader();\n\n    // Main content based on current view\n    switch (this.currentView) {\n      case VIEWS.OVERVIEW:\n        this.renderOverviewView();\n        break;\n      case VIEWS.PROCESSES:\n        this.renderProcessView();\n        break;\n      case VIEWS.STATUS:\n        this.renderStatusView();\n        break;\n      case VIEWS.ORCHESTRATION:\n        this.renderOrchestrationView();\n        break;\n      case VIEWS.MEMORY:\n        this.renderMemoryView();\n        break;\n      case VIEWS.NEURAL:\n        this.renderNeuralView();\n        break;\n      case VIEWS.MONITORING:\n        this.renderMonitoringView();\n        break;\n      case VIEWS.WORKFLOW:\n        this.renderWorkflowView();\n        break;\n      case VIEWS.GITHUB:\n        this.renderGitHubView();\n        break;\n      case VIEWS.DAA:\n        this.renderDAAView();\n        break;\n      case VIEWS.SYSTEM:\n        this.renderSystemView();\n        break;\n      case VIEWS.CLI:\n        this.renderCLIView();\n        break;\n      case VIEWS.LOGS:\n        this.renderLogsView();\n        break;\n      case VIEWS.HELP:\n        this.renderEnhancedHelpView();\n        break;\n    }\n\n    // Enhanced footer with tool information\n    this.renderEnhancedFooter();\n  }\n\n  renderEnhancedHeader() {\n    const enhancedStatus = this.systemStats.enhancedMode\n      ? colors.green('ENHANCED')\n      : colors.yellow('FALLBACK');\n\n    console.log(colors.cyan(colors.bold('üß† Claude-Flow Enhanced Process Manager')));\n    console.log(\n      colors.dim(\n        `Mode: ${enhancedStatus} | Tools: ${this.systemStats.toolsAvailable}+ | Uptime: ${this.formatUptime(this.systemStats.uptime)}`,\n      ),\n    );\n    console.log(colors.gray('‚îÄ'.repeat(80)));\n\n    // Enhanced navigation tabs with tool counts\n    const tabs = [\n      { key: '0', view: VIEWS.OVERVIEW, label: 'Overview', icon: 'üè†' },\n      { key: '1', view: VIEWS.PROCESSES, label: 'Processes', icon: '‚öôÔ∏è' },\n      { key: '2', view: VIEWS.STATUS, label: 'Status', icon: 'üìä' },\n      { key: '3', view: VIEWS.ORCHESTRATION, label: 'Orchestration', icon: 'üêù' },\n      { key: '4', view: VIEWS.MEMORY, label: 'Memory', icon: 'üíæ' },\n      { key: '5', view: VIEWS.NEURAL, label: 'Neural (15)', icon: 'üß†' },\n      { key: '6', view: VIEWS.MONITORING, label: 'Monitor (13)', icon: 'üìä' },\n      { key: '7', view: VIEWS.WORKFLOW, label: 'Workflow (11)', icon: 'üîÑ' },\n      { key: '8', view: VIEWS.GITHUB, label: 'GitHub (8)', icon: 'üêô' },\n      { key: '9', view: VIEWS.LOGS, label: 'Logs', icon: 'üìú' },\n      { key: '?', view: VIEWS.HELP, label: 'Help', icon: '‚ùì' },\n    ];\n\n    let tabLine = '';\n    tabs.forEach((tab, index) => {\n      const isActive = this.currentView === tab.view;\n      const label = isActive\n        ? colors.yellow(`[${tab.icon} ${tab.label}]`)\n        : colors.gray(`${tab.icon} ${tab.label}`);\n      tabLine += `  ${colors.bold(tab.key)}:${label}`;\n\n      // Add line break every 4 tabs for better layout\n      if ((index + 1) % 4 === 0 && index < tabs.length - 1) {\n        tabLine += '\\n';\n      }\n    });\n\n    console.log(tabLine);\n    console.log(colors.gray('‚îÄ'.repeat(80)));\n    console.log();\n  }\n\n  renderOverviewView() {\n    console.log(colors.white(colors.bold('üè† System Overview')));\n    console.log();\n\n    // Quick stats grid\n    const stats = [\n      {\n        label: 'Tools Available',\n        value: this.systemStats.toolsAvailable + '+',\n        icon: 'üîß',\n        color: colors.cyan,\n      },\n      {\n        label: 'Active Agents',\n        value: this.agents.filter((a) => a.status === 'working').length,\n        icon: 'ü§ñ',\n        color: colors.green,\n      },\n      {\n        label: 'Running Processes',\n        value: Array.from(this.processes.values()).filter((p) => p.status === 'running').length,\n        icon: '‚öôÔ∏è',\n        color: colors.blue,\n      },\n      {\n        label: 'Memory Namespaces',\n        value: this.memoryStats.namespaces.length,\n        icon: 'üíæ',\n        color: colors.magenta,\n      },\n    ];\n\n    const statsLine1 = stats\n      .slice(0, 2)\n      .map((stat) => `${stat.icon} ${stat.color(stat.value)} ${colors.gray(stat.label)}`)\n      .join('  |  ');\n\n    const statsLine2 = stats\n      .slice(2, 4)\n      .map((stat) => `${stat.icon} ${stat.color(stat.value)} ${colors.gray(stat.label)}`)\n      .join('  |  ');\n\n    console.log(`  ${statsLine1}`);\n    console.log(`  ${statsLine2}`);\n    console.log();\n\n    // Tool categories overview\n    console.log(colors.cyan('üîß Tool Categories'));\n    console.log();\n\n    const categories = Object.entries(TOOL_CATEGORIES);\n    categories.forEach(([id, category], index) => {\n      const stats = this.toolStats.get(id);\n      const usageInfo =\n        stats && stats.executions > 0\n          ? colors.dim(` (${stats.executions} uses)`)\n          : colors.dim(' (unused)');\n\n      console.log(\n        `  ${category.icon} ${category.color(category.name)}: ${colors.yellow(category.count)} tools${usageInfo}`,\n      );\n    });\n\n    console.log();\n\n    // Recent activity\n    console.log(colors.cyan('üîî Recent Activity'));\n    this.logs.slice(-5).forEach((log) => {\n      const time = log.time.toLocaleTimeString();\n      const icon = log.level === 'success' ? '‚úì' : log.level === 'warning' ? '‚ö†' : '‚Ñπ';\n      const color =\n        log.level === 'success'\n          ? colors.green\n          : log.level === 'warning'\n            ? colors.yellow\n            : colors.blue;\n      console.log(`  ${colors.gray(time)} ${color(icon)} ${log.message}`);\n    });\n\n    console.log();\n\n    // Quick actions\n    console.log(colors.cyan('‚ö° Quick Actions'));\n    console.log(\n      `  ${colors.yellow('N')} Neural Tools  ${colors.yellow('M')} Memory Tools  ${colors.yellow('W')} Workflows  ${colors.yellow('G')} GitHub`,\n    );\n    console.log(\n      `  ${colors.yellow('D')} Diagnostics   ${colors.yellow('S')} Swarm Control ${colors.yellow('T')} Train Model ${colors.yellow('A')} Analytics`,\n    );\n  }\n\n  renderNeuralView() {\n    console.log(colors.white(colors.bold('üß† Neural Network Operations')));\n    console.log();\n\n    const neuralTools = [\n      { key: 'T', name: 'neural_train', desc: 'Train neural patterns with WASM SIMD' },\n      { key: 'P', name: 'neural_predict', desc: 'Make AI predictions' },\n      { key: 'S', name: 'neural_status', desc: 'Check neural network status' },\n      { key: 'A', name: 'neural_patterns', desc: 'Analyze cognitive patterns' },\n      { key: 'L', name: 'model_load', desc: 'Load pre-trained models' },\n      { key: 'V', name: 'model_save', desc: 'Save trained models' },\n      { key: 'R', name: 'pattern_recognize', desc: 'Pattern recognition' },\n      { key: 'C', name: 'cognitive_analyze', desc: 'Cognitive behavior analysis' },\n      { key: 'D', name: 'learning_adapt', desc: 'Adaptive learning' },\n      { key: 'Z', name: 'neural_compress', desc: 'Compress neural models' },\n      { key: 'E', name: 'ensemble_create', desc: 'Create model ensembles' },\n      { key: 'F', name: 'transfer_learn', desc: 'Transfer learning' },\n      { key: 'X', name: 'neural_explain', desc: 'AI explainability' },\n      { key: 'W', name: 'wasm_optimize', desc: 'WASM SIMD optimization' },\n      { key: 'I', name: 'inference_run', desc: 'Run neural inference' },\n    ];\n\n    console.log(colors.cyan('Available Neural Tools (15):'));\n    neuralTools.forEach((tool) => {\n      const stats = this.getToolStats(tool.name);\n      const usage = stats ? colors.dim(` (${stats.executions} uses)`) : '';\n      console.log(\n        `  ${colors.yellow(tool.key)}: ${colors.white(tool.name)} - ${colors.gray(tool.desc)}${usage}`,\n      );\n    });\n\n    console.log();\n    console.log(colors.cyan('üéØ Recent Neural Operations:'));\n    const recentNeural = this.recentTools.filter(\n      (t) => t.startsWith('neural_') || t.includes('model_'),\n    );\n    if (recentNeural.length > 0) {\n      recentNeural.slice(-3).forEach((tool) => {\n        console.log(`  ‚úì ${colors.green(tool)}`);\n      });\n    } else {\n      console.log(`  ${colors.gray('No recent neural operations')}`);\n    }\n  }\n\n  renderMonitoringView() {\n    console.log(colors.white(colors.bold('üìä Monitoring & Analysis')));\n    console.log();\n\n    const monitoringTools = [\n      { key: 'P', name: 'performance_report', desc: 'Generate performance reports' },\n      { key: 'B', name: 'bottleneck_analyze', desc: 'Identify performance bottlenecks' },\n      { key: 'T', name: 'token_usage', desc: 'Analyze token consumption' },\n      { key: 'M', name: 'metrics_collect', desc: 'Collect system metrics' },\n      { key: 'H', name: 'health_check', desc: 'System health monitoring' },\n      { key: 'E', name: 'error_analysis', desc: 'Error pattern analysis' },\n      { key: 'U', name: 'usage_stats', desc: 'Usage statistics' },\n      { key: 'Q', name: 'quality_assess', desc: 'Quality assessment' },\n      { key: 'C', name: 'cost_analysis', desc: 'Cost and resource analysis' },\n      { key: 'R', name: 'trend_analysis', desc: 'Analyze performance trends' },\n      { key: 'K', name: 'benchmark_run', desc: 'Performance benchmarks' },\n      { key: 'S', name: 'swarm_monitor', desc: 'Real-time swarm monitoring' },\n      { key: 'A', name: 'agent_metrics', desc: 'Agent performance metrics' },\n    ];\n\n    console.log(colors.cyan('Available Monitoring Tools (13):'));\n    monitoringTools.slice(0, 7).forEach((tool) => {\n      const stats = this.getToolStats(tool.name);\n      const usage = stats ? colors.dim(` (${stats.executions} uses)`) : '';\n      console.log(\n        `  ${colors.yellow(tool.key)}: ${colors.white(tool.name)} - ${colors.gray(tool.desc)}${usage}`,\n      );\n    });\n\n    console.log('  ' + colors.gray('... and 6 more tools'));\n\n    // Live system metrics\n    console.log();\n    console.log(colors.cyan('üìà Live System Metrics:'));\n    console.log(\n      `  CPU: ${this.getUsageBar(this.systemStats.cpuUsage, 100)} ${this.systemStats.cpuUsage.toFixed(1)}%`,\n    );\n    console.log(\n      `  Memory: ${this.getUsageBar(this.systemStats.memoryUsage, 100)} ${this.systemStats.memoryUsage.toFixed(1)}%`,\n    );\n    console.log(\n      `  Agents: ${colors.green(this.agents.filter((a) => a.status === 'working').length)}/${this.agents.length} active`,\n    );\n    console.log(\n      `  Tasks: ${colors.yellow(this.tasks.filter((t) => t.status === 'in_progress').length)} in progress`,\n    );\n  }\n\n  renderWorkflowView() {\n    console.log(colors.white(colors.bold('üîÑ Workflow & Automation')));\n    console.log();\n\n    const workflowTools = [\n      { key: 'C', name: 'workflow_create', desc: 'Create custom workflows' },\n      { key: 'E', name: 'workflow_execute', desc: 'Execute predefined workflows' },\n      { key: 'A', name: 'automation_setup', desc: 'Setup automation rules' },\n      { key: 'P', name: 'pipeline_create', desc: 'Create CI/CD pipelines' },\n      { key: 'S', name: 'scheduler_manage', desc: 'Manage task scheduling' },\n      { key: 'T', name: 'trigger_setup', desc: 'Setup event triggers' },\n      { key: 'W', name: 'workflow_template', desc: 'Manage workflow templates' },\n      { key: 'B', name: 'batch_process', desc: 'Batch processing' },\n      { key: 'L', name: 'parallel_execute', desc: 'Execute tasks in parallel' },\n      { key: 'R', name: 'sparc_mode', desc: 'Run SPARC development modes' },\n      { key: 'O', name: 'task_orchestrate', desc: 'Orchestrate complex workflows' },\n    ];\n\n    console.log(colors.cyan('Available Workflow Tools (11):'));\n    workflowTools.forEach((tool) => {\n      const stats = this.getToolStats(tool.name);\n      const usage = stats ? colors.dim(` (${stats.executions} uses)`) : '';\n      console.log(\n        `  ${colors.yellow(tool.key)}: ${colors.white(tool.name)} - ${colors.gray(tool.desc)}${usage}`,\n      );\n    });\n\n    console.log();\n    console.log(colors.cyan('üéØ Active Workflows:'));\n    // Show active workflows/automations\n    const activeWorkflows = this.tasks.filter(\n      (t) => t.description.includes('workflow') || t.description.includes('automation'),\n    );\n    if (activeWorkflows.length > 0) {\n      activeWorkflows.slice(-3).forEach((workflow) => {\n        const status =\n          workflow.status === 'completed'\n            ? colors.green('‚úì')\n            : workflow.status === 'in_progress'\n              ? colors.yellow('‚óê')\n              : colors.gray('‚óã');\n        console.log(`  ${status} ${workflow.description}`);\n      });\n    } else {\n      console.log(`  ${colors.gray('No active workflows')}`);\n    }\n  }\n\n  renderGitHubView() {\n    console.log(colors.white(colors.bold('üêô GitHub Integration')));\n    console.log();\n\n    const githubTools = [\n      { key: 'A', name: 'github_repo_analyze', desc: 'Repository analysis' },\n      { key: 'P', name: 'github_pr_manage', desc: 'Pull request management' },\n      { key: 'I', name: 'github_issue_track', desc: 'Issue tracking & triage' },\n      { key: 'R', name: 'github_release_coord', desc: 'Release coordination' },\n      { key: 'W', name: 'github_workflow_auto', desc: 'Workflow automation' },\n      { key: 'C', name: 'github_code_review', desc: 'Automated code review' },\n      { key: 'S', name: 'github_sync_coord', desc: 'Multi-repo sync coordination' },\n      { key: 'M', name: 'github_metrics', desc: 'Repository metrics' },\n    ];\n\n    console.log(colors.cyan('Available GitHub Tools (8):'));\n    githubTools.forEach((tool) => {\n      const stats = this.getToolStats(tool.name);\n      const usage = stats ? colors.dim(` (${stats.executions} uses)`) : '';\n      console.log(\n        `  ${colors.yellow(tool.key)}: ${colors.white(tool.name)} - ${colors.gray(tool.desc)}${usage}`,\n      );\n    });\n\n    console.log();\n    console.log(colors.cyan('üìä GitHub Integration Status:'));\n    console.log(`  Repository: ${colors.green('claude-code-flow')}`);\n    console.log(`  Branch: ${colors.yellow('claude-flow-v2.0.0')}`);\n    console.log(`  Status: ${colors.green('Connected')}`);\n    console.log(`  Last Sync: ${colors.gray('Recently')}`);\n  }\n\n  renderDAAView() {\n    console.log(colors.white(colors.bold('ü§ñ Dynamic Agent Architecture')));\n    console.log();\n\n    const daaTools = [\n      { key: 'C', name: 'daa_agent_create', desc: 'Create dynamic agents' },\n      { key: 'M', name: 'daa_capability_match', desc: 'Match capabilities to tasks' },\n      { key: 'R', name: 'daa_resource_alloc', desc: 'Resource allocation' },\n      { key: 'L', name: 'daa_lifecycle_manage', desc: 'Agent lifecycle management' },\n      { key: 'O', name: 'daa_communication', desc: 'Inter-agent communication' },\n      { key: 'N', name: 'daa_consensus', desc: 'Consensus mechanisms' },\n      { key: 'F', name: 'daa_fault_tolerance', desc: 'Fault tolerance & recovery' },\n      { key: 'P', name: 'daa_optimization', desc: 'Performance optimization' },\n    ];\n\n    console.log(colors.cyan('Available DAA Tools (8):'));\n    daaTools.forEach((tool) => {\n      const stats = this.getToolStats(tool.name);\n      const usage = stats ? colors.dim(` (${stats.executions} uses)`) : '';\n      console.log(\n        `  ${colors.yellow(tool.key)}: ${colors.white(tool.name)} - ${colors.gray(tool.desc)}${usage}`,\n      );\n    });\n\n    console.log();\n    console.log(colors.cyan('üîó Agent Network Status:'));\n    console.log(`  Total Agents: ${colors.green(this.agents.length)}`);\n    console.log(\n      `  Active: ${colors.yellow(this.agents.filter((a) => a.status === 'working').length)}`,\n    );\n    console.log(`  Idle: ${colors.gray(this.agents.filter((a) => a.status === 'idle').length)}`);\n    console.log(`  Consensus: ${colors.green('Healthy')}`);\n  }\n\n  renderSystemView() {\n    console.log(colors.white(colors.bold('üõ†Ô∏è System Utilities')));\n    console.log();\n\n    const systemTools = [\n      { key: 'S', name: 'security_scan', desc: 'Security scanning' },\n      { key: 'B', name: 'backup_create', desc: 'Create system backups' },\n      { key: 'R', name: 'restore_system', desc: 'System restoration' },\n      { key: 'L', name: 'log_analysis', desc: 'Log analysis & insights' },\n      { key: 'D', name: 'diagnostic_run', desc: 'System diagnostics' },\n      { key: 'C', name: 'config_manage', desc: 'Configuration management' },\n    ];\n\n    console.log(colors.cyan('Available System Tools (6):'));\n    systemTools.forEach((tool) => {\n      const stats = this.getToolStats(tool.name);\n      const usage = stats ? colors.dim(` (${stats.executions} uses)`) : '';\n      console.log(\n        `  ${colors.yellow(tool.key)}: ${colors.white(tool.name)} - ${colors.gray(tool.desc)}${usage}`,\n      );\n    });\n\n    console.log();\n    console.log(colors.cyan('üîß System Health:'));\n    console.log(`  Overall Status: ${colors.green('Healthy')}`);\n    console.log(`  Security Score: ${colors.green('A-')}`);\n    console.log(`  Last Backup: ${colors.gray('2 hours ago')}`);\n    console.log(`  Disk Usage: ${this.getUsageBar(65, 100)} 65%`);\n  }\n\n  renderCLIView() {\n    console.log(colors.white(colors.bold('‚å®Ô∏è CLI Command Bridge')));\n    console.log();\n\n    const cliCommands = [\n      { key: 'H', name: 'hive-mind', desc: 'Hive mind orchestration wizard' },\n      { key: 'G', name: 'github', desc: 'GitHub operations' },\n      { key: 'T', name: 'training', desc: 'Neural training commands' },\n      { key: 'A', name: 'analysis', desc: 'Analysis operations' },\n      { key: 'U', name: 'automation', desc: 'Automation setup' },\n      { key: 'C', name: 'coordination', desc: 'Swarm coordination' },\n      { key: 'K', name: 'hooks', desc: 'Hook management' },\n      { key: 'M', name: 'mcp', desc: 'MCP server control' },\n      { key: 'F', name: 'config', desc: 'Configuration management' },\n    ];\n\n    console.log(colors.cyan('Available CLI Commands (9):'));\n    cliCommands.forEach((cmd) => {\n      console.log(\n        `  ${colors.yellow(cmd.key)}: ${colors.white(cmd.name)} - ${colors.gray(cmd.desc)}`,\n      );\n    });\n\n    console.log();\n    console.log(colors.cyan('üéØ CLI Integration Status:'));\n    console.log(`  Bridge Mode: ${colors.green('Active')}`);\n    console.log(`  Commands Available: ${colors.yellow('All')}`);\n    console.log(`  Last Command: ${colors.gray('N/A')}`);\n  }\n\n  // Keep existing methods but add enhanced functionality\n  renderProcessView() {\n    console.log(colors.white(colors.bold('‚öôÔ∏è Process Management')));\n    console.log();\n\n    let index = 0;\n    for (const [id, process] of this.processes) {\n      const selected = index === this.selectedIndex;\n      const prefix = selected ? colors.yellow('‚ñ∂ ') : '  ';\n      const status = this.getStatusIcon(process.status);\n      const name = selected ? colors.yellow(process.name) : colors.white(process.name);\n\n      console.log(`${prefix}${status} ${name}`);\n      console.log(`     ${colors.gray(process.description)}`);\n\n      if (process.status === 'running') {\n        const stats = colors.dim(\n          `PID: ${process.pid} | Uptime: ${this.formatUptime(process.uptime)} | CPU: ${process.cpu.toFixed(1)}% | Mem: ${process.memory.toFixed(0)}MB`,\n        );\n        console.log(`     ${stats}`);\n      }\n      console.log();\n\n      index++;\n    }\n\n    // Enhanced stats\n    const running = Array.from(this.processes.values()).filter(\n      (p) => p.status === 'running',\n    ).length;\n    console.log(colors.gray('‚îÄ'.repeat(80)));\n    console.log(\n      colors.white(\n        `Total: ${this.processes.size} | Running: ${colors.green(running)} | Stopped: ${colors.gray(this.processes.size - running)} | Enhanced: ${this.systemStats.enhancedMode ? colors.green('Yes') : colors.yellow('Fallback')}`,\n      ),\n    );\n  }\n\n  // Enhanced status view\n  renderStatusView() {\n    console.log(colors.white(colors.bold('üìä Enhanced System Status')));\n    console.log();\n\n    // System overview\n    console.log(colors.cyan('üìä System Overview'));\n    console.log(`  Uptime: ${colors.green(this.formatUptime(this.systemStats.uptime))}`);\n    console.log(\n      `  Mode: ${this.systemStats.enhancedMode ? colors.green('Enhanced') : colors.yellow('Fallback')}`,\n    );\n    console.log(`  Process Health: ${this.getHealthBar()}`);\n    console.log(`  Tools Available: ${colors.cyan(this.systemStats.toolsAvailable + '+')}`);\n    console.log();\n\n    // Resource usage\n    console.log(colors.cyan('üíª Resource Usage'));\n    console.log(\n      `  CPU Usage: ${this.getUsageBar(this.systemStats.cpuUsage, 100)} ${this.systemStats.cpuUsage.toFixed(1)}%`,\n    );\n    console.log(\n      `  Memory: ${this.getUsageBar(this.systemStats.memoryUsage, 100)} ${this.systemStats.memoryUsage.toFixed(1)}%`,\n    );\n    console.log(\n      `  Memory Bank: ${colors.green(this.memoryStats.totalSize)} (${this.memoryStats.totalEntries} entries)`,\n    );\n    console.log();\n\n    // Enhanced metrics\n    console.log(colors.cyan('üîß Tool Usage'));\n    let totalToolUsage = 0;\n    this.toolStats.forEach((stats) => (totalToolUsage += stats.executions));\n    console.log(`  Total Executions: ${colors.yellow(totalToolUsage)}`);\n\n    const topCategories = Array.from(this.toolStats.entries())\n      .sort((a, b) => b[1].executions - a[1].executions)\n      .slice(0, 3);\n\n    topCategories.forEach(([category, stats]) => {\n      const info = TOOL_CATEGORIES[category];\n      if (info && stats.executions > 0) {\n        console.log(`  ${info.icon} ${info.name}: ${colors.green(stats.executions)} uses`);\n      }\n    });\n\n    console.log();\n\n    // Activity metrics (existing code continues...)\n    console.log(colors.cyan('üìà Activity Metrics'));\n    console.log(\n      `  Active Agents: ${colors.yellow(this.agents.filter((a) => a.status === 'working').length)}/${this.agents.length}`,\n    );\n    console.log(`  Total Tasks: ${this.tasks.length}`);\n    console.log(\n      `  Completed: ${colors.green(this.tasks.filter((t) => t.status === 'completed').length)}`,\n    );\n    console.log(\n      `  In Progress: ${colors.yellow(this.tasks.filter((t) => t.status === 'in_progress').length)}`,\n    );\n    console.log(\n      `  Pending: ${colors.gray(this.tasks.filter((t) => t.status === 'pending').length)}`,\n    );\n    console.log();\n\n    // Recent events\n    console.log(colors.cyan('üîî Recent Events'));\n    this.logs.slice(-3).forEach((log) => {\n      const time = log.time.toLocaleTimeString();\n      const icon = log.level === 'success' ? '‚úì' : log.level === 'warning' ? '‚ö†' : '‚Ñπ';\n      const color =\n        log.level === 'success'\n          ? colors.green\n          : log.level === 'warning'\n            ? colors.yellow\n            : colors.blue;\n      console.log(`  ${colors.gray(time)} ${color(icon)} ${log.message}`);\n    });\n  }\n\n  // Keep existing methods...\n  renderOrchestrationView() {\n    console.log(colors.white(colors.bold('üêù Enhanced Swarm Orchestration')));\n    console.log();\n\n    // Swarm metrics\n    const metrics = this.swarmIntegration.getSwarmMetrics();\n    if (metrics) {\n      console.log(colors.cyan('üêù Swarm Status'));\n      console.log(`  Swarm ID: ${colors.yellow(metrics.swarmId)}`);\n      console.log(\n        `  Agents: ${colors.green(metrics.agents.active)}/${metrics.agents.total} active`,\n      );\n      console.log(\n        `  Tasks: ${colors.yellow(metrics.tasks.inProgress)} in progress, ${colors.green(metrics.tasks.completed)} completed`,\n      );\n      console.log(`  Efficiency: ${colors.cyan(metrics.efficiency + '%')}`);\n      console.log(\n        `  Enhanced Mode: ${this.systemStats.enhancedMode ? colors.green('Active') : colors.yellow('Fallback')}`,\n      );\n      console.log();\n    }\n\n    // Rest of orchestration view...\n    // (Continue with existing orchestration code)\n\n    // Agents section\n    console.log(colors.cyan('ü§ñ Active Agents'));\n    console.log();\n    this.agents.slice(0, 5).forEach((agent, index) => {\n      const selected = this.currentView === VIEWS.ORCHESTRATION && index === this.selectedIndex;\n      const prefix = selected ? colors.yellow('‚ñ∂ ') : '  ';\n      const statusIcon = agent.status === 'working' ? colors.green('‚óè') : colors.gray('‚óã');\n      const name = selected ? colors.yellow(agent.name) : colors.white(agent.name);\n\n      console.log(`${prefix}${statusIcon} ${name} (${agent.type})`);\n      console.log(`     ID: ${agent.id} | Tasks: ${agent.tasks} | Status: ${agent.status}`);\n      if (agent.capabilities && agent.capabilities.length > 0) {\n        console.log(`     Capabilities: ${colors.dim(agent.capabilities.join(', '))}`);\n      }\n      console.log();\n    });\n\n    if (this.agents.length > 5) {\n      console.log(colors.gray(`  ... and ${this.agents.length - 5} more agents`));\n    }\n\n    console.log(colors.gray('‚îÄ'.repeat(40)));\n\n    // Tasks section\n    console.log(colors.cyan('üìã Task Queue'));\n    console.log();\n    this.tasks.slice(0, 5).forEach((task) => {\n      const statusColor =\n        task.status === 'completed'\n          ? colors.green\n          : task.status === 'in_progress'\n            ? colors.yellow\n            : colors.gray;\n      const status = statusColor(`[${task.status}]`);\n      const priority =\n        task.priority === 'high'\n          ? colors.red(`[${task.priority}]`)\n          : task.priority === 'medium'\n            ? colors.yellow(`[${task.priority}]`)\n            : colors.gray(`[${task.priority}]`);\n      console.log(`  ${status} ${priority} ${task.description}`);\n      if (task.assignedTo) {\n        const agent = this.agents.find((a) => a.id === task.assignedTo);\n        console.log(`       Assigned to: ${agent ? agent.name : task.assignedTo}`);\n      }\n    });\n\n    if (this.tasks.length > 5) {\n      console.log(colors.gray(`  ... and ${this.tasks.length - 5} more tasks`));\n    }\n  }\n\n  // Enhanced memory view\n  renderMemoryView() {\n    console.log(colors.white(colors.bold('üíæ Enhanced Memory Bank Management')));\n    console.log();\n\n    // Overview\n    console.log(colors.cyan('üíæ Memory Overview'));\n    console.log(`  Total Entries: ${colors.yellow(this.memoryStats.totalEntries)}`);\n    console.log(`  Total Size: ${colors.yellow(this.memoryStats.totalSize)}`);\n    console.log(`  Namespaces: ${colors.cyan(this.memoryStats.namespaces.length)}`);\n    console.log();\n\n    // Enhanced namespaces\n    console.log(colors.cyan('üìÅ Enhanced Namespaces'));\n    console.log();\n    this.memoryStats.namespaces.forEach((ns, index) => {\n      const selected = this.currentView === VIEWS.MEMORY && index === this.selectedIndex;\n      const prefix = selected ? colors.yellow('‚ñ∂ ') : '  ';\n      const name = selected ? colors.yellow(ns.name) : colors.white(ns.name);\n      const typeIcon = this.getNamespaceIcon(ns.name);\n\n      console.log(`${prefix}${typeIcon} ${name}`);\n      console.log(`     Entries: ${colors.cyan(ns.entries)} | Size: ${colors.green(ns.size)}`);\n      console.log();\n    });\n\n    // Enhanced operations\n    console.log(colors.gray('‚îÄ'.repeat(40)));\n    console.log(colors.cyan('üîÑ Available Operations'));\n    console.log(\n      `  ${colors.yellow('S')} Store Data | ${colors.yellow('G')} Get Data | ${colors.yellow('B')} Backup | ${colors.yellow('R')} Restore`,\n    );\n    console.log(\n      `  ${colors.yellow('C')} Compress | ${colors.yellow('Y')} Sync | ${colors.yellow('A')} Analytics | ${colors.yellow('N')} Manage Namespaces`,\n    );\n  }\n\n  renderLogsView() {\n    console.log(colors.white(colors.bold('üìú Enhanced System Logs')));\n    console.log();\n\n    // Enhanced log filters\n    console.log(\n      colors.cyan('üîç Filters: ') + colors.gray('[A]ll [I]nfo [S]uccess [W]arning [E]rror [T]ools'),\n    );\n    console.log(colors.gray('‚îÄ'.repeat(80)));\n    console.log();\n\n    // Display logs with enhanced formatting\n    const displayLogs = this.logs.slice(-15);\n    displayLogs.forEach((log) => {\n      const time = log.time.toLocaleTimeString();\n      let icon, color;\n\n      switch (log.level) {\n        case 'success':\n          icon = '‚úì';\n          color = colors.green;\n          break;\n        case 'warning':\n          icon = '‚ö†';\n          color = colors.yellow;\n          break;\n        case 'error':\n          icon = '‚úó';\n          color = colors.red;\n          break;\n        case 'tool':\n          icon = 'üîß';\n          color = colors.cyan;\n          break;\n        default:\n          icon = '‚Ñπ';\n          color = colors.blue;\n      }\n\n      console.log(`${colors.gray(time)} ${color(icon)} ${log.message}`);\n    });\n\n    if (this.logs.length > 15) {\n      console.log();\n      console.log(colors.gray(`Showing last 15 of ${this.logs.length} logs`));\n    }\n  }\n\n  renderEnhancedHelpView() {\n    console.log(colors.white(colors.bold('‚ùì Enhanced Help & Documentation')));\n    console.log();\n\n    console.log(colors.cyan('üéØ Enhanced Navigation'));\n    console.log(`  ${colors.yellow('0')}       Overview Dashboard`);\n    console.log(\n      `  ${colors.yellow('1-4')}     Core views (Processes, Status, Orchestration, Memory)`,\n    );\n    console.log(`  ${colors.yellow('5')}       Neural Network Tools (15 tools)`);\n    console.log(`  ${colors.yellow('6')}       Monitoring & Analysis (13 tools)`);\n    console.log(`  ${colors.yellow('7')}       Workflow & Automation (11 tools)`);\n    console.log(`  ${colors.yellow('8')}       GitHub Integration (8 tools)`);\n    console.log(`  ${colors.yellow('9')}       System Logs`);\n    console.log(`  ${colors.yellow('Tab')}     Cycle through views`);\n    console.log(`  ${colors.yellow('‚Üë/‚Üì')}     Navigate items (when available)`);\n    console.log();\n\n    console.log(colors.cyan('üîß Enhanced Tool Categories'));\n    Object.entries(TOOL_CATEGORIES).forEach(([id, category]) => {\n      console.log(\n        `  ${category.icon} ${category.color(category.name)}: ${colors.yellow(category.count)} tools`,\n      );\n    });\n    console.log();\n\n    console.log(colors.cyan('‚ö° Process Controls'));\n    console.log(`  ${colors.yellow('Space')}   Toggle selected process`);\n    console.log(`  ${colors.yellow('A')}       Start all processes`);\n    console.log(`  ${colors.yellow('Z')}       Stop all processes`);\n    console.log(`  ${colors.yellow('R')}       Restart all processes`);\n    console.log();\n\n    console.log(colors.cyan('üß† Neural Network Quick Actions'));\n    console.log(`  ${colors.yellow('N')}       Open Neural Tools`);\n    console.log(`  ${colors.yellow('T')}       Train Model`);\n    console.log(`  ${colors.yellow('P')}       Make Prediction`);\n    console.log();\n\n    console.log(colors.cyan('üîÑ Workflow & Automation'));\n    console.log(`  ${colors.yellow('W')}       Open Workflow Tools`);\n    console.log(`  ${colors.yellow('C')}       Create Workflow`);\n    console.log(`  ${colors.yellow('E')}       Execute Workflow`);\n    console.log();\n\n    console.log(colors.cyan('üîß Other Enhanced Features'));\n    console.log(`  ${colors.yellow('M')}       Memory Analytics`);\n    console.log(`  ${colors.yellow('D')}       System Diagnostics`);\n    console.log(`  ${colors.yellow('G')}       GitHub Operations`);\n    console.log(`  ${colors.yellow('L')}       Clear logs`);\n    console.log(`  ${colors.yellow('H/?')}     Show this help`);\n    console.log(`  ${colors.yellow('Q')}       Quit`);\n    console.log();\n\n    console.log(colors.cyan('üí° Tips'));\n    console.log(`  ‚Ä¢ ${colors.gray('Enhanced mode provides 71+ MCP tools')}`);\n    console.log(`  ‚Ä¢ ${colors.gray('Use keyboard shortcuts for quick access')}`);\n    console.log(`  ‚Ä¢ ${colors.gray('Tool statistics track usage and performance')}`);\n    console.log(`  ‚Ä¢ ${colors.gray('Memory bank supports multiple namespaces')}`);\n  }\n\n  renderEnhancedFooter() {\n    console.log();\n    console.log(colors.gray('‚îÄ'.repeat(80)));\n\n    // Context-sensitive controls with enhanced options\n    let controls = '';\n    switch (this.currentView) {\n      case VIEWS.OVERVIEW:\n        controls = `${colors.yellow('N')} Neural | ${colors.yellow('M')} Memory | ${colors.yellow('W')} Workflow | ${colors.yellow('G')} GitHub`;\n        break;\n      case VIEWS.PROCESSES:\n        controls = `${colors.yellow('Space')} Toggle | ${colors.yellow('A')} Start All | ${colors.yellow('Z')} Stop All | ${colors.yellow('R')} Restart`;\n        break;\n      case VIEWS.NEURAL:\n        controls = `${colors.yellow('T')} Train | ${colors.yellow('P')} Predict | ${colors.yellow('S')} Status | ${colors.yellow('A')} Analyze`;\n        break;\n      case VIEWS.MONITORING:\n        controls = `${colors.yellow('P')} Performance | ${colors.yellow('B')} Bottlenecks | ${colors.yellow('H')} Health | ${colors.yellow('M')} Metrics`;\n        break;\n      case VIEWS.WORKFLOW:\n        controls = `${colors.yellow('C')} Create | ${colors.yellow('E')} Execute | ${colors.yellow('A')} Automate | ${colors.yellow('S')} Schedule`;\n        break;\n      case VIEWS.GITHUB:\n        controls = `${colors.yellow('A')} Analyze | ${colors.yellow('P')} PR Mgmt | ${colors.yellow('I')} Issues | ${colors.yellow('M')} Metrics`;\n        break;\n      case VIEWS.ORCHESTRATION:\n        controls = `${colors.yellow('N')} New Agent | ${colors.yellow('T')} New Task | ${colors.yellow('D')} Complete | ${colors.yellow('S')} Metrics`;\n        break;\n      case VIEWS.MEMORY:\n        controls = `${colors.yellow('S')} Store | ${colors.yellow('G')} Get | ${colors.yellow('B')} Backup | ${colors.yellow('A')} Analytics`;\n        break;\n      case VIEWS.LOGS:\n        controls = `${colors.yellow('L')} Clear | ${colors.yellow('F')} Filter | ${colors.yellow('E')} Export`;\n        break;\n      default:\n        controls = `${colors.yellow('Tab')} Next View | ${colors.yellow('0')} Overview | ${colors.yellow('?')} Help`;\n    }\n\n    const enhancedStatus = this.systemStats.enhancedMode\n      ? colors.green('Enhanced')\n      : colors.yellow('Fallback');\n\n    console.log(`${controls} | ${colors.yellow('Q')} Quit | Mode: ${enhancedStatus}`);\n    console.log(colors.gray('‚îÄ'.repeat(80)));\n  }\n\n  // Enhanced input handling\n  async handleInput() {\n    const terminal = compat.terminal;\n\n    await terminal.write('\\nCommand: ');\n\n    const buf = new Uint8Array(1024);\n    const n = await terminal.read(buf);\n    if (n === null) return;\n\n    const rawInput = terminal.decoder.decode(buf.subarray(0, n)).trim();\n    const input = rawInput.split('\\n')[0].toLowerCase();\n\n    // Enhanced global commands\n    switch (input) {\n      case 'q':\n      case 'quit':\n        await this.shutdown();\n        return;\n\n      case '0':\n        this.currentView = VIEWS.OVERVIEW;\n        this.selectedIndex = 0;\n        break;\n\n      case '1':\n        this.currentView = VIEWS.PROCESSES;\n        this.selectedIndex = 0;\n        break;\n\n      case '2':\n        this.currentView = VIEWS.STATUS;\n        this.selectedIndex = 0;\n        break;\n\n      case '3':\n        this.currentView = VIEWS.ORCHESTRATION;\n        this.selectedIndex = 0;\n        break;\n\n      case '4':\n        this.currentView = VIEWS.MEMORY;\n        this.selectedIndex = 0;\n        break;\n\n      case '5':\n        this.currentView = VIEWS.NEURAL;\n        this.selectedIndex = 0;\n        break;\n\n      case '6':\n        this.currentView = VIEWS.MONITORING;\n        this.selectedIndex = 0;\n        break;\n\n      case '7':\n        this.currentView = VIEWS.WORKFLOW;\n        this.selectedIndex = 0;\n        break;\n\n      case '8':\n        this.currentView = VIEWS.GITHUB;\n        this.selectedIndex = 0;\n        break;\n\n      case '9':\n        this.currentView = VIEWS.LOGS;\n        this.selectedIndex = 0;\n        break;\n\n      case '?':\n      case 'h':\n      case 'help':\n        this.currentView = VIEWS.HELP;\n        break;\n\n      case 'tab':\n      case '\\t':\n        // Enhanced view cycling\n        const viewKeys = Object.values(VIEWS);\n        const currentIndex = viewKeys.indexOf(this.currentView);\n        this.currentView = viewKeys[(currentIndex + 1) % viewKeys.length];\n        this.selectedIndex = 0;\n        break;\n\n      // Quick action shortcuts\n      case 'n':\n        if (this.currentView === VIEWS.OVERVIEW) {\n          this.currentView = VIEWS.NEURAL;\n        } else {\n          await this.handleViewSpecificInput(input);\n        }\n        break;\n\n      case 'm':\n        if (this.currentView === VIEWS.OVERVIEW) {\n          this.currentView = VIEWS.MEMORY;\n        } else {\n          await this.handleViewSpecificInput(input);\n        }\n        break;\n\n      case 'w':\n        if (this.currentView === VIEWS.OVERVIEW) {\n          this.currentView = VIEWS.WORKFLOW;\n        } else {\n          await this.handleViewSpecificInput(input);\n        }\n        break;\n\n      case 'g':\n        if (this.currentView === VIEWS.OVERVIEW) {\n          this.currentView = VIEWS.GITHUB;\n        } else {\n          await this.handleViewSpecificInput(input);\n        }\n        break;\n\n      default:\n        // View-specific commands\n        await this.handleViewSpecificInput(input);\n    }\n\n    // Update system stats\n    this.updateSystemStats();\n  }\n\n  // Enhanced view-specific input handling\n  async handleViewSpecificInput(input) {\n    switch (this.currentView) {\n      case VIEWS.PROCESSES:\n        await this.handleProcessInput(input);\n        break;\n      case VIEWS.ORCHESTRATION:\n        await this.handleOrchestrationInput(input);\n        break;\n      case VIEWS.MEMORY:\n        await this.handleEnhancedMemoryInput(input);\n        break;\n      case VIEWS.NEURAL:\n        await this.handleNeuralInput(input);\n        break;\n      case VIEWS.MONITORING:\n        await this.handleMonitoringInput(input);\n        break;\n      case VIEWS.WORKFLOW:\n        await this.handleWorkflowInput(input);\n        break;\n      case VIEWS.GITHUB:\n        await this.handleGitHubInput(input);\n        break;\n      case VIEWS.DAA:\n        await this.handleDAAInput(input);\n        break;\n      case VIEWS.SYSTEM:\n        await this.handleSystemInput(input);\n        break;\n      case VIEWS.CLI:\n        await this.handleCLIInput(input);\n        break;\n      case VIEWS.LOGS:\n        await this.handleLogsInput(input);\n        break;\n    }\n  }\n\n  // Enhanced tool execution with statistics\n  async executeEnhancedTool(toolName, params = {}) {\n    try {\n      const startTime = Date.now();\n\n      // Execute through enhanced UI if available\n      let result;\n      if (this.enhancedWebUI) {\n        result = await this.enhancedWebUI.executeTool(toolName, params);\n      } else {\n        // Fallback execution\n        result = await this.mockToolExecution(toolName, params);\n      }\n\n      const duration = Date.now() - startTime;\n\n      // Update statistics\n      this.updateToolStats(toolName, duration, true);\n\n      // Add to recent tools\n      this.recentTools.push(toolName);\n      if (this.recentTools.length > 20) {\n        this.recentTools = this.recentTools.slice(-20);\n      }\n\n      // Log execution\n      this.addLog('tool', `Executed ${toolName} (${duration}ms)`);\n\n      return result;\n    } catch (error) {\n      this.updateToolStats(toolName, 0, false);\n      this.addLog('error', `Failed to execute ${toolName}: ${error.message}`);\n      throw error;\n    }\n  }\n\n  // Mock tool execution for fallback\n  async mockToolExecution(toolName, params) {\n    // Simulate execution delay\n    await new Promise((resolve) => setTimeout(resolve, 100 + Math.random() * 500));\n\n    return {\n      success: true,\n      tool: toolName,\n      params,\n      result: `Mock result for ${toolName}`,\n      timestamp: Date.now(),\n    };\n  }\n\n  // Update tool statistics\n  updateToolStats(toolName, duration, success) {\n    const category = this.getToolCategory(toolName);\n    if (!category) return;\n\n    const stats = this.toolStats.get(category) || {\n      executions: 0,\n      lastUsed: null,\n      avgDuration: 0,\n      successRate: 100,\n    };\n\n    stats.executions++;\n    stats.lastUsed = Date.now();\n\n    if (success) {\n      stats.avgDuration =\n        (stats.avgDuration * (stats.executions - 1) + duration) / stats.executions;\n    } else {\n      stats.successRate = (stats.successRate * (stats.executions - 1) + 0) / stats.executions;\n    }\n\n    this.toolStats.set(category, stats);\n  }\n\n  // Get tool category\n  getToolCategory(toolName) {\n    for (const [category, info] of Object.entries(TOOL_CATEGORIES)) {\n      // Simple pattern matching - in real implementation would be more sophisticated\n      if (\n        toolName.includes(category) ||\n        (category === 'neural' && (toolName.includes('neural_') || toolName.includes('model_'))) ||\n        (category === 'memory' && toolName.includes('memory_')) ||\n        (category === 'monitoring' &&\n          (toolName.includes('performance_') || toolName.includes('health_'))) ||\n        (category === 'workflow' &&\n          (toolName.includes('workflow_') || toolName.includes('automation_'))) ||\n        (category === 'github' && toolName.includes('github_')) ||\n        (category === 'daa' && toolName.includes('daa_')) ||\n        (category === 'system' && (toolName.includes('security_') || toolName.includes('backup_')))\n      ) {\n        return category;\n      }\n    }\n    return null;\n  }\n\n  // Get tool statistics\n  getToolStats(toolName) {\n    const category = this.getToolCategory(toolName);\n    return category ? this.toolStats.get(category) : null;\n  }\n\n  // Enhanced input handlers for new views\n  async handleNeuralInput(input) {\n    const actions = {\n      t: () => this.executeEnhancedTool('neural_train'),\n      p: () => this.executeEnhancedTool('neural_predict'),\n      s: () => this.executeEnhancedTool('neural_status'),\n      a: () => this.executeEnhancedTool('neural_patterns'),\n      l: () => this.executeEnhancedTool('model_load'),\n      v: () => this.executeEnhancedTool('model_save'),\n      r: () => this.executeEnhancedTool('pattern_recognize'),\n      c: () => this.executeEnhancedTool('cognitive_analyze'),\n      d: () => this.executeEnhancedTool('learning_adapt'),\n      z: () => this.executeEnhancedTool('neural_compress'),\n      e: () => this.executeEnhancedTool('ensemble_create'),\n      f: () => this.executeEnhancedTool('transfer_learn'),\n      x: () => this.executeEnhancedTool('neural_explain'),\n      w: () => this.executeEnhancedTool('wasm_optimize'),\n      i: () => this.executeEnhancedTool('inference_run'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n    }\n  }\n\n  async handleMonitoringInput(input) {\n    const actions = {\n      p: () => this.executeEnhancedTool('performance_report'),\n      b: () => this.executeEnhancedTool('bottleneck_analyze'),\n      t: () => this.executeEnhancedTool('token_usage'),\n      m: () => this.executeEnhancedTool('metrics_collect'),\n      h: () => this.executeEnhancedTool('health_check'),\n      e: () => this.executeEnhancedTool('error_analysis'),\n      u: () => this.executeEnhancedTool('usage_stats'),\n      q: () => this.executeEnhancedTool('quality_assess'),\n      c: () => this.executeEnhancedTool('cost_analysis'),\n      r: () => this.executeEnhancedTool('trend_analysis'),\n      k: () => this.executeEnhancedTool('benchmark_run'),\n      s: () => this.executeEnhancedTool('swarm_monitor'),\n      a: () => this.executeEnhancedTool('agent_metrics'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n    }\n  }\n\n  async handleWorkflowInput(input) {\n    const actions = {\n      c: () => this.executeEnhancedTool('workflow_create'),\n      e: () => this.executeEnhancedTool('workflow_execute'),\n      a: () => this.executeEnhancedTool('automation_setup'),\n      p: () => this.executeEnhancedTool('pipeline_create'),\n      s: () => this.executeEnhancedTool('scheduler_manage'),\n      t: () => this.executeEnhancedTool('trigger_setup'),\n      w: () => this.executeEnhancedTool('workflow_template'),\n      b: () => this.executeEnhancedTool('batch_process'),\n      l: () => this.executeEnhancedTool('parallel_execute'),\n      r: () => this.executeEnhancedTool('sparc_mode'),\n      o: () => this.executeEnhancedTool('task_orchestrate'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n    }\n  }\n\n  async handleGitHubInput(input) {\n    const actions = {\n      a: () => this.executeEnhancedTool('github_repo_analyze'),\n      p: () => this.executeEnhancedTool('github_pr_manage'),\n      i: () => this.executeEnhancedTool('github_issue_track'),\n      r: () => this.executeEnhancedTool('github_release_coord'),\n      w: () => this.executeEnhancedTool('github_workflow_auto'),\n      c: () => this.executeEnhancedTool('github_code_review'),\n      s: () => this.executeEnhancedTool('github_sync_coord'),\n      m: () => this.executeEnhancedTool('github_metrics'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n    }\n  }\n\n  async handleDAAInput(input) {\n    const actions = {\n      c: () => this.executeEnhancedTool('daa_agent_create'),\n      m: () => this.executeEnhancedTool('daa_capability_match'),\n      r: () => this.executeEnhancedTool('daa_resource_alloc'),\n      l: () => this.executeEnhancedTool('daa_lifecycle_manage'),\n      o: () => this.executeEnhancedTool('daa_communication'),\n      n: () => this.executeEnhancedTool('daa_consensus'),\n      f: () => this.executeEnhancedTool('daa_fault_tolerance'),\n      p: () => this.executeEnhancedTool('daa_optimization'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n    }\n  }\n\n  async handleSystemInput(input) {\n    const actions = {\n      s: () => this.executeEnhancedTool('security_scan'),\n      b: () => this.executeEnhancedTool('backup_create'),\n      r: () => this.executeEnhancedTool('restore_system'),\n      l: () => this.executeEnhancedTool('log_analysis'),\n      d: () => this.executeEnhancedTool('diagnostic_run'),\n      c: () => this.executeEnhancedTool('config_manage'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n    }\n  }\n\n  async handleCLIInput(input) {\n    const commands = {\n      h: 'hive-mind',\n      g: 'github',\n      t: 'training',\n      a: 'analysis',\n      u: 'automation',\n      c: 'coordination',\n      k: 'hooks',\n      m: 'mcp',\n      f: 'config',\n    };\n\n    if (commands[input]) {\n      this.addLog('info', `Executing CLI command: ${commands[input]}`);\n      // In real implementation, would bridge to actual CLI commands\n      console.log(`\\nüîß CLI Command: ${commands[input]}`);\n      console.log('Command execution would be bridged to actual CLI...');\n    }\n  }\n\n  // Enhanced memory input handling\n  async handleEnhancedMemoryInput(input) {\n    const actions = {\n      s: () => this.executeEnhancedTool('memory_usage', { action: 'store' }),\n      g: () => this.executeEnhancedTool('memory_usage', { action: 'retrieve' }),\n      b: () => this.executeEnhancedTool('memory_backup'),\n      r: () => this.executeEnhancedTool('memory_restore'),\n      c: () => this.executeEnhancedTool('memory_compress'),\n      y: () => this.executeEnhancedTool('memory_sync'),\n      a: () => this.executeEnhancedTool('memory_analytics'),\n      n: () => this.executeEnhancedTool('memory_namespace'),\n    };\n\n    if (actions[input]) {\n      await actions[input]();\n    }\n  }\n\n  // Helper methods\n  getNamespaceIcon(name) {\n    const icons = {\n      neural: 'üß†',\n      sparc: '‚ö°',\n      agents: 'ü§ñ',\n      tasks: 'üìã',\n      workflows: 'üîÑ',\n      monitoring: 'üìä',\n    };\n    return icons[name] || 'üìÅ';\n  }\n\n  // Enhanced system stats update\n  updateSystemStats() {\n    // Update random stats for demo\n    this.systemStats.cpuUsage = Math.min(\n      100,\n      Math.max(0, this.systemStats.cpuUsage + (Math.random() - 0.5) * 10),\n    );\n    this.systemStats.memoryUsage = Math.min(\n      100,\n      Math.max(0, this.systemStats.memoryUsage + (Math.random() - 0.5) * 5),\n    );\n\n    // Update process stats\n    for (const [id, process] of this.processes) {\n      if (process.status === 'running') {\n        process.uptime++;\n        process.cpu = Math.min(100, Math.max(0, process.cpu + (Math.random() - 0.5) * 2));\n        process.memory = Math.min(200, Math.max(10, process.memory + (Math.random() - 0.5) * 5));\n      }\n    }\n\n    // Update enhanced stats\n    this.systemStats.activeAgents = this.agents.filter((a) => a.status === 'working').length;\n    this.systemStats.totalTasks = this.tasks.length;\n    this.systemStats.completedTasks = this.tasks.filter((t) => t.status === 'completed').length;\n  }\n\n  // Enhanced shutdown\n  async shutdown() {\n    this.running = false;\n    console.clear();\n\n    if (this.enhancedWebUI) {\n      await this.enhancedWebUI.shutdown();\n    }\n\n    printSuccess('Enhanced UI shutdown complete. Goodbye!');\n    compat.terminal.exit(0);\n  }\n\n  // Keep all existing methods from original class...\n  // (getStatusIcon, getHealthBar, getUsageBar, formatUptime, etc.)\n\n  getStatusIcon(status) {\n    switch (status) {\n      case 'running':\n        return colors.green('‚óè');\n      case 'stopped':\n        return colors.gray('‚óã');\n      case 'error':\n        return colors.red('‚úó');\n      case 'starting':\n        return colors.yellow('‚óê');\n      default:\n        return colors.gray('?');\n    }\n  }\n\n  getHealthBar() {\n    const running = Array.from(this.processes.values()).filter(\n      (p) => p.status === 'running',\n    ).length;\n    const total = this.processes.size;\n    const percentage = (running / total) * 100;\n    const filled = Math.round(percentage / 10);\n    const bar = '‚ñà'.repeat(filled) + '‚ñë'.repeat(10 - filled);\n    const color = percentage >= 80 ? colors.green : percentage >= 50 ? colors.yellow : colors.red;\n    return color(bar) + ` ${percentage.toFixed(0)}%`;\n  }\n\n  getUsageBar(value, max) {\n    const percentage = (value / max) * 100;\n    const filled = Math.round(percentage / 10);\n    const bar = '‚ñì'.repeat(filled) + '‚ñë'.repeat(10 - filled);\n    const color = percentage >= 80 ? colors.red : percentage >= 50 ? colors.yellow : colors.green;\n    return color(bar);\n  }\n\n  formatUptime(seconds) {\n    if (seconds < 60) return `${seconds}s`;\n    if (seconds < 3600) return `${Math.floor(seconds / 60)}m ${seconds % 60}s`;\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    return `${hours}h ${minutes}m`;\n  }\n\n  addLog(level, message) {\n    this.logs.push({\n      time: new Date(),\n      level,\n      message,\n    });\n\n    // Keep logs manageable\n    if (this.logs.length > 100) {\n      this.logs = this.logs.slice(-100);\n    }\n  }\n\n  // Continue with existing methods...\n  async handleProcessInput(input) {\n    switch (input) {\n      case 'a':\n        await this.startAll();\n        break;\n\n      case 'z':\n        await this.stopAll();\n        break;\n\n      case 'r':\n        await this.restartAll();\n        break;\n\n      case ' ':\n      case 'space':\n      case 'enter':\n      case '':\n        await this.toggleSelected();\n        break;\n\n      case 'up':\n      case 'k':\n        this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n        break;\n\n      case 'down':\n      case 'j':\n        this.selectedIndex = Math.min(this.processes.size - 1, this.selectedIndex + 1);\n        break;\n    }\n  }\n\n  async handleOrchestrationInput(input) {\n    switch (input) {\n      case 'n':\n        // Spawn new agent\n        const agentTypes = ['researcher', 'coder', 'analyst', 'coordinator', 'tester'];\n        const randomType = agentTypes[Math.floor(Math.random() * agentTypes.length)];\n        await this.swarmIntegration.spawnAgent(randomType);\n        break;\n\n      case 't':\n        // Create new task\n        const sampleTasks = [\n          'Implement neural network optimization',\n          'Analyze performance bottlenecks',\n          'Create workflow automation',\n          'Review GitHub integration',\n          'Test DAA consensus mechanism',\n        ];\n        const randomTask = sampleTasks[Math.floor(Math.random() * sampleTasks.length)];\n        await this.swarmIntegration.createTask(randomTask, 'medium');\n        break;\n\n      case 'd':\n        // Complete selected task (simulate)\n        if (this.tasks.length > 0) {\n          const pendingTasks = this.tasks.filter((t) => t.status === 'in_progress');\n          if (pendingTasks.length > 0) {\n            const taskToComplete = pendingTasks[0];\n            await this.swarmIntegration.completeTask(taskToComplete.id);\n          } else {\n            this.addLog('info', 'No in-progress tasks to complete');\n          }\n        }\n        break;\n\n      case 's':\n        // Show swarm metrics\n        const metrics = this.swarmIntegration.getSwarmMetrics();\n        if (metrics) {\n          this.addLog(\n            'info',\n            `Swarm efficiency: ${metrics.efficiency}% (${metrics.tasks.completed}/${metrics.tasks.total} tasks completed)`,\n          );\n        }\n        break;\n    }\n  }\n\n  async handleLogsInput(input) {\n    switch (input) {\n      case 'l':\n        this.logs = [];\n        this.addLog('info', 'Logs cleared');\n        break;\n\n      case 'f':\n        this.addLog('info', 'Log filtering not yet implemented');\n        break;\n\n      case 'e':\n        this.addLog('info', 'Log export feature available in enhanced mode');\n        break;\n    }\n  }\n\n  async toggleSelected() {\n    const process = Array.from(this.processes.values())[this.selectedIndex];\n    if (process.status === 'stopped') {\n      await this.startProcess(process.id);\n    } else {\n      await this.stopProcess(process.id);\n    }\n  }\n\n  async startProcess(id) {\n    const process = this.processes.get(id);\n    if (!process) return;\n\n    this.addLog('info', `Starting ${process.name}...`);\n    process.status = 'starting';\n\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    process.status = 'running';\n    process.pid = Math.floor(Math.random() * 10000) + 1000;\n    process.uptime = 0;\n\n    this.addLog('success', `${process.name} started successfully`);\n  }\n\n  async stopProcess(id) {\n    const process = this.processes.get(id);\n    if (!process) return;\n\n    this.addLog('info', `Stopping ${process.name}...`);\n    process.status = 'stopped';\n    process.pid = null;\n    process.uptime = 0;\n\n    await new Promise((resolve) => setTimeout(resolve, 300));\n    this.addLog('success', `${process.name} stopped`);\n  }\n\n  async startAll() {\n    this.addLog('info', 'Starting all processes...');\n    for (const [id, process] of this.processes) {\n      if (process.status === 'stopped') {\n        await this.startProcess(id);\n      }\n    }\n    this.addLog('success', 'All processes started');\n  }\n\n  async stopAll() {\n    this.addLog('info', 'Stopping all processes...');\n    for (const [id, process] of this.processes) {\n      if (process.status === 'running') {\n        await this.stopProcess(id);\n      }\n    }\n    this.addLog('success', 'All processes stopped');\n  }\n\n  async restartAll() {\n    await this.stopAll();\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    await this.startAll();\n  }\n}\n\nexport async function launchEnhancedUI() {\n  const ui = new EnhancedProcessUI();\n  await ui.start();\n}\n\nexport default EnhancedProcessUI;\n"],"names":["printSuccess","compat","SwarmWebUIIntegration","EnhancedWebUI","colors","cyan","text","gray","white","yellow","green","red","blue","magenta","bold","dim","bright","orange","purple","PROCESSES","id","name","description","VIEWS","OVERVIEW","STATUS","ORCHESTRATION","MEMORY","NEURAL","MONITORING","WORKFLOW","GITHUB","DAA","SYSTEM","CLI","LOGS","HELP","TOOL_CATEGORIES","neural","icon","count","color","memory","monitoring","workflow","github","daa","system","cli","EnhancedProcessUI","processes","Map","running","selectedIndex","currentView","agents","tasks","memoryStats","totalEntries","totalSize","namespaces","logs","systemStats","uptime","totalTasks","completedTasks","activeAgents","memoryUsage","cpuUsage","toolsAvailable","enhancedMode","enhancedWebUI","toolExecutions","recentTools","toolStats","swarmIntegration","forEach","p","set","status","pid","cpu","Math","random","setInterval","initializeEnhancedFeatures","initialize","addLog","enhancedUIProcess","get","floor","error","console","warn","initializeSwarm","initializeToolStats","Object","keys","category","executions","lastUsed","avgDuration","successRate","entries","size","time","Date","level","message","start","clear","log","repeat","render","handleInput","renderEnhancedHeader","renderOverviewView","renderProcessView","renderStatusView","renderOrchestrationView","renderMemoryView","renderNeuralView","renderMonitoringView","renderWorkflowView","renderGitHubView","renderDAAView","renderSystemView","renderCLIView","renderLogsView","renderEnhancedHelpView","renderEnhancedFooter","enhancedStatus","formatUptime","tabs","key","view","label","tabLine","tab","index","isActive","length","stats","value","filter","a","Array","from","values","statsLine1","slice","map","stat","join","statsLine2","categories","usageInfo","toLocaleTimeString","neuralTools","desc","tool","getToolStats","usage","recentNeural","t","startsWith","includes","monitoringTools","getUsageBar","toFixed","workflowTools","activeWorkflows","githubTools","daaTools","systemTools","cliCommands","cmd","process","selected","prefix","getStatusIcon","getHealthBar","totalToolUsage","topCategories","sort","b","info","metrics","getSwarmMetrics","swarmId","active","total","inProgress","completed","efficiency","agent","statusIcon","type","capabilities","task","statusColor","priority","assignedTo","find","ns","typeIcon","getNamespaceIcon","displayLogs","controls","terminal","write","buf","Uint8Array","n","read","rawInput","decoder","decode","subarray","trim","input","split","toLowerCase","shutdown","viewKeys","currentIndex","indexOf","handleViewSpecificInput","updateSystemStats","handleProcessInput","handleOrchestrationInput","handleEnhancedMemoryInput","handleNeuralInput","handleMonitoringInput","handleWorkflowInput","handleGitHubInput","handleDAAInput","handleSystemInput","handleCLIInput","handleLogsInput","executeEnhancedTool","toolName","params","startTime","now","result","executeTool","mockToolExecution","duration","updateToolStats","push","Promise","resolve","setTimeout","success","timestamp","getToolCategory","actions","s","l","v","r","c","d","z","e","f","x","w","i","m","h","u","q","k","o","commands","g","action","y","icons","sparc","workflows","min","max","exit","percentage","filled","round","bar","seconds","hours","minutes","startAll","stopAll","restartAll","toggleSelected","agentTypes","randomType","spawnAgent","sampleTasks","randomTask","createTask","pendingTasks","taskToComplete","completeTask","startProcess","stopProcess","launchEnhancedUI","ui"],"mappings":"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"}