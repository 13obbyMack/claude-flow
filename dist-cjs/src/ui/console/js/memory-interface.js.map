{"version":3,"sources":["../../../../../src/ui/console/js/memory-interface.js"],"sourcesContent":["/**\n * Memory Management Interface\n * Comprehensive memory management system for Claude Flow\n */\n\nclass MemoryInterface {\n  constructor() {\n    this.container = null;\n    this.currentNamespace = 'global';\n    this.memoryData = new Map();\n    this.searchFilters = {};\n    this.analytics = {\n      usage: new Map(),\n      history: [],\n      patterns: new Map(),\n    };\n    this.backupManager = new BackupManager();\n    this.syncManager = new SyncManager();\n    this.compressionManager = new CompressionManager();\n    this.visualizer = new MemoryVisualizer();\n\n    this.init();\n  }\n\n  init() {\n    this.createInterface();\n    this.setupEventListeners();\n    this.startMonitoring();\n    this.loadMemoryData();\n  }\n\n  createInterface() {\n    this.container = document.createElement('div');\n    this.container.className = 'memory-interface';\n    this.container.innerHTML = `\n            <div class=\"memory-header\">\n                <h2>Memory Management Interface</h2>\n                <div class=\"memory-controls\">\n                    <button class=\"btn-refresh\" title=\"Refresh Data\">\n                        <i class=\"icon-refresh\"></i>\n                    </button>\n                    <button class=\"btn-backup\" title=\"Create Backup\">\n                        <i class=\"icon-backup\"></i>\n                    </button>\n                    <button class=\"btn-compress\" title=\"Optimize Memory\">\n                        <i class=\"icon-compress\"></i>\n                    </button>\n                    <button class=\"btn-sync\" title=\"Sync Status\">\n                        <i class=\"icon-sync\"></i>\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"memory-layout\">\n                <!-- Namespace Browser -->\n                <div class=\"namespace-panel\">\n                    <div class=\"panel-header\">\n                        <h3>Namespace Browser</h3>\n                        <button class=\"btn-add-namespace\" title=\"Add Namespace\">+</button>\n                    </div>\n                    <div class=\"namespace-tree\">\n                        <div class=\"namespace-search\">\n                            <input type=\"text\" placeholder=\"Search namespaces...\" \n                                   class=\"namespace-search-input\">\n                        </div>\n                        <div class=\"namespace-tree-container\">\n                            <!-- Namespace tree will be populated here -->\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Key-Value Editor -->\n                <div class=\"editor-panel\">\n                    <div class=\"panel-header\">\n                        <h3>Key-Value Editor</h3>\n                        <div class=\"editor-controls\">\n                            <button class=\"btn-add-key\" title=\"Add Key\">+</button>\n                            <button class=\"btn-bulk-edit\" title=\"Bulk Edit\">Bulk</button>\n                            <button class=\"btn-export\" title=\"Export\">Export</button>\n                        </div>\n                    </div>\n                    <div class=\"editor-content\">\n                        <div class=\"editor-search\">\n                            <input type=\"text\" placeholder=\"Search keys...\" \n                                   class=\"key-search-input\">\n                            <select class=\"type-filter\">\n                                <option value=\"\">All Types</option>\n                                <option value=\"string\">String</option>\n                                <option value=\"number\">Number</option>\n                                <option value=\"boolean\">Boolean</option>\n                                <option value=\"object\">Object</option>\n                                <option value=\"array\">Array</option>\n                            </select>\n                        </div>\n                        <div class=\"key-value-list\">\n                            <!-- Key-value pairs will be populated here -->\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Analytics Dashboard -->\n                <div class=\"analytics-panel\">\n                    <div class=\"panel-header\">\n                        <h3>Memory Analytics</h3>\n                        <select class=\"analytics-timeframe\">\n                            <option value=\"1h\">Last Hour</option>\n                            <option value=\"24h\">Last 24 Hours</option>\n                            <option value=\"7d\">Last 7 Days</option>\n                            <option value=\"30d\">Last 30 Days</option>\n                        </select>\n                    </div>\n                    <div class=\"analytics-content\">\n                        <div class=\"analytics-stats\">\n                            <div class=\"stat-card\">\n                                <h4>Total Keys</h4>\n                                <span class=\"stat-value\" id=\"total-keys\">0</span>\n                            </div>\n                            <div class=\"stat-card\">\n                                <h4>Memory Usage</h4>\n                                <span class=\"stat-value\" id=\"memory-usage\">0 KB</span>\n                            </div>\n                            <div class=\"stat-card\">\n                                <h4>Compression Rate</h4>\n                                <span class=\"stat-value\" id=\"compression-rate\">0%</span>\n                            </div>\n                            <div class=\"stat-card\">\n                                <h4>Access Frequency</h4>\n                                <span class=\"stat-value\" id=\"access-frequency\">0/min</span>\n                            </div>\n                        </div>\n                        <div class=\"analytics-charts\">\n                            <div class=\"chart-container\">\n                                <canvas id=\"usage-chart\"></canvas>\n                            </div>\n                            <div class=\"chart-container\">\n                                <canvas id=\"pattern-chart\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Search Interface -->\n            <div class=\"search-panel\">\n                <div class=\"panel-header\">\n                    <h3>Advanced Search</h3>\n                    <button class=\"btn-saved-searches\" title=\"Saved Searches\">\n                        <i class=\"icon-bookmark\"></i>\n                    </button>\n                </div>\n                <div class=\"search-content\">\n                    <div class=\"search-builder\">\n                        <div class=\"search-row\">\n                            <select class=\"search-field\">\n                                <option value=\"key\">Key</option>\n                                <option value=\"value\">Value</option>\n                                <option value=\"type\">Type</option>\n                                <option value=\"namespace\">Namespace</option>\n                                <option value=\"created\">Created Date</option>\n                                <option value=\"modified\">Modified Date</option>\n                            </select>\n                            <select class=\"search-operator\">\n                                <option value=\"contains\">Contains</option>\n                                <option value=\"equals\">Equals</option>\n                                <option value=\"startsWith\">Starts With</option>\n                                <option value=\"endsWith\">Ends With</option>\n                                <option value=\"regex\">Regex</option>\n                            </select>\n                            <input type=\"text\" class=\"search-value\" placeholder=\"Search value...\">\n                            <button class=\"btn-add-filter\">+</button>\n                        </div>\n                    </div>\n                    <div class=\"search-filters\">\n                        <!-- Active filters will be shown here -->\n                    </div>\n                    <div class=\"search-results\">\n                        <!-- Search results will be populated here -->\n                    </div>\n                </div>\n            </div>\n\n            <!-- Backup/Restore Panel -->\n            <div class=\"backup-panel\">\n                <div class=\"panel-header\">\n                    <h3>Backup & Restore</h3>\n                    <button class=\"btn-schedule-backup\" title=\"Schedule Backup\">\n                        <i class=\"icon-schedule\"></i>\n                    </button>\n                </div>\n                <div class=\"backup-content\">\n                    <div class=\"backup-controls\">\n                        <button class=\"btn-create-backup\">Create Backup</button>\n                        <button class=\"btn-restore-backup\">Restore Backup</button>\n                        <button class=\"btn-import-backup\">Import Backup</button>\n                    </div>\n                    <div class=\"backup-list\">\n                        <!-- Backup list will be populated here -->\n                    </div>\n                </div>\n            </div>\n\n            <!-- Modals -->\n            <div class=\"modal-overlay\" id=\"modal-overlay\">\n                <div class=\"modal\" id=\"key-editor-modal\">\n                    <div class=\"modal-header\">\n                        <h3>Edit Key-Value Pair</h3>\n                        <button class=\"btn-close-modal\">Ã—</button>\n                    </div>\n                    <div class=\"modal-content\">\n                        <form id=\"key-editor-form\">\n                            <div class=\"form-group\">\n                                <label>Key:</label>\n                                <input type=\"text\" id=\"edit-key\" required>\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Type:</label>\n                                <select id=\"edit-type\">\n                                    <option value=\"string\">String</option>\n                                    <option value=\"number\">Number</option>\n                                    <option value=\"boolean\">Boolean</option>\n                                    <option value=\"object\">Object</option>\n                                    <option value=\"array\">Array</option>\n                                </select>\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Value:</label>\n                                <textarea id=\"edit-value\" rows=\"10\"></textarea>\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Namespace:</label>\n                                <select id=\"edit-namespace\">\n                                    <!-- Namespaces will be populated here -->\n                                </select>\n                            </div>\n                            <div class=\"form-actions\">\n                                <button type=\"submit\" class=\"btn-save\">Save</button>\n                                <button type=\"button\" class=\"btn-cancel\">Cancel</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  setupEventListeners() {\n    // Header controls\n    this.container.querySelector('.btn-refresh').addEventListener('click', () => this.refresh());\n    this.container\n      .querySelector('.btn-backup')\n      .addEventListener('click', () => this.createBackup());\n    this.container\n      .querySelector('.btn-compress')\n      .addEventListener('click', () => this.optimizeMemory());\n    this.container\n      .querySelector('.btn-sync')\n      .addEventListener('click', () => this.showSyncStatus());\n\n    // Namespace controls\n    this.container\n      .querySelector('.btn-add-namespace')\n      .addEventListener('click', () => this.addNamespace());\n    this.container\n      .querySelector('.namespace-search-input')\n      .addEventListener('input', (e) => this.searchNamespaces(e.target.value));\n\n    // Editor controls\n    this.container.querySelector('.btn-add-key').addEventListener('click', () => this.addKey());\n    this.container.querySelector('.btn-bulk-edit').addEventListener('click', () => this.bulkEdit());\n    this.container\n      .querySelector('.btn-export')\n      .addEventListener('click', () => this.exportMemory());\n\n    // Search controls\n    this.container\n      .querySelector('.key-search-input')\n      .addEventListener('input', (e) => this.searchKeys(e.target.value));\n    this.container\n      .querySelector('.type-filter')\n      .addEventListener('change', (e) => this.filterByType(e.target.value));\n\n    // Analytics controls\n    this.container\n      .querySelector('.analytics-timeframe')\n      .addEventListener('change', (e) => this.updateAnalytics(e.target.value));\n\n    // Search interface\n    this.container\n      .querySelector('.btn-add-filter')\n      .addEventListener('click', () => this.addSearchFilter());\n    this.container\n      .querySelector('.btn-saved-searches')\n      .addEventListener('click', () => this.showSavedSearches());\n\n    // Backup controls\n    this.container\n      .querySelector('.btn-create-backup')\n      .addEventListener('click', () => this.createBackup());\n    this.container\n      .querySelector('.btn-restore-backup')\n      .addEventListener('click', () => this.restoreBackup());\n    this.container\n      .querySelector('.btn-import-backup')\n      .addEventListener('click', () => this.importBackup());\n\n    // Modal controls\n    this.container\n      .querySelector('.btn-close-modal')\n      .addEventListener('click', () => this.closeModal());\n    this.container.querySelector('.modal-overlay').addEventListener('click', (e) => {\n      if (e.target === this.container.querySelector('.modal-overlay')) {\n        this.closeModal();\n      }\n    });\n\n    // Form submission\n    this.container\n      .querySelector('#key-editor-form')\n      .addEventListener('submit', (e) => this.saveKeyValue(e));\n  }\n\n  async loadMemoryData() {\n    try {\n      // Load memory data from Claude Flow's memory system\n      const response = await fetch('/api/memory/list');\n      const data = await response.json();\n\n      this.memoryData = new Map(Object.entries(data));\n      this.updateNamespaceTree();\n      this.updateKeyValueList();\n      this.updateAnalytics();\n    } catch (error) {\n      console.error('Failed to load memory data:', error);\n      this.showError('Failed to load memory data');\n    }\n  }\n\n  updateNamespaceTree() {\n    const container = this.container.querySelector('.namespace-tree-container');\n    const namespaces = this.getNamespaces();\n\n    container.innerHTML = this.renderNamespaceTree(namespaces);\n\n    // Add click handlers for namespace items\n    container.querySelectorAll('.namespace-item').forEach((item) => {\n      item.addEventListener('click', (e) => {\n        e.stopPropagation();\n        this.selectNamespace(item.dataset.namespace);\n      });\n    });\n  }\n\n  renderNamespaceTree(namespaces, parent = '', level = 0) {\n    let html = '';\n\n    for (const [namespace, data] of namespaces) {\n      const fullPath = parent ? `${parent}.${namespace}` : namespace;\n      const hasChildren = data.children && data.children.size > 0;\n\n      html += `\n                <div class=\"namespace-item ${this.currentNamespace === fullPath ? 'active' : ''}\" \n                     data-namespace=\"${fullPath}\" \n                     style=\"padding-left: ${level * 20}px\">\n                    <div class=\"namespace-content\">\n                        ${hasChildren ? '<i class=\"icon-folder\"></i>' : '<i class=\"icon-file\"></i>'}\n                        <span class=\"namespace-name\">${namespace}</span>\n                        <span class=\"namespace-count\">(${data.count})</span>\n                    </div>\n                </div>\n            `;\n\n      if (hasChildren) {\n        html += this.renderNamespaceTree(data.children, fullPath, level + 1);\n      }\n    }\n\n    return html;\n  }\n\n  updateKeyValueList() {\n    const container = this.container.querySelector('.key-value-list');\n    const keys = this.getKeysForNamespace(this.currentNamespace);\n\n    container.innerHTML = keys.map((key) => this.renderKeyValueItem(key)).join('');\n\n    // Add event listeners for key-value items\n    container.querySelectorAll('.key-value-item').forEach((item) => {\n      item\n        .querySelector('.btn-edit')\n        .addEventListener('click', () => this.editKey(item.dataset.key));\n      item\n        .querySelector('.btn-delete')\n        .addEventListener('click', () => this.deleteKey(item.dataset.key));\n      item\n        .querySelector('.btn-copy')\n        .addEventListener('click', () => this.copyKey(item.dataset.key));\n    });\n  }\n\n  renderKeyValueItem(key) {\n    const value = this.memoryData.get(key);\n    const type = this.getValueType(value);\n    const displayValue = this.formatValueForDisplay(value, type);\n\n    return `\n            <div class=\"key-value-item\" data-key=\"${key}\">\n                <div class=\"key-info\">\n                    <span class=\"key-name\">${key}</span>\n                    <span class=\"key-type\">${type}</span>\n                </div>\n                <div class=\"value-preview\">\n                    <span class=\"value-content\">${displayValue}</span>\n                </div>\n                <div class=\"item-actions\">\n                    <button class=\"btn-edit\" title=\"Edit\">\n                        <i class=\"icon-edit\"></i>\n                    </button>\n                    <button class=\"btn-copy\" title=\"Copy\">\n                        <i class=\"icon-copy\"></i>\n                    </button>\n                    <button class=\"btn-delete\" title=\"Delete\">\n                        <i class=\"icon-delete\"></i>\n                    </button>\n                </div>\n            </div>\n        `;\n  }\n\n  getNamespaces() {\n    const namespaces = new Map();\n\n    for (const [key, value] of this.memoryData) {\n      const parts = key.split('.');\n      let current = namespaces;\n      let path = '';\n\n      for (let i = 0; i < parts.length - 1; i++) {\n        const part = parts[i];\n        path = path ? `${path}.${part}` : part;\n\n        if (!current.has(part)) {\n          current.set(part, {\n            count: 0,\n            children: new Map(),\n          });\n        }\n\n        current = current.get(part).children;\n      }\n\n      // Count the final key\n      const finalPart = parts[parts.length - 1];\n      if (!current.has(finalPart)) {\n        current.set(finalPart, { count: 0, children: new Map() });\n      }\n      current.get(finalPart).count++;\n    }\n\n    return namespaces;\n  }\n\n  getKeysForNamespace(namespace) {\n    const keys = [];\n    const prefix = namespace === 'global' ? '' : `${namespace}.`;\n\n    for (const [key, value] of this.memoryData) {\n      if (namespace === 'global' || key.startsWith(prefix)) {\n        keys.push(key);\n      }\n    }\n\n    return keys.sort();\n  }\n\n  getValueType(value) {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (Array.isArray(value)) return 'array';\n    return typeof value;\n  }\n\n  formatValueForDisplay(value, type) {\n    switch (type) {\n      case 'string':\n        return value.length > 50 ? `${value.substring(0, 50)}...` : value;\n      case 'object':\n        return JSON.stringify(value).substring(0, 100) + '...';\n      case 'array':\n        return `[${value.length} items]`;\n      default:\n        return String(value);\n    }\n  }\n\n  updateAnalytics(timeframe = '24h') {\n    const stats = this.calculateStats(timeframe);\n\n    // Update stat cards\n    this.container.querySelector('#total-keys').textContent = stats.totalKeys;\n    this.container.querySelector('#memory-usage').textContent = stats.memoryUsage;\n    this.container.querySelector('#compression-rate').textContent = stats.compressionRate;\n    this.container.querySelector('#access-frequency').textContent = stats.accessFrequency;\n\n    // Update charts\n    this.visualizer.updateUsageChart(stats.usageData);\n    this.visualizer.updatePatternChart(stats.patternData);\n  }\n\n  calculateStats(timeframe) {\n    const now = Date.now();\n    const timeframes = {\n      '1h': 60 * 60 * 1000,\n      '24h': 24 * 60 * 60 * 1000,\n      '7d': 7 * 24 * 60 * 60 * 1000,\n      '30d': 30 * 24 * 60 * 60 * 1000,\n    };\n\n    const cutoff = now - timeframes[timeframe];\n\n    return {\n      totalKeys: this.memoryData.size,\n      memoryUsage: this.calculateMemoryUsage(),\n      compressionRate: this.compressionManager.getCompressionRate(),\n      accessFrequency: this.calculateAccessFrequency(cutoff),\n      usageData: this.getUsageData(cutoff),\n      patternData: this.getPatternData(cutoff),\n    };\n  }\n\n  calculateMemoryUsage() {\n    let totalSize = 0;\n    for (const [key, value] of this.memoryData) {\n      totalSize += this.getObjectSize(key) + this.getObjectSize(value);\n    }\n    return this.formatBytes(totalSize);\n  }\n\n  getObjectSize(obj) {\n    let size = 0;\n    if (typeof obj === 'string') {\n      size = obj.length * 2; // UTF-16\n    } else if (typeof obj === 'number') {\n      size = 8; // 64-bit float\n    } else if (typeof obj === 'boolean') {\n      size = 1;\n    } else if (obj === null || obj === undefined) {\n      size = 0;\n    } else {\n      size = JSON.stringify(obj).length * 2;\n    }\n    return size;\n  }\n\n  formatBytes(bytes) {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n\n  calculateAccessFrequency(cutoff) {\n    const recentAccess = this.analytics.history.filter((entry) => entry.timestamp > cutoff);\n    const frequency = recentAccess.length / ((Date.now() - cutoff) / 60000); // per minute\n    return frequency.toFixed(2);\n  }\n\n  getUsageData(cutoff) {\n    // Return usage data for charts\n    return this.analytics.history\n      .filter((entry) => entry.timestamp > cutoff)\n      .map((entry) => ({\n        timestamp: entry.timestamp,\n        operations: entry.operations || 0,\n        memory: entry.memory || 0,\n      }));\n  }\n\n  getPatternData(cutoff) {\n    // Return pattern data for charts\n    const patterns = new Map();\n\n    for (const [key, value] of this.analytics.patterns) {\n      if (value.lastAccess > cutoff) {\n        patterns.set(key, value);\n      }\n    }\n\n    return Array.from(patterns.entries());\n  }\n\n  // Event handlers\n  async selectNamespace(namespace) {\n    this.currentNamespace = namespace;\n    this.updateKeyValueList();\n\n    // Update active state\n    this.container.querySelectorAll('.namespace-item').forEach((item) => {\n      item.classList.toggle('active', item.dataset.namespace === namespace);\n    });\n\n    await this.notifyCoordination(`Selected namespace: ${namespace}`);\n  }\n\n  async addNamespace() {\n    const name = prompt('Enter namespace name:');\n    if (name) {\n      // Create a placeholder key to establish the namespace\n      const key = `${name}.placeholder`;\n      await this.setMemoryValue(key, 'Namespace placeholder');\n      await this.loadMemoryData();\n      await this.notifyCoordination(`Added namespace: ${name}`);\n    }\n  }\n\n  async addKey() {\n    this.openModal('key-editor-modal');\n    this.container.querySelector('#edit-key').value = '';\n    this.container.querySelector('#edit-value').value = '';\n    this.container.querySelector('#edit-type').value = 'string';\n    this.container.querySelector('#edit-namespace').value = this.currentNamespace;\n  }\n\n  async editKey(key) {\n    const value = this.memoryData.get(key);\n    const type = this.getValueType(value);\n\n    this.openModal('key-editor-modal');\n    this.container.querySelector('#edit-key').value = key;\n    this.container.querySelector('#edit-value').value = JSON.stringify(value, null, 2);\n    this.container.querySelector('#edit-type').value = type;\n    this.container.querySelector('#edit-namespace').value = this.getNamespaceFromKey(key);\n  }\n\n  async deleteKey(key) {\n    if (confirm(`Are you sure you want to delete \"${key}\"?`)) {\n      await this.deleteMemoryValue(key);\n      await this.loadMemoryData();\n      await this.notifyCoordination(`Deleted key: ${key}`);\n    }\n  }\n\n  async copyKey(key) {\n    const value = this.memoryData.get(key);\n    const text = JSON.stringify({ [key]: value }, null, 2);\n\n    try {\n      await navigator.clipboard.writeText(text);\n      this.showSuccess('Key copied to clipboard');\n    } catch (error) {\n      console.error('Failed to copy to clipboard:', error);\n      this.showError('Failed to copy to clipboard');\n    }\n  }\n\n  async saveKeyValue(e) {\n    e.preventDefault();\n\n    const key = this.container.querySelector('#edit-key').value;\n    const type = this.container.querySelector('#edit-type').value;\n    const valueText = this.container.querySelector('#edit-value').value;\n\n    try {\n      let value;\n\n      switch (type) {\n        case 'string':\n          value = valueText;\n          break;\n        case 'number':\n          value = parseFloat(valueText);\n          break;\n        case 'boolean':\n          value = valueText.toLowerCase() === 'true';\n          break;\n        case 'object':\n        case 'array':\n          value = JSON.parse(valueText);\n          break;\n        default:\n          value = valueText;\n      }\n\n      await this.setMemoryValue(key, value);\n      await this.loadMemoryData();\n      this.closeModal();\n      await this.notifyCoordination(`Saved key: ${key}`);\n    } catch (error) {\n      console.error('Failed to save key-value:', error);\n      this.showError('Failed to save key-value pair');\n    }\n  }\n\n  async createBackup() {\n    try {\n      const backup = await this.backupManager.createBackup(this.memoryData);\n      this.showSuccess(`Backup created: ${backup.id}`);\n      await this.notifyCoordination(`Created backup: ${backup.id}`);\n    } catch (error) {\n      console.error('Failed to create backup:', error);\n      this.showError('Failed to create backup');\n    }\n  }\n\n  async optimizeMemory() {\n    try {\n      const result = await this.compressionManager.optimize(this.memoryData);\n      this.showSuccess(`Memory optimized: ${result.savedBytes} bytes saved`);\n      await this.loadMemoryData();\n      await this.notifyCoordination(`Optimized memory: ${result.savedBytes} bytes saved`);\n    } catch (error) {\n      console.error('Failed to optimize memory:', error);\n      this.showError('Failed to optimize memory');\n    }\n  }\n\n  async refresh() {\n    await this.loadMemoryData();\n    this.showSuccess('Memory data refreshed');\n  }\n\n  // Helper methods\n  openModal(modalId) {\n    this.container.querySelector('#modal-overlay').style.display = 'flex';\n    this.container.querySelector(`#${modalId}`).style.display = 'block';\n  }\n\n  closeModal() {\n    this.container.querySelector('#modal-overlay').style.display = 'none';\n    this.container.querySelectorAll('.modal').forEach((modal) => {\n      modal.style.display = 'none';\n    });\n  }\n\n  getNamespaceFromKey(key) {\n    const parts = key.split('.');\n    return parts.length > 1 ? parts.slice(0, -1).join('.') : 'global';\n  }\n\n  async setMemoryValue(key, value) {\n    const response = await fetch('/api/memory/set', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ key, value }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to set memory value');\n    }\n  }\n\n  async deleteMemoryValue(key) {\n    const response = await fetch('/api/memory/delete', {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ key }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to delete memory value');\n    }\n  }\n\n  showSuccess(message) {\n    // Implementation for success notification\n    console.log('Success:', message);\n  }\n\n  showError(message) {\n    // Implementation for error notification\n    console.error('Error:', message);\n  }\n\n  async notifyCoordination(message) {\n    try {\n      await fetch('/api/coordination/notify', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message, timestamp: Date.now() }),\n      });\n    } catch (error) {\n      console.error('Failed to notify coordination:', error);\n    }\n  }\n\n  startMonitoring() {\n    // Start real-time monitoring\n    setInterval(() => {\n      this.updateAnalytics();\n    }, 30000); // Update every 30 seconds\n  }\n\n  render() {\n    return this.container;\n  }\n}\n\n// Supporting classes\nclass BackupManager {\n  constructor() {\n    this.backups = new Map();\n  }\n\n  async createBackup(memoryData) {\n    const id = `backup_${Date.now()}`;\n    const backup = {\n      id,\n      timestamp: Date.now(),\n      data: new Map(memoryData),\n      size: this.calculateBackupSize(memoryData),\n    };\n\n    this.backups.set(id, backup);\n    return backup;\n  }\n\n  async restoreBackup(backupId) {\n    const backup = this.backups.get(backupId);\n    if (!backup) {\n      throw new Error('Backup not found');\n    }\n\n    return backup.data;\n  }\n\n  calculateBackupSize(memoryData) {\n    return JSON.stringify(Array.from(memoryData.entries())).length;\n  }\n}\n\nclass SyncManager {\n  constructor() {\n    this.syncStatus = 'idle';\n    this.lastSync = null;\n  }\n\n  async sync() {\n    this.syncStatus = 'syncing';\n\n    try {\n      // Implement sync logic here\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      this.lastSync = Date.now();\n      this.syncStatus = 'synchronized';\n    } catch (error) {\n      this.syncStatus = 'error';\n      throw error;\n    }\n  }\n\n  getStatus() {\n    return {\n      status: this.syncStatus,\n      lastSync: this.lastSync,\n    };\n  }\n}\n\nclass CompressionManager {\n  constructor() {\n    this.compressionRate = 0;\n  }\n\n  async optimize(memoryData) {\n    // Implement compression logic\n    const originalSize = this.calculateSize(memoryData);\n\n    // Simulate compression\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    const compressedSize = originalSize * 0.7; // 30% compression\n    const savedBytes = originalSize - compressedSize;\n\n    this.compressionRate = (savedBytes / originalSize) * 100;\n\n    return {\n      savedBytes: Math.floor(savedBytes),\n      compressionRate: this.compressionRate,\n    };\n  }\n\n  getCompressionRate() {\n    return `${this.compressionRate.toFixed(1)}%`;\n  }\n\n  calculateSize(memoryData) {\n    return JSON.stringify(Array.from(memoryData.entries())).length;\n  }\n}\n\nclass MemoryVisualizer {\n  constructor() {\n    this.usageChart = null;\n    this.patternChart = null;\n  }\n\n  updateUsageChart(data) {\n    const canvas = document.getElementById('usage-chart');\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n\n    // Simple chart implementation\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw usage data\n    if (data.length > 0) {\n      ctx.beginPath();\n      ctx.strokeStyle = '#007bff';\n      ctx.lineWidth = 2;\n\n      const width = canvas.width;\n      const height = canvas.height;\n      const stepX = width / (data.length - 1);\n      const maxValue = Math.max(...data.map((d) => d.operations));\n\n      data.forEach((point, index) => {\n        const x = index * stepX;\n        const y = height - (point.operations / maxValue) * height;\n\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n\n      ctx.stroke();\n    }\n  }\n\n  updatePatternChart(data) {\n    const canvas = document.getElementById('pattern-chart');\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n\n    // Simple pattern chart implementation\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw pattern data as bars\n    if (data.length > 0) {\n      const width = canvas.width;\n      const height = canvas.height;\n      const barWidth = width / data.length;\n      const maxValue = Math.max(...data.map((d) => d[1].count || 0));\n\n      data.forEach((pattern, index) => {\n        const barHeight = ((pattern[1].count || 0) / maxValue) * height;\n        const x = index * barWidth;\n        const y = height - barHeight;\n\n        ctx.fillStyle = '#28a745';\n        ctx.fillRect(x, y, barWidth - 2, barHeight);\n      });\n    }\n  }\n}\n\n// Export for use in other modules\nwindow.MemoryInterface = MemoryInterface;\n"],"names":["MemoryInterface","container","currentNamespace","memoryData","Map","searchFilters","analytics","usage","history","patterns","backupManager","BackupManager","syncManager","SyncManager","compressionManager","CompressionManager","visualizer","MemoryVisualizer","init","createInterface","setupEventListeners","startMonitoring","loadMemoryData","document","createElement","className","innerHTML","querySelector","addEventListener","refresh","createBackup","optimizeMemory","showSyncStatus","addNamespace","e","searchNamespaces","target","value","addKey","bulkEdit","exportMemory","searchKeys","filterByType","updateAnalytics","addSearchFilter","showSavedSearches","restoreBackup","importBackup","closeModal","saveKeyValue","response","fetch","data","json","Object","entries","updateNamespaceTree","updateKeyValueList","error","console","showError","namespaces","getNamespaces","renderNamespaceTree","querySelectorAll","forEach","item","stopPropagation","selectNamespace","dataset","namespace","parent","level","html","fullPath","hasChildren","children","size","count","keys","getKeysForNamespace","map","key","renderKeyValueItem","join","editKey","deleteKey","copyKey","get","type","getValueType","displayValue","formatValueForDisplay","parts","split","current","path","i","length","part","has","set","finalPart","prefix","startsWith","push","sort","undefined","Array","isArray","substring","JSON","stringify","String","timeframe","stats","calculateStats","textContent","totalKeys","memoryUsage","compressionRate","accessFrequency","updateUsageChart","usageData","updatePatternChart","patternData","now","Date","timeframes","cutoff","calculateMemoryUsage","getCompressionRate","calculateAccessFrequency","getUsageData","getPatternData","totalSize","getObjectSize","formatBytes","obj","bytes","k","sizes","Math","floor","log","parseFloat","pow","toFixed","recentAccess","filter","entry","timestamp","frequency","operations","memory","lastAccess","from","classList","toggle","notifyCoordination","name","prompt","setMemoryValue","openModal","getNamespaceFromKey","confirm","deleteMemoryValue","text","navigator","clipboard","writeText","showSuccess","preventDefault","valueText","toLowerCase","parse","backup","id","result","optimize","savedBytes","modalId","style","display","modal","slice","method","headers","body","ok","Error","message","setInterval","render","backups","calculateBackupSize","backupId","syncStatus","lastSync","sync","Promise","resolve","setTimeout","getStatus","status","originalSize","calculateSize","compressedSize","usageChart","patternChart","canvas","getElementById","ctx","getContext","clearRect","width","height","beginPath","strokeStyle","lineWidth","stepX","maxValue","max","d","point","index","x","y","moveTo","lineTo","stroke","barWidth","pattern","barHeight","fillStyle","fillRect","window"],"mappings":"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"}