{"version":3,"sources":["../../../../../src/ui/console/js/workflow-designer.js"],"sourcesContent":["/**\n * Advanced Workflow Designer for Claude Flow\n * Visual drag-and-drop workflow builder with real-time execution\n */\n\nclass WorkflowDesigner {\n  constructor(containerId) {\n    this.container = document.getElementById(containerId);\n    this.canvas = null;\n    this.ctx = null;\n    this.nodes = new Map();\n    this.connections = new Map();\n    this.selectedNode = null;\n    this.draggedNode = null;\n    this.dragOffset = { x: 0, y: 0 };\n    this.connectionStart = null;\n    this.executionState = new Map();\n    this.isExecuting = false;\n    this.zoom = 1;\n    this.pan = { x: 0, y: 0 };\n\n    this.init();\n  }\n\n  init() {\n    this.createUI();\n    this.setupEventListeners();\n    this.loadTemplates();\n    this.setupNodePalette();\n  }\n\n  createUI() {\n    this.container.innerHTML = `\n            <div class=\"workflow-designer\">\n                <div class=\"toolbar\">\n                    <div class=\"toolbar-section\">\n                        <button class=\"btn btn-primary\" id=\"saveWorkflow\">\n                            <i class=\"fas fa-save\"></i> Save\n                        </button>\n                        <button class=\"btn btn-secondary\" id=\"loadWorkflow\">\n                            <i class=\"fas fa-folder-open\"></i> Load\n                        </button>\n                        <button class=\"btn btn-success\" id=\"exportWorkflow\">\n                            <i class=\"fas fa-download\"></i> Export\n                        </button>\n                        <button class=\"btn btn-info\" id=\"importWorkflow\">\n                            <i class=\"fas fa-upload\"></i> Import\n                        </button>\n                        <input type=\"file\" id=\"importFile\" accept=\".json\" style=\"display: none;\">\n                    </div>\n                    <div class=\"toolbar-section\">\n                        <button class=\"btn btn-warning\" id=\"validateWorkflow\">\n                            <i class=\"fas fa-check-circle\"></i> Validate\n                        </button>\n                        <button class=\"btn btn-success\" id=\"executeWorkflow\">\n                            <i class=\"fas fa-play\"></i> Execute\n                        </button>\n                        <button class=\"btn btn-danger\" id=\"stopWorkflow\">\n                            <i class=\"fas fa-stop\"></i> Stop\n                        </button>\n                    </div>\n                    <div class=\"toolbar-section\">\n                        <button class=\"btn btn-secondary\" id=\"zoomIn\">\n                            <i class=\"fas fa-search-plus\"></i>\n                        </button>\n                        <button class=\"btn btn-secondary\" id=\"zoomOut\">\n                            <i class=\"fas fa-search-minus\"></i>\n                        </button>\n                        <button class=\"btn btn-secondary\" id=\"zoomReset\">\n                            <i class=\"fas fa-expand-arrows-alt\"></i>\n                        </button>\n                        <button class=\"btn btn-secondary\" id=\"clearCanvas\">\n                            <i class=\"fas fa-trash\"></i> Clear\n                        </button>\n                    </div>\n                </div>\n                \n                <div class=\"designer-body\">\n                    <div class=\"node-palette\">\n                        <div class=\"palette-header\">\n                            <h3>Components</h3>\n                            <div class=\"palette-search\">\n                                <input type=\"text\" placeholder=\"Search components...\" id=\"paletteSearch\">\n                            </div>\n                        </div>\n                        <div class=\"palette-content\">\n                            <div class=\"palette-category\" data-category=\"input\">\n                                <h4>Input</h4>\n                                <div class=\"palette-items\"></div>\n                            </div>\n                            <div class=\"palette-category\" data-category=\"processing\">\n                                <h4>Processing</h4>\n                                <div class=\"palette-items\"></div>\n                            </div>\n                            <div class=\"palette-category\" data-category=\"output\">\n                                <h4>Output</h4>\n                                <div class=\"palette-items\"></div>\n                            </div>\n                            <div class=\"palette-category\" data-category=\"control\">\n                                <h4>Control Flow</h4>\n                                <div class=\"palette-items\"></div>\n                            </div>\n                            <div class=\"palette-category\" data-category=\"ai\">\n                                <h4>AI Operations</h4>\n                                <div class=\"palette-items\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"canvas-container\">\n                        <canvas id=\"workflowCanvas\" width=\"1200\" height=\"800\"></canvas>\n                        <div class=\"canvas-overlay\">\n                            <div class=\"execution-status\" id=\"executionStatus\"></div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"properties-panel\">\n                        <div class=\"panel-header\">\n                            <h3>Properties</h3>\n                        </div>\n                        <div class=\"panel-content\" id=\"propertiesContent\">\n                            <div class=\"no-selection\">\n                                <p>Select a node to edit properties</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"bottom-panel\">\n                    <div class=\"panel-tabs\">\n                        <button class=\"tab-button active\" data-tab=\"templates\">Templates</button>\n                        <button class=\"tab-button\" data-tab=\"execution\">Execution Log</button>\n                        <button class=\"tab-button\" data-tab=\"validation\">Validation</button>\n                    </div>\n                    <div class=\"panel-content\">\n                        <div class=\"tab-content active\" id=\"templatesTab\">\n                            <div class=\"template-gallery\"></div>\n                        </div>\n                        <div class=\"tab-content\" id=\"executionTab\">\n                            <div class=\"execution-log\"></div>\n                        </div>\n                        <div class=\"tab-content\" id=\"validationTab\">\n                            <div class=\"validation-results\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n\n    this.canvas = document.getElementById('workflowCanvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.setupCanvas();\n  }\n\n  setupCanvas() {\n    // Set up high-DPI canvas\n    const rect = this.canvas.getBoundingClientRect();\n    const dpr = window.devicePixelRatio || 1;\n\n    this.canvas.width = rect.width * dpr;\n    this.canvas.height = rect.height * dpr;\n    this.ctx.scale(dpr, dpr);\n\n    this.canvas.style.width = rect.width + 'px';\n    this.canvas.style.height = rect.height + 'px';\n\n    this.draw();\n  }\n\n  setupEventListeners() {\n    // Canvas events\n    this.canvas.addEventListener('mousedown', this.handleMouseDown.bind(this));\n    this.canvas.addEventListener('mousemove', this.handleMouseMove.bind(this));\n    this.canvas.addEventListener('mouseup', this.handleMouseUp.bind(this));\n    this.canvas.addEventListener('wheel', this.handleWheel.bind(this));\n    this.canvas.addEventListener('contextmenu', this.handleContextMenu.bind(this));\n\n    // Toolbar events\n    document.getElementById('saveWorkflow').addEventListener('click', this.saveWorkflow.bind(this));\n    document.getElementById('loadWorkflow').addEventListener('click', this.loadWorkflow.bind(this));\n    document\n      .getElementById('exportWorkflow')\n      .addEventListener('click', this.exportWorkflow.bind(this));\n    document\n      .getElementById('importWorkflow')\n      .addEventListener('click', this.importWorkflow.bind(this));\n    document\n      .getElementById('importFile')\n      .addEventListener('change', this.handleFileImport.bind(this));\n    document\n      .getElementById('validateWorkflow')\n      .addEventListener('click', this.validateWorkflow.bind(this));\n    document\n      .getElementById('executeWorkflow')\n      .addEventListener('click', this.executeWorkflow.bind(this));\n    document.getElementById('stopWorkflow').addEventListener('click', this.stopWorkflow.bind(this));\n    document\n      .getElementById('zoomIn')\n      .addEventListener('click', () => this.setZoom(this.zoom * 1.2));\n    document\n      .getElementById('zoomOut')\n      .addEventListener('click', () => this.setZoom(this.zoom / 1.2));\n    document.getElementById('zoomReset').addEventListener('click', () => this.setZoom(1));\n    document.getElementById('clearCanvas').addEventListener('click', this.clearCanvas.bind(this));\n\n    // Palette search\n    document\n      .getElementById('paletteSearch')\n      .addEventListener('input', this.filterPalette.bind(this));\n\n    // Tab switching\n    document.querySelectorAll('.tab-button').forEach((button) => {\n      button.addEventListener('click', this.switchTab.bind(this));\n    });\n\n    // Window resize\n    window.addEventListener('resize', this.handleResize.bind(this));\n  }\n\n  setupNodePalette() {\n    const nodeTypes = {\n      input: [\n        { type: 'file-input', name: 'File Input', icon: 'fas fa-file-import' },\n        { type: 'text-input', name: 'Text Input', icon: 'fas fa-keyboard' },\n        { type: 'url-input', name: 'URL Input', icon: 'fas fa-link' },\n        { type: 'api-input', name: 'API Input', icon: 'fas fa-cloud-download-alt' },\n      ],\n      processing: [\n        { type: 'transform', name: 'Transform', icon: 'fas fa-exchange-alt' },\n        { type: 'filter', name: 'Filter', icon: 'fas fa-filter' },\n        { type: 'aggregate', name: 'Aggregate', icon: 'fas fa-layer-group' },\n        { type: 'sort', name: 'Sort', icon: 'fas fa-sort' },\n      ],\n      output: [\n        { type: 'file-output', name: 'File Output', icon: 'fas fa-file-export' },\n        { type: 'display', name: 'Display', icon: 'fas fa-desktop' },\n        { type: 'api-output', name: 'API Output', icon: 'fas fa-cloud-upload-alt' },\n        { type: 'notification', name: 'Notification', icon: 'fas fa-bell' },\n      ],\n      control: [\n        { type: 'condition', name: 'Condition', icon: 'fas fa-code-branch' },\n        { type: 'loop', name: 'Loop', icon: 'fas fa-redo' },\n        { type: 'delay', name: 'Delay', icon: 'fas fa-clock' },\n        { type: 'parallel', name: 'Parallel', icon: 'fas fa-stream' },\n      ],\n      ai: [\n        { type: 'ai-analyze', name: 'AI Analyze', icon: 'fas fa-brain' },\n        { type: 'ai-generate', name: 'AI Generate', icon: 'fas fa-magic' },\n        { type: 'ai-classify', name: 'AI Classify', icon: 'fas fa-tags' },\n        { type: 'ai-summarize', name: 'AI Summarize', icon: 'fas fa-compress-alt' },\n      ],\n    };\n\n    Object.entries(nodeTypes).forEach(([category, nodes]) => {\n      const container = document.querySelector(`[data-category=\"${category}\"] .palette-items`);\n      nodes.forEach((node) => {\n        const item = document.createElement('div');\n        item.className = 'palette-item';\n        item.draggable = true;\n        item.dataset.nodeType = node.type;\n        item.innerHTML = `\n                    <i class=\"${node.icon}\"></i>\n                    <span>${node.name}</span>\n                `;\n\n        item.addEventListener('dragstart', (e) => {\n          e.dataTransfer.setData('text/plain', node.type);\n          e.dataTransfer.effectAllowed = 'copy';\n        });\n\n        container.appendChild(item);\n      });\n    });\n\n    // Canvas drop support\n    this.canvas.addEventListener('dragover', (e) => {\n      e.preventDefault();\n      e.dataTransfer.dropEffect = 'copy';\n    });\n\n    this.canvas.addEventListener('drop', (e) => {\n      e.preventDefault();\n      const nodeType = e.dataTransfer.getData('text/plain');\n      const rect = this.canvas.getBoundingClientRect();\n      const x = (e.clientX - rect.left - this.pan.x) / this.zoom;\n      const y = (e.clientY - rect.top - this.pan.y) / this.zoom;\n      this.createNode(nodeType, x, y);\n    });\n  }\n\n  createNode(type, x, y) {\n    const nodeId = 'node_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    const node = {\n      id: nodeId,\n      type: type,\n      x: x,\n      y: y,\n      width: 150,\n      height: 80,\n      inputs: this.getNodeInputs(type),\n      outputs: this.getNodeOutputs(type),\n      properties: this.getNodeProperties(type),\n      status: 'idle',\n    };\n\n    this.nodes.set(nodeId, node);\n    this.draw();\n    this.showProperties(node);\n\n    return node;\n  }\n\n  getNodeInputs(type) {\n    const inputs = {\n      'file-input': [],\n      'text-input': [],\n      'url-input': [],\n      'api-input': [],\n      transform: [{ name: 'data', type: 'any' }],\n      filter: [{ name: 'data', type: 'any' }],\n      aggregate: [{ name: 'data', type: 'array' }],\n      sort: [{ name: 'data', type: 'array' }],\n      'file-output': [{ name: 'data', type: 'any' }],\n      display: [{ name: 'data', type: 'any' }],\n      'api-output': [{ name: 'data', type: 'any' }],\n      notification: [{ name: 'message', type: 'string' }],\n      condition: [\n        { name: 'condition', type: 'boolean' },\n        { name: 'data', type: 'any' },\n      ],\n      loop: [{ name: 'data', type: 'array' }],\n      delay: [{ name: 'data', type: 'any' }],\n      parallel: [{ name: 'data', type: 'array' }],\n      'ai-analyze': [{ name: 'data', type: 'any' }],\n      'ai-generate': [{ name: 'prompt', type: 'string' }],\n      'ai-classify': [{ name: 'data', type: 'any' }],\n      'ai-summarize': [{ name: 'data', type: 'string' }],\n    };\n    return inputs[type] || [];\n  }\n\n  getNodeOutputs(type) {\n    const outputs = {\n      'file-input': [{ name: 'data', type: 'any' }],\n      'text-input': [{ name: 'text', type: 'string' }],\n      'url-input': [{ name: 'data', type: 'any' }],\n      'api-input': [{ name: 'data', type: 'any' }],\n      transform: [{ name: 'result', type: 'any' }],\n      filter: [{ name: 'result', type: 'any' }],\n      aggregate: [{ name: 'result', type: 'any' }],\n      sort: [{ name: 'result', type: 'array' }],\n      'file-output': [],\n      display: [],\n      'api-output': [{ name: 'response', type: 'any' }],\n      notification: [],\n      condition: [\n        { name: 'true', type: 'any' },\n        { name: 'false', type: 'any' },\n      ],\n      loop: [{ name: 'result', type: 'array' }],\n      delay: [{ name: 'data', type: 'any' }],\n      parallel: [{ name: 'results', type: 'array' }],\n      'ai-analyze': [{ name: 'analysis', type: 'object' }],\n      'ai-generate': [{ name: 'generated', type: 'string' }],\n      'ai-classify': [{ name: 'categories', type: 'array' }],\n      'ai-summarize': [{ name: 'summary', type: 'string' }],\n    };\n    return outputs[type] || [];\n  }\n\n  getNodeProperties(type) {\n    const properties = {\n      'file-input': { path: '', format: 'auto' },\n      'text-input': { value: '', multiline: false },\n      'url-input': { url: '', method: 'GET', headers: {} },\n      'api-input': { endpoint: '', method: 'GET', headers: {}, body: '' },\n      transform: { expression: '', language: 'javascript' },\n      filter: { condition: '', language: 'javascript' },\n      aggregate: { operation: 'sum', field: '' },\n      sort: { field: '', order: 'asc' },\n      'file-output': { path: '', format: 'auto' },\n      display: { format: 'table', title: '' },\n      'api-output': { endpoint: '', method: 'POST', headers: {} },\n      notification: { type: 'info', title: '' },\n      condition: { expression: '', language: 'javascript' },\n      loop: { type: 'forEach', condition: '' },\n      delay: { duration: 1000, unit: 'ms' },\n      parallel: { maxConcurrency: 5 },\n      'ai-analyze': { model: 'gpt-4', temperature: 0.7 },\n      'ai-generate': { model: 'gpt-4', temperature: 0.7, maxTokens: 1000 },\n      'ai-classify': { model: 'gpt-4', categories: [] },\n      'ai-summarize': { model: 'gpt-4', length: 'medium' },\n    };\n    return properties[type] || {};\n  }\n\n  handleMouseDown(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left - this.pan.x) / this.zoom;\n    const y = (e.clientY - rect.top - this.pan.y) / this.zoom;\n\n    // Check for node selection\n    const node = this.getNodeAt(x, y);\n    if (node) {\n      this.selectedNode = node;\n      this.draggedNode = node;\n      this.dragOffset = { x: x - node.x, y: y - node.y };\n      this.showProperties(node);\n    } else {\n      this.selectedNode = null;\n      this.showProperties(null);\n    }\n\n    // Check for connection point\n    const connectionPoint = this.getConnectionPointAt(x, y);\n    if (connectionPoint) {\n      this.connectionStart = connectionPoint;\n    }\n\n    this.draw();\n  }\n\n  handleMouseMove(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left - this.pan.x) / this.zoom;\n    const y = (e.clientY - rect.top - this.pan.y) / this.zoom;\n\n    if (this.draggedNode) {\n      this.draggedNode.x = x - this.dragOffset.x;\n      this.draggedNode.y = y - this.dragOffset.y;\n      this.draw();\n    }\n\n    if (this.connectionStart) {\n      this.tempConnection = { x, y };\n      this.draw();\n    }\n  }\n\n  handleMouseUp(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left - this.pan.x) / this.zoom;\n    const y = (e.clientY - rect.top - this.pan.y) / this.zoom;\n\n    if (this.connectionStart) {\n      const connectionEnd = this.getConnectionPointAt(x, y);\n      if (connectionEnd && connectionEnd.node !== this.connectionStart.node) {\n        this.createConnection(this.connectionStart, connectionEnd);\n      }\n      this.connectionStart = null;\n      this.tempConnection = null;\n      this.draw();\n    }\n\n    this.draggedNode = null;\n  }\n\n  handleWheel(e) {\n    e.preventDefault();\n    const rect = this.canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    const wheelDelta = e.deltaY < 0 ? 1.1 : 0.9;\n    const newZoom = Math.max(0.1, Math.min(3, this.zoom * wheelDelta));\n\n    this.pan.x = x - (x - this.pan.x) * (newZoom / this.zoom);\n    this.pan.y = y - (y - this.pan.y) * (newZoom / this.zoom);\n    this.zoom = newZoom;\n\n    this.draw();\n  }\n\n  handleContextMenu(e) {\n    e.preventDefault();\n    const rect = this.canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left - this.pan.x) / this.zoom;\n    const y = (e.clientY - rect.top - this.pan.y) / this.zoom;\n\n    const node = this.getNodeAt(x, y);\n    if (node) {\n      this.showContextMenu(e.clientX, e.clientY, node);\n    }\n  }\n\n  getNodeAt(x, y) {\n    for (let node of this.nodes.values()) {\n      if (x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  getConnectionPointAt(x, y) {\n    for (let node of this.nodes.values()) {\n      // Check input points\n      const inputPoints = this.getInputPoints(node);\n      for (let i = 0; i < inputPoints.length; i++) {\n        const point = inputPoints[i];\n        if (Math.abs(x - point.x) < 8 && Math.abs(y - point.y) < 8) {\n          return { node, type: 'input', index: i };\n        }\n      }\n\n      // Check output points\n      const outputPoints = this.getOutputPoints(node);\n      for (let i = 0; i < outputPoints.length; i++) {\n        const point = outputPoints[i];\n        if (Math.abs(x - point.x) < 8 && Math.abs(y - point.y) < 8) {\n          return { node, type: 'output', index: i };\n        }\n      }\n    }\n    return null;\n  }\n\n  getInputPoints(node) {\n    const points = [];\n    const inputCount = node.inputs.length;\n    for (let i = 0; i < inputCount; i++) {\n      points.push({\n        x: node.x,\n        y: node.y + (node.height / (inputCount + 1)) * (i + 1),\n      });\n    }\n    return points;\n  }\n\n  getOutputPoints(node) {\n    const points = [];\n    const outputCount = node.outputs.length;\n    for (let i = 0; i < outputCount; i++) {\n      points.push({\n        x: node.x + node.width,\n        y: node.y + (node.height / (outputCount + 1)) * (i + 1),\n      });\n    }\n    return points;\n  }\n\n  createConnection(start, end) {\n    if (start.type === 'output' && end.type === 'input') {\n      const connectionId = `${start.node.id}_${start.index}_${end.node.id}_${end.index}`;\n      this.connections.set(connectionId, {\n        id: connectionId,\n        from: start.node.id,\n        fromIndex: start.index,\n        to: end.node.id,\n        toIndex: end.index,\n      });\n    }\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.ctx.save();\n    this.ctx.translate(this.pan.x, this.pan.y);\n    this.ctx.scale(this.zoom, this.zoom);\n\n    // Draw grid\n    this.drawGrid();\n\n    // Draw connections\n    this.drawConnections();\n\n    // Draw temporary connection\n    if (this.tempConnection && this.connectionStart) {\n      this.drawTempConnection();\n    }\n\n    // Draw nodes\n    this.drawNodes();\n\n    this.ctx.restore();\n  }\n\n  drawGrid() {\n    const gridSize = 20;\n    const canvasWidth = this.canvas.width / this.zoom;\n    const canvasHeight = this.canvas.height / this.zoom;\n\n    this.ctx.strokeStyle = '#e0e0e0';\n    this.ctx.lineWidth = 0.5;\n\n    for (let x = 0; x <= canvasWidth; x += gridSize) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x, 0);\n      this.ctx.lineTo(x, canvasHeight);\n      this.ctx.stroke();\n    }\n\n    for (let y = 0; y <= canvasHeight; y += gridSize) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, y);\n      this.ctx.lineTo(canvasWidth, y);\n      this.ctx.stroke();\n    }\n  }\n\n  drawNodes() {\n    for (let node of this.nodes.values()) {\n      this.drawNode(node);\n    }\n  }\n\n  drawNode(node) {\n    const isSelected = this.selectedNode === node;\n    const isExecuting = node.status === 'executing';\n    const hasError = node.status === 'error';\n\n    // Node body\n    this.ctx.fillStyle = isSelected ? '#e3f2fd' : '#ffffff';\n    this.ctx.strokeStyle = isSelected ? '#2196f3' : hasError ? '#f44336' : '#cccccc';\n    this.ctx.lineWidth = isSelected ? 2 : 1;\n\n    this.ctx.fillRect(node.x, node.y, node.width, node.height);\n    this.ctx.strokeRect(node.x, node.y, node.width, node.height);\n\n    // Node title\n    this.ctx.fillStyle = '#333333';\n    this.ctx.font = '12px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(this.getNodeTitle(node.type), node.x + node.width / 2, node.y + 20);\n\n    // Status indicator\n    if (isExecuting) {\n      this.ctx.fillStyle = '#ff9800';\n      this.ctx.beginPath();\n      this.ctx.arc(node.x + node.width - 10, node.y + 10, 4, 0, 2 * Math.PI);\n      this.ctx.fill();\n    } else if (hasError) {\n      this.ctx.fillStyle = '#f44336';\n      this.ctx.beginPath();\n      this.ctx.arc(node.x + node.width - 10, node.y + 10, 4, 0, 2 * Math.PI);\n      this.ctx.fill();\n    }\n\n    // Input/Output points\n    this.drawConnectionPoints(node);\n  }\n\n  drawConnectionPoints(node) {\n    // Input points\n    const inputPoints = this.getInputPoints(node);\n    inputPoints.forEach((point, index) => {\n      this.ctx.fillStyle = '#4caf50';\n      this.ctx.beginPath();\n      this.ctx.arc(point.x, point.y, 4, 0, 2 * Math.PI);\n      this.ctx.fill();\n\n      // Input label\n      this.ctx.fillStyle = '#666666';\n      this.ctx.font = '10px Arial';\n      this.ctx.textAlign = 'right';\n      this.ctx.fillText(node.inputs[index].name, point.x - 8, point.y + 3);\n    });\n\n    // Output points\n    const outputPoints = this.getOutputPoints(node);\n    outputPoints.forEach((point, index) => {\n      this.ctx.fillStyle = '#2196f3';\n      this.ctx.beginPath();\n      this.ctx.arc(point.x, point.y, 4, 0, 2 * Math.PI);\n      this.ctx.fill();\n\n      // Output label\n      this.ctx.fillStyle = '#666666';\n      this.ctx.font = '10px Arial';\n      this.ctx.textAlign = 'left';\n      this.ctx.fillText(node.outputs[index].name, point.x + 8, point.y + 3);\n    });\n  }\n\n  drawConnections() {\n    for (let connection of this.connections.values()) {\n      const fromNode = this.nodes.get(connection.from);\n      const toNode = this.nodes.get(connection.to);\n\n      if (fromNode && toNode) {\n        const fromPoints = this.getOutputPoints(fromNode);\n        const toPoints = this.getInputPoints(toNode);\n\n        const fromPoint = fromPoints[connection.fromIndex];\n        const toPoint = toPoints[connection.toIndex];\n\n        this.drawConnection(fromPoint, toPoint);\n      }\n    }\n  }\n\n  drawConnection(from, to) {\n    const midX = (from.x + to.x) / 2;\n\n    this.ctx.strokeStyle = '#666666';\n    this.ctx.lineWidth = 2;\n    this.ctx.beginPath();\n    this.ctx.moveTo(from.x, from.y);\n    this.ctx.bezierCurveTo(midX, from.y, midX, to.y, to.x, to.y);\n    this.ctx.stroke();\n\n    // Arrow\n    const angle = Math.atan2(to.y - from.y, to.x - from.x);\n    const arrowLength = 8;\n    this.ctx.beginPath();\n    this.ctx.moveTo(to.x, to.y);\n    this.ctx.lineTo(\n      to.x - arrowLength * Math.cos(angle - Math.PI / 6),\n      to.y - arrowLength * Math.sin(angle - Math.PI / 6),\n    );\n    this.ctx.moveTo(to.x, to.y);\n    this.ctx.lineTo(\n      to.x - arrowLength * Math.cos(angle + Math.PI / 6),\n      to.y - arrowLength * Math.sin(angle + Math.PI / 6),\n    );\n    this.ctx.stroke();\n  }\n\n  drawTempConnection() {\n    const startPoint =\n      this.connectionStart.type === 'output'\n        ? this.getOutputPoints(this.connectionStart.node)[this.connectionStart.index]\n        : this.getInputPoints(this.connectionStart.node)[this.connectionStart.index];\n\n    this.ctx.strokeStyle = '#2196f3';\n    this.ctx.lineWidth = 2;\n    this.ctx.setLineDash([5, 5]);\n    this.ctx.beginPath();\n    this.ctx.moveTo(startPoint.x, startPoint.y);\n    this.ctx.lineTo(this.tempConnection.x, this.tempConnection.y);\n    this.ctx.stroke();\n    this.ctx.setLineDash([]);\n  }\n\n  getNodeTitle(type) {\n    const titles = {\n      'file-input': 'File Input',\n      'text-input': 'Text Input',\n      'url-input': 'URL Input',\n      'api-input': 'API Input',\n      transform: 'Transform',\n      filter: 'Filter',\n      aggregate: 'Aggregate',\n      sort: 'Sort',\n      'file-output': 'File Output',\n      display: 'Display',\n      'api-output': 'API Output',\n      notification: 'Notification',\n      condition: 'Condition',\n      loop: 'Loop',\n      delay: 'Delay',\n      parallel: 'Parallel',\n      'ai-analyze': 'AI Analyze',\n      'ai-generate': 'AI Generate',\n      'ai-classify': 'AI Classify',\n      'ai-summarize': 'AI Summarize',\n    };\n    return titles[type] || type;\n  }\n\n  showProperties(node) {\n    const panel = document.getElementById('propertiesContent');\n\n    if (!node) {\n      panel.innerHTML = '<div class=\"no-selection\"><p>Select a node to edit properties</p></div>';\n      return;\n    }\n\n    const properties = node.properties;\n    let html = `\n            <div class=\"properties-form\">\n                <h4>${this.getNodeTitle(node.type)}</h4>\n        `;\n\n    Object.entries(properties).forEach(([key, value]) => {\n      html += `\n                <div class=\"property-field\">\n                    <label>${this.formatPropertyLabel(key)}</label>\n                    ${this.renderPropertyInput(key, value, node.id)}\n                </div>\n            `;\n    });\n\n    html += '</div>';\n    panel.innerHTML = html;\n\n    // Attach event listeners\n    panel.querySelectorAll('input, select, textarea').forEach((input) => {\n      input.addEventListener('change', (e) => {\n        const propertyKey = e.target.dataset.property;\n        node.properties[propertyKey] = e.target.value;\n      });\n    });\n  }\n\n  formatPropertyLabel(key) {\n    return key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1');\n  }\n\n  renderPropertyInput(key, value, nodeId) {\n    const inputId = `${nodeId}_${key}`;\n\n    if (typeof value === 'boolean') {\n      return `\n                <input type=\"checkbox\" id=\"${inputId}\" data-property=\"${key}\" ${value ? 'checked' : ''}>\n            `;\n    } else if (key === 'method') {\n      return `\n                <select id=\"${inputId}\" data-property=\"${key}\">\n                    <option value=\"GET\" ${value === 'GET' ? 'selected' : ''}>GET</option>\n                    <option value=\"POST\" ${value === 'POST' ? 'selected' : ''}>POST</option>\n                    <option value=\"PUT\" ${value === 'PUT' ? 'selected' : ''}>PUT</option>\n                    <option value=\"DELETE\" ${value === 'DELETE' ? 'selected' : ''}>DELETE</option>\n                </select>\n            `;\n    } else if (key.includes('expression') || key.includes('body')) {\n      return `\n                <textarea id=\"${inputId}\" data-property=\"${key}\" rows=\"3\">${value}</textarea>\n            `;\n    } else {\n      return `\n                <input type=\"text\" id=\"${inputId}\" data-property=\"${key}\" value=\"${value}\">\n            `;\n    }\n  }\n\n  async validateWorkflow() {\n    const results = {\n      errors: [],\n      warnings: [],\n      info: [],\n    };\n\n    // Check for isolated nodes\n    const connectedNodes = new Set();\n    for (let connection of this.connections.values()) {\n      connectedNodes.add(connection.from);\n      connectedNodes.add(connection.to);\n    }\n\n    for (let node of this.nodes.values()) {\n      if (!connectedNodes.has(node.id) && this.nodes.size > 1) {\n        results.warnings.push(`Node \"${this.getNodeTitle(node.type)}\" is not connected`);\n      }\n    }\n\n    // Check for circular dependencies\n    if (this.hasCircularDependencies()) {\n      results.errors.push('Circular dependencies detected in workflow');\n    }\n\n    // Check required properties\n    for (let node of this.nodes.values()) {\n      const required = this.getRequiredProperties(node.type);\n      for (let prop of required) {\n        if (!node.properties[prop] || node.properties[prop] === '') {\n          results.errors.push(\n            `Node \"${this.getNodeTitle(node.type)}\" missing required property: ${prop}`,\n          );\n        }\n      }\n    }\n\n    this.showValidationResults(results);\n    return results.errors.length === 0;\n  }\n\n  hasCircularDependencies() {\n    const visited = new Set();\n    const visiting = new Set();\n\n    const visit = (nodeId) => {\n      if (visiting.has(nodeId)) return true;\n      if (visited.has(nodeId)) return false;\n\n      visiting.add(nodeId);\n\n      for (let connection of this.connections.values()) {\n        if (connection.from === nodeId) {\n          if (visit(connection.to)) return true;\n        }\n      }\n\n      visiting.delete(nodeId);\n      visited.add(nodeId);\n      return false;\n    };\n\n    for (let nodeId of this.nodes.keys()) {\n      if (visit(nodeId)) return true;\n    }\n\n    return false;\n  }\n\n  getRequiredProperties(type) {\n    const required = {\n      'file-input': ['path'],\n      'url-input': ['url'],\n      'api-input': ['endpoint'],\n      transform: ['expression'],\n      filter: ['condition'],\n      'file-output': ['path'],\n      'api-output': ['endpoint'],\n      condition: ['expression'],\n    };\n    return required[type] || [];\n  }\n\n  showValidationResults(results) {\n    const panel = document.getElementById('validationTab');\n    const content = panel.querySelector('.validation-results') || panel;\n\n    let html = '<div class=\"validation-results\">';\n\n    if (results.errors.length > 0) {\n      html += '<div class=\"validation-section errors\">';\n      html += '<h4><i class=\"fas fa-exclamation-circle\"></i> Errors</h4>';\n      html += '<ul>';\n      results.errors.forEach((error) => {\n        html += `<li class=\"error\">${error}</li>`;\n      });\n      html += '</ul></div>';\n    }\n\n    if (results.warnings.length > 0) {\n      html += '<div class=\"validation-section warnings\">';\n      html += '<h4><i class=\"fas fa-exclamation-triangle\"></i> Warnings</h4>';\n      html += '<ul>';\n      results.warnings.forEach((warning) => {\n        html += `<li class=\"warning\">${warning}</li>`;\n      });\n      html += '</ul></div>';\n    }\n\n    if (results.info.length > 0) {\n      html += '<div class=\"validation-section info\">';\n      html += '<h4><i class=\"fas fa-info-circle\"></i> Information</h4>';\n      html += '<ul>';\n      results.info.forEach((info) => {\n        html += `<li class=\"info\">${info}</li>`;\n      });\n      html += '</ul></div>';\n    }\n\n    if (results.errors.length === 0 && results.warnings.length === 0) {\n      html += '<div class=\"validation-success\">';\n      html += '<i class=\"fas fa-check-circle\"></i> Workflow validation passed';\n      html += '</div>';\n    }\n\n    html += '</div>';\n    content.innerHTML = html;\n\n    // Switch to validation tab\n    this.switchTabToValidation();\n  }\n\n  async executeWorkflow() {\n    if (!(await this.validateWorkflow())) {\n      alert('Workflow validation failed. Please fix errors before executing.');\n      return;\n    }\n\n    this.isExecuting = true;\n    this.executionState.clear();\n\n    document.getElementById('executeWorkflow').disabled = true;\n    document.getElementById('stopWorkflow').disabled = false;\n\n    const executionLog = document.querySelector('#executionTab .execution-log');\n    executionLog.innerHTML = '';\n\n    try {\n      const startNodes = this.getStartNodes();\n      const executionPromises = startNodes.map((node) => this.executeNode(node));\n\n      await Promise.all(executionPromises);\n\n      this.logExecution('Workflow execution completed successfully', 'success');\n    } catch (error) {\n      this.logExecution(`Workflow execution failed: ${error.message}`, 'error');\n    } finally {\n      this.isExecuting = false;\n      document.getElementById('executeWorkflow').disabled = false;\n      document.getElementById('stopWorkflow').disabled = true;\n      this.draw();\n    }\n  }\n\n  getStartNodes() {\n    const hasInput = new Set();\n    for (let connection of this.connections.values()) {\n      hasInput.add(connection.to);\n    }\n\n    return Array.from(this.nodes.values()).filter((node) => !hasInput.has(node.id));\n  }\n\n  async executeNode(node) {\n    if (!this.isExecuting) return;\n\n    node.status = 'executing';\n    this.draw();\n\n    this.logExecution(`Executing node: ${this.getNodeTitle(node.type)}`, 'info');\n\n    try {\n      const result = await this.processNode(node);\n      node.status = 'completed';\n      this.executionState.set(node.id, result);\n\n      this.logExecution(`Node completed: ${this.getNodeTitle(node.type)}`, 'success');\n\n      // Execute connected nodes\n      const connectedNodes = this.getConnectedNodes(node.id);\n      for (let connectedNode of connectedNodes) {\n        await this.executeNode(connectedNode);\n      }\n    } catch (error) {\n      node.status = 'error';\n      this.logExecution(`Node failed: ${this.getNodeTitle(node.type)} - ${error.message}`, 'error');\n      throw error;\n    }\n  }\n\n  async processNode(node) {\n    // Simulate node processing\n    await new Promise((resolve) => setTimeout(resolve, 500 + Math.random() * 1000));\n\n    switch (node.type) {\n      case 'file-input':\n        return { type: 'file', path: node.properties.path };\n      case 'text-input':\n        return { type: 'text', value: node.properties.value };\n      case 'transform':\n        return { type: 'transformed', data: 'transformed_data' };\n      case 'ai-analyze':\n        return { type: 'analysis', confidence: 0.95, insights: [] };\n      default:\n        return { type: 'generic', processed: true };\n    }\n  }\n\n  getConnectedNodes(nodeId) {\n    const connected = [];\n    for (let connection of this.connections.values()) {\n      if (connection.from === nodeId) {\n        const node = this.nodes.get(connection.to);\n        if (node) connected.push(node);\n      }\n    }\n    return connected;\n  }\n\n  logExecution(message, type) {\n    const log = document.querySelector('#executionTab .execution-log');\n    const entry = document.createElement('div');\n    entry.className = `log-entry ${type}`;\n    entry.innerHTML = `\n            <span class=\"timestamp\">${new Date().toLocaleTimeString()}</span>\n            <span class=\"message\">${message}</span>\n        `;\n    log.appendChild(entry);\n    log.scrollTop = log.scrollHeight;\n  }\n\n  stopWorkflow() {\n    this.isExecuting = false;\n\n    // Reset all node statuses\n    for (let node of this.nodes.values()) {\n      if (node.status === 'executing') {\n        node.status = 'idle';\n      }\n    }\n\n    this.logExecution('Workflow execution stopped by user', 'warning');\n    this.draw();\n  }\n\n  saveWorkflow() {\n    const workflow = {\n      nodes: Array.from(this.nodes.values()),\n      connections: Array.from(this.connections.values()),\n      metadata: {\n        version: '1.0',\n        created: new Date().toISOString(),\n        name: prompt('Enter workflow name:') || 'Untitled Workflow',\n      },\n    };\n\n    const saved = JSON.parse(localStorage.getItem('claudeflow_workflows') || '[]');\n    saved.push(workflow);\n    localStorage.setItem('claudeflow_workflows', JSON.stringify(saved));\n\n    alert('Workflow saved successfully!');\n  }\n\n  loadWorkflow() {\n    const saved = JSON.parse(localStorage.getItem('claudeflow_workflows') || '[]');\n    if (saved.length === 0) {\n      alert('No saved workflows found');\n      return;\n    }\n\n    const names = saved.map((w, i) => `${i + 1}. ${w.metadata.name}`);\n    const choice = prompt(`Select workflow to load:\\n${names.join('\\n')}`);\n\n    if (choice) {\n      const index = parseInt(choice) - 1;\n      if (index >= 0 && index < saved.length) {\n        this.loadWorkflowData(saved[index]);\n      }\n    }\n  }\n\n  loadWorkflowData(workflow) {\n    this.nodes.clear();\n    this.connections.clear();\n\n    workflow.nodes.forEach((nodeData) => {\n      this.nodes.set(nodeData.id, { ...nodeData });\n    });\n\n    workflow.connections.forEach((connectionData) => {\n      this.connections.set(connectionData.id, { ...connectionData });\n    });\n\n    this.draw();\n  }\n\n  exportWorkflow() {\n    const workflow = {\n      nodes: Array.from(this.nodes.values()),\n      connections: Array.from(this.connections.values()),\n      metadata: {\n        version: '1.0',\n        exported: new Date().toISOString(),\n        name: prompt('Enter workflow name:') || 'Exported Workflow',\n      },\n    };\n\n    const blob = new Blob([JSON.stringify(workflow, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${workflow.metadata.name}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  importWorkflow() {\n    document.getElementById('importFile').click();\n  }\n\n  handleFileImport(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try {\n        const workflow = JSON.parse(event.target.result);\n        this.loadWorkflowData(workflow);\n        alert('Workflow imported successfully!');\n      } catch (error) {\n        alert('Error importing workflow: ' + error.message);\n      }\n    };\n    reader.readAsText(file);\n  }\n\n  loadTemplates() {\n    const templates = [\n      {\n        name: 'Data Processing Pipeline',\n        description: 'Process files through transformation and analysis',\n        nodes: [\n          { type: 'file-input', x: 50, y: 100 },\n          { type: 'transform', x: 250, y: 100 },\n          { type: 'ai-analyze', x: 450, y: 100 },\n          { type: 'file-output', x: 650, y: 100 },\n        ],\n      },\n      {\n        name: 'Content Generation',\n        description: 'Generate and process content using AI',\n        nodes: [\n          { type: 'text-input', x: 50, y: 100 },\n          { type: 'ai-generate', x: 250, y: 100 },\n          { type: 'ai-summarize', x: 450, y: 100 },\n          { type: 'display', x: 650, y: 100 },\n        ],\n      },\n      {\n        name: 'API Integration',\n        description: 'Fetch, process, and send data via APIs',\n        nodes: [\n          { type: 'api-input', x: 50, y: 100 },\n          { type: 'filter', x: 250, y: 100 },\n          { type: 'transform', x: 450, y: 100 },\n          { type: 'api-output', x: 650, y: 100 },\n        ],\n      },\n    ];\n\n    const gallery = document.querySelector('.template-gallery');\n    gallery.innerHTML = templates\n      .map(\n        (template) => `\n            <div class=\"template-card\" data-template=\"${template.name}\">\n                <h4>${template.name}</h4>\n                <p>${template.description}</p>\n                <button class=\"btn btn-primary load-template\">Load Template</button>\n            </div>\n        `,\n      )\n      .join('');\n\n    // Add event listeners\n    gallery.querySelectorAll('.load-template').forEach((btn) => {\n      btn.addEventListener('click', (e) => {\n        const templateName = e.target.closest('.template-card').dataset.template;\n        const template = templates.find((t) => t.name === templateName);\n        if (template) {\n          this.loadTemplate(template);\n        }\n      });\n    });\n  }\n\n  loadTemplate(template) {\n    this.clearCanvas();\n\n    const nodeMap = new Map();\n\n    // Create nodes\n    template.nodes.forEach((nodeData, index) => {\n      const node = this.createNode(nodeData.type, nodeData.x, nodeData.y);\n      nodeMap.set(index, node);\n    });\n\n    // Create connections (if defined in template)\n    if (template.connections) {\n      template.connections.forEach((conn) => {\n        const fromNode = nodeMap.get(conn.from);\n        const toNode = nodeMap.get(conn.to);\n        if (fromNode && toNode) {\n          this.createConnection(\n            { node: fromNode, type: 'output', index: conn.fromIndex || 0 },\n            { node: toNode, type: 'input', index: conn.toIndex || 0 },\n          );\n        }\n      });\n    }\n\n    this.draw();\n  }\n\n  filterPalette(e) {\n    const filter = e.target.value.toLowerCase();\n    const items = document.querySelectorAll('.palette-item');\n\n    items.forEach((item) => {\n      const text = item.textContent.toLowerCase();\n      item.style.display = text.includes(filter) ? 'block' : 'none';\n    });\n  }\n\n  switchTab(e) {\n    const targetTab = e.target.dataset.tab;\n\n    // Update button states\n    document.querySelectorAll('.tab-button').forEach((btn) => {\n      btn.classList.remove('active');\n    });\n    e.target.classList.add('active');\n\n    // Update tab content\n    document.querySelectorAll('.tab-content').forEach((content) => {\n      content.classList.remove('active');\n    });\n    document.getElementById(targetTab + 'Tab').classList.add('active');\n  }\n\n  switchTabToValidation() {\n    document.querySelectorAll('.tab-button').forEach((btn) => {\n      btn.classList.remove('active');\n    });\n    document.querySelector('[data-tab=\"validation\"]').classList.add('active');\n\n    document.querySelectorAll('.tab-content').forEach((content) => {\n      content.classList.remove('active');\n    });\n    document.getElementById('validationTab').classList.add('active');\n  }\n\n  setZoom(newZoom) {\n    this.zoom = Math.max(0.1, Math.min(3, newZoom));\n    this.draw();\n  }\n\n  clearCanvas() {\n    if (confirm('Are you sure you want to clear the canvas?')) {\n      this.nodes.clear();\n      this.connections.clear();\n      this.selectedNode = null;\n      this.draw();\n    }\n  }\n\n  showContextMenu(x, y, node) {\n    const menu = document.createElement('div');\n    menu.className = 'context-menu';\n    menu.style.left = x + 'px';\n    menu.style.top = y + 'px';\n    menu.innerHTML = `\n            <div class=\"context-menu-item\" data-action=\"duplicate\">\n                <i class=\"fas fa-copy\"></i> Duplicate\n            </div>\n            <div class=\"context-menu-item\" data-action=\"delete\">\n                <i class=\"fas fa-trash\"></i> Delete\n            </div>\n            <div class=\"context-menu-item\" data-action=\"properties\">\n                <i class=\"fas fa-cog\"></i> Properties\n            </div>\n        `;\n\n    document.body.appendChild(menu);\n\n    menu.addEventListener('click', (e) => {\n      const action = e.target.dataset.action;\n      switch (action) {\n        case 'duplicate':\n          this.duplicateNode(node);\n          break;\n        case 'delete':\n          this.deleteNode(node);\n          break;\n        case 'properties':\n          this.showProperties(node);\n          break;\n      }\n      document.body.removeChild(menu);\n    });\n\n    // Remove menu when clicking elsewhere\n    setTimeout(() => {\n      document.addEventListener('click', function removeMenu() {\n        if (menu.parentNode) {\n          document.body.removeChild(menu);\n        }\n        document.removeEventListener('click', removeMenu);\n      });\n    }, 100);\n  }\n\n  duplicateNode(node) {\n    const newNode = this.createNode(node.type, node.x + 50, node.y + 50);\n    newNode.properties = { ...node.properties };\n    this.draw();\n  }\n\n  deleteNode(node) {\n    // Remove connections\n    const connectionsToRemove = [];\n    for (let [id, connection] of this.connections) {\n      if (connection.from === node.id || connection.to === node.id) {\n        connectionsToRemove.push(id);\n      }\n    }\n    connectionsToRemove.forEach((id) => this.connections.delete(id));\n\n    // Remove node\n    this.nodes.delete(node.id);\n\n    if (this.selectedNode === node) {\n      this.selectedNode = null;\n      this.showProperties(null);\n    }\n\n    this.draw();\n  }\n\n  handleResize() {\n    this.setupCanvas();\n  }\n}\n\n// Initialize the workflow designer when the page loads\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (document.getElementById('workflowDesigner')) {\n    window.workflowDesigner = new WorkflowDesigner('workflowDesigner');\n  }\n});\n\n// Export for external use\nwindow.WorkflowDesigner = WorkflowDesigner;\n"],"names":["WorkflowDesigner","containerId","container","document","getElementById","canvas","ctx","nodes","Map","connections","selectedNode","draggedNode","dragOffset","x","y","connectionStart","executionState","isExecuting","zoom","pan","init","createUI","setupEventListeners","loadTemplates","setupNodePalette","innerHTML","getContext","setupCanvas","rect","getBoundingClientRect","dpr","window","devicePixelRatio","width","height","scale","style","draw","addEventListener","handleMouseDown","bind","handleMouseMove","handleMouseUp","handleWheel","handleContextMenu","saveWorkflow","loadWorkflow","exportWorkflow","importWorkflow","handleFileImport","validateWorkflow","executeWorkflow","stopWorkflow","setZoom","clearCanvas","filterPalette","querySelectorAll","forEach","button","switchTab","handleResize","nodeTypes","input","type","name","icon","processing","output","control","ai","Object","entries","category","querySelector","node","item","createElement","className","draggable","dataset","nodeType","e","dataTransfer","setData","effectAllowed","appendChild","preventDefault","dropEffect","getData","clientX","left","clientY","top","createNode","nodeId","Date","now","Math","random","toString","substr","id","inputs","getNodeInputs","outputs","getNodeOutputs","properties","getNodeProperties","status","set","showProperties","transform","filter","aggregate","sort","display","notification","condition","loop","delay","parallel","path","format","value","multiline","url","method","headers","endpoint","body","expression","language","operation","field","order","title","duration","unit","maxConcurrency","model","temperature","maxTokens","categories","length","getNodeAt","connectionPoint","getConnectionPointAt","tempConnection","connectionEnd","createConnection","wheelDelta","deltaY","newZoom","max","min","showContextMenu","values","inputPoints","getInputPoints","i","point","abs","index","outputPoints","getOutputPoints","points","inputCount","push","outputCount","start","end","connectionId","from","fromIndex","to","toIndex","clearRect","save","translate","drawGrid","drawConnections","drawTempConnection","drawNodes","restore","gridSize","canvasWidth","canvasHeight","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","drawNode","isSelected","hasError","fillStyle","fillRect","strokeRect","font","textAlign","fillText","getNodeTitle","arc","PI","fill","drawConnectionPoints","connection","fromNode","get","toNode","fromPoints","toPoints","fromPoint","toPoint","drawConnection","midX","bezierCurveTo","angle","atan2","arrowLength","cos","sin","startPoint","setLineDash","titles","panel","html","key","formatPropertyLabel","renderPropertyInput","propertyKey","target","property","charAt","toUpperCase","slice","replace","inputId","includes","results","errors","warnings","info","connectedNodes","Set","add","has","size","hasCircularDependencies","required","getRequiredProperties","prop","showValidationResults","visited","visiting","visit","delete","keys","content","error","warning","switchTabToValidation","alert","clear","disabled","executionLog","startNodes","getStartNodes","executionPromises","map","executeNode","Promise","all","logExecution","message","hasInput","Array","result","processNode","getConnectedNodes","connectedNode","resolve","setTimeout","data","confidence","insights","processed","connected","log","entry","toLocaleTimeString","scrollTop","scrollHeight","workflow","metadata","version","created","toISOString","prompt","saved","JSON","parse","localStorage","getItem","setItem","stringify","names","w","choice","join","parseInt","loadWorkflowData","nodeData","connectionData","exported","blob","Blob","URL","createObjectURL","a","href","download","click","revokeObjectURL","file","files","reader","FileReader","onload","event","readAsText","templates","description","gallery","template","btn","templateName","closest","find","t","loadTemplate","nodeMap","conn","toLowerCase","items","text","textContent","targetTab","tab","classList","remove","confirm","menu","action","duplicateNode","deleteNode","removeChild","removeMenu","parentNode","removeEventListener","newNode","connectionsToRemove","workflowDesigner"],"mappings":"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"}