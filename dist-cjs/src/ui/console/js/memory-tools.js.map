{"version":3,"sources":["../../../../../src/ui/console/js/memory-tools.js"],"sourcesContent":["/**\n * Memory & Persistence Tools Panel\n * Provides interface for memory management and persistence operations\n */\n\nimport { EventEmitter } from './event-emitter.js';\n\nexport class MemoryToolsPanel extends EventEmitter {\n  constructor(wsClient) {\n    super();\n    this.wsClient = wsClient;\n    this.isInitialized = false;\n    this.backupProgress = new Map();\n    this.memoryStats = new Map();\n    this.activeOperations = new Set();\n    this.cacheMetrics = null;\n\n    // DOM elements\n    this.elements = {};\n\n    // Memory tools configuration\n    this.memoryTools = {\n      // Core memory tools\n      memory_backup: { name: 'Memory Backup', category: 'backup', icon: 'üíæ' },\n      memory_restore: { name: 'Memory Restore', category: 'backup', icon: 'üì•' },\n      memory_compress: { name: 'Data Compression', category: 'optimization', icon: 'üóúÔ∏è' },\n      memory_sync: { name: 'Cross-Instance Sync', category: 'sync', icon: 'üîÑ' },\n\n      // Cache management\n      cache_manage: { name: 'Cache Management', category: 'cache', icon: 'üóÇÔ∏è' },\n      cache_optimize: { name: 'Cache Optimization', category: 'cache', icon: '‚ö°' },\n\n      // State management\n      state_snapshot: { name: 'State Snapshot', category: 'state', icon: 'üì∏' },\n      context_restore: { name: 'Context Recovery', category: 'state', icon: 'üîÑ' },\n\n      // Analytics and persistence\n      memory_analytics: { name: 'Memory Analytics', category: 'analytics', icon: 'üìä' },\n      memory_persist: { name: 'Session Persistence', category: 'persistence', icon: 'üîê' },\n      memory_namespace: { name: 'Namespace Manager', category: 'management', icon: 'üè∑Ô∏è' },\n\n      // Advanced features\n      memory_defrag: { name: 'Memory Defragmentation', category: 'optimization', icon: 'üßπ' },\n      memory_encrypt: { name: 'Memory Encryption', category: 'security', icon: 'üîí' },\n      memory_replicate: { name: 'Memory Replication', category: 'sync', icon: 'üìã' },\n    };\n\n    this.categories = {\n      backup: { name: 'Backup & Restore', color: '#007acc' },\n      optimization: { name: 'Optimization', color: '#ff6b6b' },\n      sync: { name: 'Synchronization', color: '#4ecdc4' },\n      cache: { name: 'Cache Management', color: '#45b7d1' },\n      state: { name: 'State Management', color: '#96ceb4' },\n      analytics: { name: 'Analytics', color: '#feca57' },\n      persistence: { name: 'Persistence', color: '#ff9ff3' },\n      management: { name: 'Management', color: '#a8e6cf' },\n      security: { name: 'Security', color: '#ff8b94' },\n    };\n  }\n\n  /**\n   * Initialize the memory tools panel\n   */\n  async init() {\n    if (this.isInitialized) return;\n\n    try {\n      await this.createPanelUI();\n      this.setupEventListeners();\n      this.setupWebSocketHandlers();\n      await this.loadInitialData();\n\n      this.isInitialized = true;\n      this.emit('initialized');\n    } catch (error) {\n      console.error('Failed to initialize memory tools panel:', error);\n      this.emit('error', error);\n    }\n  }\n\n  /**\n   * Create the memory tools panel UI\n   */\n  async createPanelUI() {\n    // Create main panel container\n    const panelContainer = document.createElement('div');\n    panelContainer.id = 'memoryToolsPanel';\n    panelContainer.className = 'memory-panel hidden';\n\n    // Create panel header\n    const header = this.createPanelHeader();\n    panelContainer.appendChild(header);\n\n    // Create main content area\n    const content = document.createElement('div');\n    content.className = 'memory-content';\n\n    // Create tabbed interface\n    const tabs = this.createTabs();\n    content.appendChild(tabs);\n\n    // Create tab content areas\n    const tabContents = this.createTabContents();\n    content.appendChild(tabContents);\n\n    panelContainer.appendChild(content);\n\n    // Insert into DOM\n    const consoleMain = document.querySelector('.console-main');\n    if (consoleMain) {\n      consoleMain.appendChild(panelContainer);\n    }\n\n    // Store DOM elements\n    this.elements.panel = panelContainer;\n    this.elements.header = header;\n    this.elements.content = content;\n    this.elements.tabs = tabs;\n    this.elements.tabContents = tabContents;\n\n    // Add toggle button to main header\n    this.addToggleButton();\n\n    // Get additional DOM references\n    this.elements.memoryMetrics = panelContainer.querySelector('#memoryMetrics');\n    this.elements.backupList = panelContainer.querySelector('#backupList');\n    this.elements.operationProgress = panelContainer.querySelector('#operationProgress');\n    this.elements.cacheStats = panelContainer.querySelector('#cacheStats');\n    this.elements.analyticsChart = panelContainer.querySelector('#analyticsChart');\n  }\n\n  /**\n   * Create panel header\n   */\n  createPanelHeader() {\n    const header = document.createElement('div');\n    header.className = 'memory-header';\n\n    header.innerHTML = `\n      <div class=\"memory-header-left\">\n        <h2 class=\"memory-title\">\n          <span class=\"memory-icon\">üß†</span>\n          Memory & Persistence\n        </h2>\n        <div class=\"memory-status\" id=\"memoryStatus\">\n          <span class=\"status-indicator\" id=\"memoryStatusIndicator\"></span>\n          <span class=\"status-text\" id=\"memoryStatusText\">Ready</span>\n        </div>\n      </div>\n      <div class=\"memory-header-right\">\n        <button class=\"memory-button\" id=\"refreshMemoryData\" aria-label=\"Refresh Data\">\n          <span class=\"icon\">üîÑ</span>\n          Refresh\n        </button>\n        <button class=\"memory-button\" id=\"exportMemoryData\" aria-label=\"Export Data\">\n          <span class=\"icon\">üì•</span>\n          Export\n        </button>\n        <button class=\"memory-button close-button\" id=\"closeMemoryPanel\" aria-label=\"Close Panel\">\n          <span class=\"icon\">√ó</span>\n        </button>\n      </div>\n    `;\n\n    return header;\n  }\n\n  /**\n   * Create tab navigation\n   */\n  createTabs() {\n    const tabs = document.createElement('div');\n    tabs.className = 'memory-tabs';\n\n    const tabItems = [\n      { id: 'tools', name: 'Tools', icon: 'üõ†Ô∏è' },\n      { id: 'analytics', name: 'Analytics', icon: 'üìä' },\n      { id: 'management', name: 'Management', icon: '‚öôÔ∏è' },\n    ];\n\n    tabItems.forEach((tab, index) => {\n      const tabElement = document.createElement('button');\n      tabElement.className = `memory-tab ${index === 0 ? 'active' : ''}`;\n      tabElement.setAttribute('data-tab', tab.id);\n      tabElement.innerHTML = `\n        <span class=\"tab-icon\">${tab.icon}</span>\n        <span class=\"tab-name\">${tab.name}</span>\n      `;\n      tabs.appendChild(tabElement);\n    });\n\n    return tabs;\n  }\n\n  /**\n   * Create tab content areas\n   */\n  createTabContents() {\n    const tabContents = document.createElement('div');\n    tabContents.className = 'memory-tab-contents';\n\n    // Tools tab\n    const toolsTab = this.createToolsTab();\n    tabContents.appendChild(toolsTab);\n\n    // Analytics tab\n    const analyticsTab = this.createAnalyticsTab();\n    tabContents.appendChild(analyticsTab);\n\n    // Management tab\n    const managementTab = this.createManagementTab();\n    tabContents.appendChild(managementTab);\n\n    return tabContents;\n  }\n\n  /**\n   * Create tools tab content\n   */\n  createToolsTab() {\n    const toolsTab = document.createElement('div');\n    toolsTab.className = 'memory-tab-content active';\n    toolsTab.setAttribute('data-tab', 'tools');\n\n    // Create category sections\n    Object.entries(this.categories).forEach(([categoryId, category]) => {\n      const categorySection = document.createElement('div');\n      categorySection.className = 'memory-category';\n\n      const categoryHeader = document.createElement('h3');\n      categoryHeader.className = 'memory-category-header';\n      categoryHeader.style.borderLeftColor = category.color;\n      categoryHeader.innerHTML = `\n        <span class=\"category-name\">${category.name}</span>\n        <span class=\"category-count\" id=\"categoryCount-${categoryId}\">0</span>\n      `;\n\n      const categoryGrid = document.createElement('div');\n      categoryGrid.className = 'memory-tools-grid';\n      categoryGrid.id = `categoryGrid-${categoryId}`;\n\n      categorySection.appendChild(categoryHeader);\n      categorySection.appendChild(categoryGrid);\n      toolsTab.appendChild(categorySection);\n\n      // Add tools to category\n      this.populateToolsGrid(categoryGrid, categoryId);\n    });\n\n    return toolsTab;\n  }\n\n  /**\n   * Populate tools grid for a category\n   */\n  populateToolsGrid(grid, categoryId) {\n    const toolsInCategory = Object.entries(this.memoryTools).filter(\n      ([, tool]) => tool.category === categoryId,\n    );\n\n    toolsInCategory.forEach(([toolId, tool]) => {\n      const toolCard = document.createElement('div');\n      toolCard.className = 'memory-tool-card';\n      toolCard.setAttribute('data-tool', toolId);\n\n      toolCard.innerHTML = `\n        <div class=\"tool-icon\">${tool.icon}</div>\n        <div class=\"tool-name\">${tool.name}</div>\n        <div class=\"tool-actions\">\n          <button class=\"tool-action-btn\" data-action=\"execute\" data-tool=\"${toolId}\" title=\"Execute\">\n            <span>‚ñ∂Ô∏è</span>\n          </button>\n          <button class=\"tool-action-btn\" data-action=\"configure\" data-tool=\"${toolId}\" title=\"Configure\">\n            <span>‚öôÔ∏è</span>\n          </button>\n        </div>\n      `;\n\n      grid.appendChild(toolCard);\n    });\n\n    // Update category count\n    const countElement = document.getElementById(`categoryCount-${categoryId}`);\n    if (countElement) {\n      countElement.textContent = toolsInCategory.length;\n    }\n  }\n\n  /**\n   * Create analytics tab content\n   */\n  createAnalyticsTab() {\n    const analyticsTab = document.createElement('div');\n    analyticsTab.className = 'memory-tab-content';\n    analyticsTab.setAttribute('data-tab', 'analytics');\n\n    analyticsTab.innerHTML = `\n      <div class=\"memory-section\">\n        <h3>Memory Usage Analytics</h3>\n        <div class=\"analytics-metrics\" id=\"memoryMetrics\">\n          <div class=\"metric-cards\">\n            <div class=\"metric-card\">\n              <div class=\"metric-icon\">üíæ</div>\n              <div class=\"metric-content\">\n                <div class=\"metric-label\">Total Memory</div>\n                <div class=\"metric-value\" id=\"totalMemory\">-- MB</div>\n              </div>\n            </div>\n            <div class=\"metric-card\">\n              <div class=\"metric-icon\">‚ö°</div>\n              <div class=\"metric-content\">\n                <div class=\"metric-label\">Active Memory</div>\n                <div class=\"metric-value\" id=\"activeMemory\">-- MB</div>\n              </div>\n            </div>\n            <div class=\"metric-card\">\n              <div class=\"metric-icon\">üìä</div>\n              <div class=\"metric-content\">\n                <div class=\"metric-label\">Memory Efficiency</div>\n                <div class=\"metric-value\" id=\"memoryEfficiency\">--%</div>\n              </div>\n            </div>\n            <div class=\"metric-card\">\n              <div class=\"metric-icon\">üóÇÔ∏è</div>\n              <div class=\"metric-content\">\n                <div class=\"metric-label\">Cache Hit Rate</div>\n                <div class=\"metric-value\" id=\"cacheHitRate\">--%</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"memory-section\">\n        <h3>Memory Operations History</h3>\n        <div class=\"operations-timeline\" id=\"operationsTimeline\">\n          <div class=\"timeline-placeholder\">No operations recorded</div>\n        </div>\n      </div>\n      \n      <div class=\"memory-section\">\n        <h3>Performance Insights</h3>\n        <div class=\"insights-container\" id=\"performanceInsights\">\n          <div class=\"insights-placeholder\">Run analytics to see insights</div>\n        </div>\n      </div>\n    `;\n\n    return analyticsTab;\n  }\n\n  /**\n   * Create management tab content\n   */\n  createManagementTab() {\n    const managementTab = document.createElement('div');\n    managementTab.className = 'memory-tab-content';\n    managementTab.setAttribute('data-tab', 'management');\n\n    managementTab.innerHTML = `\n      <div class=\"memory-section\">\n        <div class=\"section-header\">\n          <h3>Backup Management</h3>\n          <div class=\"section-actions\">\n            <button class=\"memory-button\" id=\"createBackup\">\n              <span class=\"icon\">üíæ</span>\n              Create Backup\n            </button>\n            <button class=\"memory-button\" id=\"scheduleBackup\">\n              <span class=\"icon\">‚è∞</span>\n              Schedule Backup\n            </button>\n          </div>\n        </div>\n        <div class=\"backups-list\" id=\"backupList\">\n          <div class=\"backups-placeholder\">No backups available</div>\n        </div>\n      </div>\n      \n      <div class=\"memory-section\">\n        <div class=\"section-header\">\n          <h3>Cache Management</h3>\n          <div class=\"section-actions\">\n            <button class=\"memory-button\" id=\"clearCache\">\n              <span class=\"icon\">üóëÔ∏è</span>\n              Clear Cache\n            </button>\n            <button class=\"memory-button\" id=\"optimizeCache\">\n              <span class=\"icon\">‚ö°</span>\n              Optimize Cache\n            </button>\n          </div>\n        </div>\n        <div class=\"cache-stats\" id=\"cacheStats\">\n          <div class=\"cache-metrics\">\n            <div class=\"cache-metric\">\n              <span class=\"metric-label\">Cache Size:</span>\n              <span class=\"metric-value\" id=\"cacheSize\">-- MB</span>\n            </div>\n            <div class=\"cache-metric\">\n              <span class=\"metric-label\">Hit Rate:</span>\n              <span class=\"metric-value\" id=\"cacheHitRate2\">--%</span>\n            </div>\n            <div class=\"cache-metric\">\n              <span class=\"metric-label\">Entries:</span>\n              <span class=\"metric-value\" id=\"cacheEntries\">--</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"memory-section\">\n        <div class=\"section-header\">\n          <h3>Namespace Management</h3>\n          <div class=\"section-actions\">\n            <button class=\"memory-button\" id=\"createNamespace\">\n              <span class=\"icon\">‚ûï</span>\n              Create Namespace\n            </button>\n            <button class=\"memory-button\" id=\"cleanupNamespaces\">\n              <span class=\"icon\">üßπ</span>\n              Cleanup\n            </button>\n          </div>\n        </div>\n        <div class=\"namespaces-list\" id=\"namespacesList\">\n          <div class=\"namespace-item\">\n            <div class=\"namespace-info\">\n              <div class=\"namespace-name\">default</div>\n              <div class=\"namespace-size\">12.3 MB</div>\n            </div>\n            <div class=\"namespace-actions\">\n              <button class=\"namespace-action-btn\" data-action=\"export\" title=\"Export\">üì•</button>\n              <button class=\"namespace-action-btn\" data-action=\"compress\" title=\"Compress\">üóúÔ∏è</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    return managementTab;\n  }\n\n  /**\n   * Add toggle button to main header\n   */\n  addToggleButton() {\n    const headerRight = document.querySelector('.header-right');\n    if (headerRight) {\n      const toggleButton = document.createElement('button');\n      toggleButton.className = 'header-button';\n      toggleButton.id = 'memoryToggle';\n      toggleButton.setAttribute('aria-label', 'Toggle Memory Tools');\n      toggleButton.innerHTML = `\n        <span class=\"icon\">üß†</span>\n        Memory\n      `;\n\n      // Insert before settings button\n      const settingsButton = document.getElementById('settingsToggle');\n      if (settingsButton) {\n        headerRight.insertBefore(toggleButton, settingsButton);\n      } else {\n        headerRight.appendChild(toggleButton);\n      }\n    }\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    // Panel toggle\n    const toggleButton = document.getElementById('memoryToggle');\n    if (toggleButton) {\n      toggleButton.addEventListener('click', () => {\n        this.togglePanel();\n      });\n    }\n\n    // Close panel\n    const closeButton = document.getElementById('closeMemoryPanel');\n    if (closeButton) {\n      closeButton.addEventListener('click', () => {\n        this.hidePanel();\n      });\n    }\n\n    // Refresh and export\n    const refreshBtn = document.getElementById('refreshMemoryData');\n    if (refreshBtn) {\n      refreshBtn.addEventListener('click', () => this.refreshData());\n    }\n\n    const exportBtn = document.getElementById('exportMemoryData');\n    if (exportBtn) {\n      exportBtn.addEventListener('click', () => this.exportData());\n    }\n\n    // Tab navigation\n    const tabButtons = document.querySelectorAll('.memory-tab');\n    tabButtons.forEach((button) => {\n      button.addEventListener('click', () => {\n        const tabId = button.getAttribute('data-tab');\n        this.switchTab(tabId);\n      });\n    });\n\n    // Tool execution\n    this.elements.panel.addEventListener('click', (e) => {\n      if (e.target.classList.contains('tool-action-btn')) {\n        const action = e.target.dataset.action;\n        const toolName = e.target.dataset.tool;\n\n        if (action === 'execute') {\n          this.executeTool(toolName);\n        } else if (action === 'configure') {\n          this.configureTool(toolName);\n        }\n      }\n    });\n\n    // Management actions\n    this.setupManagementActions();\n  }\n\n  /**\n   * Setup management action listeners\n   */\n  setupManagementActions() {\n    // Backup actions\n    const createBackupBtn = document.getElementById('createBackup');\n    if (createBackupBtn) {\n      createBackupBtn.addEventListener('click', () => this.createBackup());\n    }\n\n    const scheduleBackupBtn = document.getElementById('scheduleBackup');\n    if (scheduleBackupBtn) {\n      scheduleBackupBtn.addEventListener('click', () => this.scheduleBackup());\n    }\n\n    // Cache actions\n    const clearCacheBtn = document.getElementById('clearCache');\n    if (clearCacheBtn) {\n      clearCacheBtn.addEventListener('click', () => this.clearCache());\n    }\n\n    const optimizeCacheBtn = document.getElementById('optimizeCache');\n    if (optimizeCacheBtn) {\n      optimizeCacheBtn.addEventListener('click', () => this.optimizeCache());\n    }\n\n    // Namespace actions\n    const createNamespaceBtn = document.getElementById('createNamespace');\n    if (createNamespaceBtn) {\n      createNamespaceBtn.addEventListener('click', () => this.createNamespace());\n    }\n\n    const cleanupNamespacesBtn = document.getElementById('cleanupNamespaces');\n    if (cleanupNamespacesBtn) {\n      cleanupNamespacesBtn.addEventListener('click', () => this.cleanupNamespaces());\n    }\n  }\n\n  /**\n   * Setup WebSocket handlers\n   */\n  setupWebSocketHandlers() {\n    if (this.wsClient) {\n      this.wsClient.on('memory_backup_progress', (data) => {\n        this.updateBackupProgress(data);\n      });\n\n      this.wsClient.on('memory_operation_complete', (data) => {\n        this.handleOperationComplete(data);\n      });\n\n      this.wsClient.on('memory_metrics_update', (data) => {\n        this.updateMemoryMetrics(data);\n      });\n\n      this.wsClient.on('cache_stats_update', (data) => {\n        this.updateCacheStats(data);\n      });\n    }\n  }\n\n  /**\n   * Load initial data\n   */\n  async loadInitialData() {\n    try {\n      // Load memory status\n      await this.checkMemoryStatus();\n\n      // Load memory metrics\n      await this.loadMemoryMetrics();\n\n      // Load backup list\n      await this.loadBackupList();\n\n      // Load cache statistics\n      await this.loadCacheStats();\n    } catch (error) {\n      console.error('Failed to load initial memory data:', error);\n    }\n  }\n\n  /**\n   * Execute a memory tool\n   */\n  async executeTool(toolId) {\n    try {\n      const tool = this.memoryTools[toolId];\n      if (!tool) {\n        console.error('Unknown tool:', toolId);\n        return;\n      }\n\n      this.updateStatus(`Executing ${tool.name}...`, 'processing');\n      this.activeOperations.add(toolId);\n\n      // Send notification to coordination system\n      await this.sendCoordinationNotification(`Starting ${tool.name}`);\n\n      // Execute the tool\n      const result = await this.callMemoryTool(toolId);\n      this.handleToolResult(toolId, result);\n\n      // Notify completion\n      await this.sendCoordinationNotification(`${tool.name} completed successfully`);\n\n      this.emit('tool_executed', { toolId });\n    } catch (error) {\n      this.updateStatus('Tool execution failed', 'error');\n      this.emit('tool_error', { toolId, error });\n      console.error(`Memory tool execution failed (${toolId}):`, error);\n    } finally {\n      this.activeOperations.delete(toolId);\n    }\n  }\n\n  /**\n   * Configure a memory tool\n   */\n  configureTool(toolId) {\n    const tool = this.memoryTools[toolId];\n    if (tool) {\n      // Show configuration modal for the tool\n      this.showToolConfiguration(toolId);\n    }\n  }\n\n  /**\n   * Show tool configuration dialog\n   */\n  showToolConfiguration(toolId) {\n    const tool = this.memoryTools[toolId];\n    if (!tool) return;\n\n    // Create configuration modal\n    const modal = document.createElement('div');\n    modal.className = 'tool-config-modal';\n    modal.innerHTML = `\n      <div class=\"modal-overlay\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h3>Configure ${tool.name}</h3>\n            <button class=\"modal-close\" onclick=\"this.closest('.tool-config-modal').remove()\">√ó</button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"config-form\">\n              ${this.getToolConfigForm(toolId)}\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"memory-button secondary\" onclick=\"this.closest('.tool-config-modal').remove()\">Cancel</button>\n            <button class=\"memory-button primary\" onclick=\"this.closest('.tool-config-modal').remove()\">Save</button>\n          </div>\n        </div>\n      </div>\n    `;\n\n    document.body.appendChild(modal);\n  }\n\n  /**\n   * Get configuration form for a tool\n   */\n  getToolConfigForm(toolId) {\n    const commonConfig = `\n      <div class=\"config-row\">\n        <label>Priority:</label>\n        <select>\n          <option value=\"high\">High</option>\n          <option value=\"medium\" selected>Medium</option>\n          <option value=\"low\">Low</option>\n        </select>\n      </div>\n      <div class=\"config-row\">\n        <label>Auto-execute:</label>\n        <input type=\"checkbox\" />\n      </div>\n    `;\n\n    const toolSpecificConfig = {\n      memory_backup: `\n        <div class=\"config-row\">\n          <label>Backup Location:</label>\n          <input type=\"text\" placeholder=\"Enter backup path\" />\n        </div>\n        <div class=\"config-row\">\n          <label>Compression:</label>\n          <select>\n            <option value=\"gzip\">GZip</option>\n            <option value=\"lz4\">LZ4</option>\n            <option value=\"none\">None</option>\n          </select>\n        </div>\n      `,\n      memory_compress: `\n        <div class=\"config-row\">\n          <label>Compression Algorithm:</label>\n          <select>\n            <option value=\"gzip\">GZip</option>\n            <option value=\"lz4\">LZ4</option>\n            <option value=\"zstd\">Zstandard</option>\n          </select>\n        </div>\n        <div class=\"config-row\">\n          <label>Compression Level:</label>\n          <input type=\"range\" min=\"1\" max=\"9\" value=\"6\" />\n        </div>\n      `,\n      cache_manage: `\n        <div class=\"config-row\">\n          <label>Cache Size Limit:</label>\n          <input type=\"number\" placeholder=\"MB\" />\n        </div>\n        <div class=\"config-row\">\n          <label>TTL (seconds):</label>\n          <input type=\"number\" value=\"3600\" />\n        </div>\n      `,\n    };\n\n    return commonConfig + (toolSpecificConfig[toolId] || '');\n  }\n\n  /**\n   * Call memory tool via WebSocket or MCP\n   */\n  async callMemoryTool(toolId, params = {}) {\n    // Try WebSocket first, then MCP, then fallback to mock\n    if (this.wsClient && this.wsClient.getStatus() === 'connected') {\n      try {\n        const response = await this.wsClient.sendRequest({\n          type: 'tool_execute',\n          tool: `mcp__ruv-swarm__${toolId}`,\n          params: params,\n        });\n        return response;\n      } catch (error) {\n        console.warn(`WebSocket failed for ${toolId}, trying MCP...`);\n      }\n    }\n\n    // Try MCP tools\n    try {\n      const mcpResponse = await this.callMCPTool(toolId, params);\n      return mcpResponse;\n    } catch (error) {\n      console.warn(`MCP failed for ${toolId}, using mock data:`, error);\n      return this.getMockResponse(toolId, params);\n    }\n  }\n\n  /**\n   * Call MCP tool for memory operations\n   */\n  async callMCPTool(toolId, params = {}) {\n    // Map memory tools to MCP functions\n    const mcpMapping = {\n      memory_backup: 'memory_usage',\n      memory_restore: 'memory_usage',\n      memory_sync: 'memory_usage',\n      memory_analytics: 'memory_usage',\n      cache_manage: 'memory_usage',\n      state_snapshot: 'memory_usage',\n    };\n\n    const mcpFunction = mcpMapping[toolId];\n    if (!mcpFunction) {\n      throw new Error(`No MCP mapping for ${toolId}`);\n    }\n\n    // This would be implemented when MCP tools are available\n    return { success: true, data: {}, mock: true };\n  }\n\n  /**\n   * Get mock response for testing\n   */\n  getMockResponse(toolId, params) {\n    const timestamp = new Date().toISOString();\n\n    switch (toolId) {\n      case 'memory_backup':\n        return {\n          success: true,\n          backupId: `backup-${Date.now()}`,\n          size: '45.2 MB',\n          timestamp,\n          location: '/backups/memory-backup.gz',\n        };\n\n      case 'memory_restore':\n        return {\n          success: true,\n          restored: true,\n          timestamp,\n          itemsRestored: 1247,\n        };\n\n      case 'memory_compress':\n        return {\n          success: true,\n          originalSize: '89.4 MB',\n          compressedSize: '23.1 MB',\n          compressionRatio: 0.26,\n          algorithm: 'gzip',\n        };\n\n      case 'memory_sync':\n        return {\n          success: true,\n          synced: true,\n          timestamp,\n          itemsSynced: 342,\n          conflicts: 0,\n        };\n\n      case 'cache_manage':\n        return {\n          success: true,\n          action: 'optimized',\n          entriesProcessed: 1523,\n          spaceSaved: '12.7 MB',\n          hitRateImprovement: 0.08,\n        };\n\n      case 'state_snapshot':\n        return {\n          success: true,\n          snapshotId: `snapshot-${Date.now()}`,\n          timestamp,\n          size: '8.9 MB',\n          components: 15,\n        };\n\n      case 'context_restore':\n        return {\n          success: true,\n          contextRestored: true,\n          timestamp,\n          itemsRestored: 89,\n          contextSize: '2.3 MB',\n        };\n\n      case 'memory_analytics':\n        return {\n          success: true,\n          analytics: {\n            totalMemory: 128.5,\n            activeMemory: 89.2,\n            efficiency: 0.87,\n            hitRate: 0.94,\n            operations: 15420,\n            insights: [\n              'Memory usage is optimal',\n              'Cache hit rate is excellent',\n              'No memory leaks detected',\n            ],\n          },\n        };\n\n      case 'memory_persist':\n        return {\n          success: true,\n          persisted: true,\n          timestamp,\n          sessionId: `session-${Date.now()}`,\n          size: '15.7 MB',\n        };\n\n      case 'memory_namespace':\n        return {\n          success: true,\n          namespaces: [\n            { id: 'default', size: '12.3 MB', items: 245 },\n            { id: 'cache', size: '8.7 MB', items: 156 },\n            { id: 'session', size: '3.2 MB', items: 78 },\n          ],\n        };\n\n      default:\n        return { success: true, data: {}, mock: true };\n    }\n  }\n\n  /**\n   * Send coordination notification\n   */\n  async sendCoordinationNotification(message) {\n    try {\n      if (this.wsClient) {\n        await this.wsClient.sendRequest({\n          type: 'coordination_notify',\n          message: message,\n          timestamp: new Date().toISOString(),\n          agent: 'memory-tools',\n        });\n      }\n    } catch (error) {\n      console.warn('Failed to send coordination notification:', error);\n    }\n  }\n\n  /**\n   * Handle tool execution result\n   */\n  handleToolResult(toolId, result) {\n    const tool = this.memoryTools[toolId];\n    if (!tool) return;\n\n    if (result && result.success) {\n      this.updateStatus(`${tool.name} completed successfully`, 'success');\n      this.updateOperationHistory(toolId, result);\n\n      // Refresh relevant data\n      this.refreshData();\n    } else {\n      this.updateStatus(`${tool.name} failed`, 'error');\n    }\n  }\n\n  /**\n   * Update operation history\n   */\n  updateOperationHistory(toolId, result) {\n    const operation = {\n      id: `op-${Date.now()}`,\n      tool: toolId,\n      toolName: this.memoryTools[toolId].name,\n      result: result,\n      timestamp: new Date().toISOString(),\n      success: result.success,\n    };\n\n    // Add to timeline\n    this.addToTimeline(operation);\n  }\n\n  /**\n   * Add operation to timeline\n   */\n  addToTimeline(operation) {\n    const timeline = document.getElementById('operationsTimeline');\n    if (!timeline) return;\n\n    if (timeline.querySelector('.timeline-placeholder')) {\n      timeline.innerHTML = '';\n    }\n\n    const operationElement = document.createElement('div');\n    operationElement.className = `timeline-item ${operation.success ? 'success' : 'error'}`;\n    operationElement.innerHTML = `\n      <div class=\"timeline-time\">${new Date(operation.timestamp).toLocaleTimeString()}</div>\n      <div class=\"timeline-content\">\n        <div class=\"timeline-title\">${operation.toolName}</div>\n        <div class=\"timeline-details\">${this.formatOperationResult(operation.result)}</div>\n      </div>\n    `;\n\n    timeline.insertBefore(operationElement, timeline.firstChild);\n\n    // Keep only last 20 operations\n    const items = timeline.querySelectorAll('.timeline-item');\n    if (items.length > 20) {\n      items[items.length - 1].remove();\n    }\n  }\n\n  /**\n   * Format operation result for display\n   */\n  formatOperationResult(result) {\n    if (result.size) return `Size: ${result.size}`;\n    if (result.compressionRatio)\n      return `Compression: ${(result.compressionRatio * 100).toFixed(1)}%`;\n    if (result.itemsSynced) return `Synced: ${result.itemsSynced} items`;\n    if (result.spaceSaved) return `Space saved: ${result.spaceSaved}`;\n    return 'Operation completed';\n  }\n\n  /**\n   * Update status display\n   */\n  updateStatus(text, type = 'info') {\n    const statusText = document.getElementById('memoryStatusText');\n    const statusIndicator = document.getElementById('memoryStatusIndicator');\n\n    if (statusText) {\n      statusText.textContent = text;\n    }\n\n    if (statusIndicator) {\n      statusIndicator.className = `status-indicator ${type}`;\n    }\n  }\n\n  /**\n   * Check memory status\n   */\n  async checkMemoryStatus() {\n    try {\n      const result = await this.callMemoryTool('memory_analytics');\n      this.handleMemoryStatus(result);\n    } catch (error) {\n      console.error('Failed to check memory status:', error);\n    }\n  }\n\n  /**\n   * Handle memory status response\n   */\n  handleMemoryStatus(status) {\n    if (status && status.success) {\n      this.updateStatus('Memory system ready', 'success');\n      if (status.analytics) {\n        this.updateMemoryMetrics(status.analytics);\n      }\n    } else {\n      this.updateStatus('Memory system error', 'error');\n    }\n  }\n\n  /**\n   * Load memory metrics\n   */\n  async loadMemoryMetrics() {\n    try {\n      const result = await this.callMemoryTool('memory_analytics');\n      if (result && result.success && result.analytics) {\n        this.updateMemoryMetrics(result.analytics);\n      }\n    } catch (error) {\n      console.error('Failed to load memory metrics:', error);\n    }\n  }\n\n  /**\n   * Update memory metrics display\n   */\n  updateMemoryMetrics(metrics) {\n    const totalMemoryElement = document.getElementById('totalMemory');\n    const activeMemoryElement = document.getElementById('activeMemory');\n    const efficiencyElement = document.getElementById('memoryEfficiency');\n    const hitRateElement = document.getElementById('cacheHitRate');\n\n    if (totalMemoryElement) {\n      totalMemoryElement.textContent = `${metrics.totalMemory.toFixed(1)} MB`;\n    }\n\n    if (activeMemoryElement) {\n      activeMemoryElement.textContent = `${metrics.activeMemory.toFixed(1)} MB`;\n    }\n\n    if (efficiencyElement) {\n      efficiencyElement.textContent = `${(metrics.efficiency * 100).toFixed(1)}%`;\n    }\n\n    if (hitRateElement) {\n      hitRateElement.textContent = `${(metrics.hitRate * 100).toFixed(1)}%`;\n    }\n\n    // Update insights\n    const insightsContainer = document.getElementById('performanceInsights');\n    if (insightsContainer && metrics.insights) {\n      insightsContainer.innerHTML = `\n        <div class=\"insights-list\">\n          ${metrics.insights\n            .map(\n              (insight) => `\n            <div class=\"insight-item\">\n              <span class=\"insight-icon\">üí°</span>\n              <span class=\"insight-text\">${insight}</span>\n            </div>\n          `,\n            )\n            .join('')}\n        </div>\n      `;\n    }\n  }\n\n  /**\n   * Load backup list\n   */\n  async loadBackupList() {\n    try {\n      // Mock backup data\n      const backups = [\n        {\n          id: 'backup-1',\n          name: 'Daily Backup',\n          size: '45.2 MB',\n          date: new Date(Date.now() - 86400000).toISOString(),\n        },\n        {\n          id: 'backup-2',\n          name: 'Weekly Backup',\n          size: '98.7 MB',\n          date: new Date(Date.now() - 604800000).toISOString(),\n        },\n        {\n          id: 'backup-3',\n          name: 'Manual Backup',\n          size: '23.1 MB',\n          date: new Date(Date.now() - 3600000).toISOString(),\n        },\n      ];\n\n      this.renderBackupList(backups);\n    } catch (error) {\n      console.error('Failed to load backup list:', error);\n    }\n  }\n\n  /**\n   * Render backup list\n   */\n  renderBackupList(backups) {\n    const backupList = document.getElementById('backupList');\n    if (!backupList) return;\n\n    if (backups.length === 0) {\n      backupList.innerHTML = '<div class=\"backups-placeholder\">No backups available</div>';\n      return;\n    }\n\n    backupList.innerHTML = backups\n      .map(\n        (backup) => `\n      <div class=\"backup-item\">\n        <div class=\"backup-info\">\n          <div class=\"backup-name\">${backup.name}</div>\n          <div class=\"backup-details\">\n            <span class=\"backup-size\">${backup.size}</span>\n            <span class=\"backup-date\">${new Date(backup.date).toLocaleDateString()}</span>\n          </div>\n        </div>\n        <div class=\"backup-actions\">\n          <button class=\"backup-action-btn\" data-action=\"restore\" data-backup=\"${backup.id}\" title=\"Restore\">\n            <span>üì•</span>\n          </button>\n          <button class=\"backup-action-btn\" data-action=\"download\" data-backup=\"${backup.id}\" title=\"Download\">\n            <span>‚¨áÔ∏è</span>\n          </button>\n          <button class=\"backup-action-btn\" data-action=\"delete\" data-backup=\"${backup.id}\" title=\"Delete\">\n            <span>üóëÔ∏è</span>\n          </button>\n        </div>\n      </div>\n    `,\n      )\n      .join('');\n\n    // Add event listeners for backup actions\n    backupList.querySelectorAll('.backup-action-btn').forEach((btn) => {\n      btn.addEventListener('click', (e) => {\n        const action = e.currentTarget.dataset.action;\n        const backupId = e.currentTarget.dataset.backup;\n        this.handleBackupAction(action, backupId);\n      });\n    });\n  }\n\n  /**\n   * Handle backup action\n   */\n  async handleBackupAction(action, backupId) {\n    try {\n      switch (action) {\n        case 'restore':\n          await this.restoreBackup(backupId);\n          break;\n        case 'download':\n          await this.downloadBackup(backupId);\n          break;\n        case 'delete':\n          await this.deleteBackup(backupId);\n          break;\n      }\n    } catch (error) {\n      console.error(`Failed to ${action} backup:`, error);\n      this.updateStatus(`Backup ${action} failed`, 'error');\n    }\n  }\n\n  /**\n   * Load cache statistics\n   */\n  async loadCacheStats() {\n    try {\n      const result = await this.callMemoryTool('cache_manage');\n      if (result && result.success) {\n        this.updateCacheStats({\n          size: '24.7 MB',\n          hitRate: 0.94,\n          entries: 1523,\n        });\n      }\n    } catch (error) {\n      console.error('Failed to load cache stats:', error);\n    }\n  }\n\n  /**\n   * Update cache statistics display\n   */\n  updateCacheStats(stats) {\n    const cacheSizeElement = document.getElementById('cacheSize');\n    const hitRateElement = document.getElementById('cacheHitRate2');\n    const entriesElement = document.getElementById('cacheEntries');\n\n    if (cacheSizeElement) {\n      cacheSizeElement.textContent = stats.size;\n    }\n\n    if (hitRateElement) {\n      hitRateElement.textContent = `${(stats.hitRate * 100).toFixed(1)}%`;\n    }\n\n    if (entriesElement) {\n      entriesElement.textContent = stats.entries;\n    }\n  }\n\n  /**\n   * Management actions\n   */\n  async createBackup() {\n    this.updateStatus('Creating backup...', 'processing');\n\n    try {\n      const result = await this.callMemoryTool('memory_backup');\n      if (result && result.success) {\n        this.updateStatus('Backup created successfully', 'success');\n        await this.loadBackupList();\n      }\n    } catch (error) {\n      console.error('Failed to create backup:', error);\n      this.updateStatus('Backup creation failed', 'error');\n    }\n  }\n\n  async scheduleBackup() {\n    // Mock implementation\n    const schedule = prompt('Enter backup schedule (e.g., \"daily at 2:00 AM\"):');\n    if (schedule) {\n      this.updateStatus(`Backup scheduled: ${schedule}`, 'success');\n    }\n  }\n\n  async clearCache() {\n    if (confirm('Are you sure you want to clear the cache?')) {\n      this.updateStatus('Clearing cache...', 'processing');\n\n      try {\n        const result = await this.callMemoryTool('cache_manage', { action: 'clear' });\n        if (result && result.success) {\n          this.updateStatus('Cache cleared successfully', 'success');\n          await this.loadCacheStats();\n        }\n      } catch (error) {\n        console.error('Failed to clear cache:', error);\n        this.updateStatus('Cache clear failed', 'error');\n      }\n    }\n  }\n\n  async optimizeCache() {\n    this.updateStatus('Optimizing cache...', 'processing');\n\n    try {\n      const result = await this.callMemoryTool('cache_manage', { action: 'optimize' });\n      if (result && result.success) {\n        this.updateStatus('Cache optimized successfully', 'success');\n        await this.loadCacheStats();\n      }\n    } catch (error) {\n      console.error('Failed to optimize cache:', error);\n      this.updateStatus('Cache optimization failed', 'error');\n    }\n  }\n\n  async createNamespace() {\n    const name = prompt('Enter namespace name:');\n    if (name) {\n      this.updateStatus(`Creating namespace: ${name}`, 'processing');\n\n      try {\n        const result = await this.callMemoryTool('memory_namespace', { action: 'create', name });\n        if (result && result.success) {\n          this.updateStatus(`Namespace ${name} created`, 'success');\n        }\n      } catch (error) {\n        console.error('Failed to create namespace:', error);\n        this.updateStatus('Namespace creation failed', 'error');\n      }\n    }\n  }\n\n  async cleanupNamespaces() {\n    if (confirm('Clean up unused namespaces?')) {\n      this.updateStatus('Cleaning up namespaces...', 'processing');\n\n      try {\n        const result = await this.callMemoryTool('memory_namespace', { action: 'cleanup' });\n        if (result && result.success) {\n          this.updateStatus('Namespaces cleaned up', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to cleanup namespaces:', error);\n        this.updateStatus('Namespace cleanup failed', 'error');\n      }\n    }\n  }\n\n  async restoreBackup(backupId) {\n    if (confirm('Are you sure you want to restore this backup?')) {\n      this.updateStatus('Restoring backup...', 'processing');\n\n      try {\n        const result = await this.callMemoryTool('memory_restore', { backupId });\n        if (result && result.success) {\n          this.updateStatus('Backup restored successfully', 'success');\n        }\n      } catch (error) {\n        console.error('Failed to restore backup:', error);\n        this.updateStatus('Backup restore failed', 'error');\n      }\n    }\n  }\n\n  async downloadBackup(backupId) {\n    // Mock download\n    this.updateStatus('Downloading backup...', 'processing');\n    setTimeout(() => {\n      this.updateStatus('Backup downloaded', 'success');\n    }, 1000);\n  }\n\n  async deleteBackup(backupId) {\n    if (confirm('Are you sure you want to delete this backup?')) {\n      this.updateStatus('Deleting backup...', 'processing');\n      setTimeout(() => {\n        this.updateStatus('Backup deleted', 'success');\n        this.loadBackupList();\n      }, 500);\n    }\n  }\n\n  /**\n   * Panel management\n   */\n  togglePanel() {\n    const panel = this.elements.panel;\n    if (panel) {\n      panel.classList.toggle('hidden');\n\n      if (!panel.classList.contains('hidden')) {\n        this.refreshData();\n      }\n    }\n  }\n\n  showPanel() {\n    const panel = this.elements.panel;\n    if (panel) {\n      panel.classList.remove('hidden');\n      this.refreshData();\n    }\n  }\n\n  hidePanel() {\n    const panel = this.elements.panel;\n    if (panel) {\n      panel.classList.add('hidden');\n    }\n  }\n\n  /**\n   * Switch to specific tab\n   */\n  switchTab(tabId) {\n    // Update tab buttons\n    const tabButtons = document.querySelectorAll('.memory-tab');\n    tabButtons.forEach((button) => {\n      button.classList.toggle('active', button.getAttribute('data-tab') === tabId);\n    });\n\n    // Update tab contents\n    const tabContents = document.querySelectorAll('.memory-tab-content');\n    tabContents.forEach((content) => {\n      content.classList.toggle('active', content.getAttribute('data-tab') === tabId);\n    });\n\n    // Load tab-specific data\n    this.loadTabData(tabId);\n  }\n\n  /**\n   * Load tab-specific data\n   */\n  async loadTabData(tabId) {\n    switch (tabId) {\n      case 'analytics':\n        await this.loadMemoryMetrics();\n        break;\n      case 'management':\n        await this.loadBackupList();\n        await this.loadCacheStats();\n        break;\n    }\n  }\n\n  /**\n   * Refresh all data\n   */\n  async refreshData() {\n    await this.loadInitialData();\n  }\n\n  /**\n   * Export memory data\n   */\n  async exportData() {\n    try {\n      const data = {\n        timestamp: new Date().toISOString(),\n        memoryMetrics: this.memoryStats,\n        backupHistory: Array.from(this.backupProgress.entries()),\n        cacheMetrics: this.cacheMetrics,\n        activeOperations: Array.from(this.activeOperations),\n        stats: this.getStats(),\n      };\n\n      // Create download\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `memory-data-${Date.now()}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      this.updateStatus('Data exported successfully', 'success');\n    } catch (error) {\n      console.error('Failed to export data:', error);\n      this.updateStatus('Export failed', 'error');\n    }\n  }\n\n  /**\n   * Get panel statistics\n   */\n  getStats() {\n    return {\n      initialized: this.isInitialized,\n      activeOperations: this.activeOperations.size,\n      toolsAvailable: Object.keys(this.memoryTools).length,\n      backupsCount: this.backupProgress.size,\n      memoryMetrics: this.memoryStats.size,\n    };\n  }\n\n  /**\n   * Cleanup resources\n   */\n  destroy() {\n    if (this.elements.panel) {\n      this.elements.panel.remove();\n    }\n\n    const toggleButton = document.getElementById('memoryToggle');\n    if (toggleButton) {\n      toggleButton.remove();\n    }\n\n    this.activeOperations.clear();\n    this.backupProgress.clear();\n    this.memoryStats.clear();\n    this.isInitialized = false;\n  }\n}\n\n// Export for module usage\nexport default MemoryToolsPanel;\n"],"names":["EventEmitter","MemoryToolsPanel","wsClient","isInitialized","backupProgress","Map","memoryStats","activeOperations","Set","cacheMetrics","elements","memoryTools","memory_backup","name","category","icon","memory_restore","memory_compress","memory_sync","cache_manage","cache_optimize","state_snapshot","context_restore","memory_analytics","memory_persist","memory_namespace","memory_defrag","memory_encrypt","memory_replicate","categories","backup","color","optimization","sync","cache","state","analytics","persistence","management","security","init","createPanelUI","setupEventListeners","setupWebSocketHandlers","loadInitialData","emit","error","console","panelContainer","document","createElement","id","className","header","createPanelHeader","appendChild","content","tabs","createTabs","tabContents","createTabContents","consoleMain","querySelector","panel","addToggleButton","memoryMetrics","backupList","operationProgress","cacheStats","analyticsChart","innerHTML","tabItems","forEach","tab","index","tabElement","setAttribute","toolsTab","createToolsTab","analyticsTab","createAnalyticsTab","managementTab","createManagementTab","Object","entries","categoryId","categorySection","categoryHeader","style","borderLeftColor","categoryGrid","populateToolsGrid","grid","toolsInCategory","filter","tool","toolId","toolCard","countElement","getElementById","textContent","length","headerRight","toggleButton","settingsButton","insertBefore","addEventListener","togglePanel","closeButton","hidePanel","refreshBtn","refreshData","exportBtn","exportData","tabButtons","querySelectorAll","button","tabId","getAttribute","switchTab","e","target","classList","contains","action","dataset","toolName","executeTool","configureTool","setupManagementActions","createBackupBtn","createBackup","scheduleBackupBtn","scheduleBackup","clearCacheBtn","clearCache","optimizeCacheBtn","optimizeCache","createNamespaceBtn","createNamespace","cleanupNamespacesBtn","cleanupNamespaces","on","data","updateBackupProgress","handleOperationComplete","updateMemoryMetrics","updateCacheStats","checkMemoryStatus","loadMemoryMetrics","loadBackupList","loadCacheStats","updateStatus","add","sendCoordinationNotification","result","callMemoryTool","handleToolResult","delete","showToolConfiguration","modal","getToolConfigForm","body","commonConfig","toolSpecificConfig","params","getStatus","response","sendRequest","type","warn","mcpResponse","callMCPTool","getMockResponse","mcpMapping","mcpFunction","Error","success","mock","timestamp","Date","toISOString","backupId","now","size","location","restored","itemsRestored","originalSize","compressedSize","compressionRatio","algorithm","synced","itemsSynced","conflicts","entriesProcessed","spaceSaved","hitRateImprovement","snapshotId","components","contextRestored","contextSize","totalMemory","activeMemory","efficiency","hitRate","operations","insights","persisted","sessionId","namespaces","items","message","agent","updateOperationHistory","operation","addToTimeline","timeline","operationElement","toLocaleTimeString","formatOperationResult","firstChild","remove","toFixed","text","statusText","statusIndicator","handleMemoryStatus","status","metrics","totalMemoryElement","activeMemoryElement","efficiencyElement","hitRateElement","insightsContainer","map","insight","join","backups","date","renderBackupList","toLocaleDateString","btn","currentTarget","handleBackupAction","restoreBackup","downloadBackup","deleteBackup","stats","cacheSizeElement","entriesElement","schedule","prompt","confirm","setTimeout","toggle","showPanel","loadTabData","backupHistory","Array","from","getStats","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","href","download","click","removeChild","revokeObjectURL","initialized","toolsAvailable","keys","backupsCount","destroy","clear"],"mappings":"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"}